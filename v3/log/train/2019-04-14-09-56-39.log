data.py 2019-04-14 09:56:40	The number of image for train is:                 16551
deprecation.py 2019-04-14 09:56:40	From /usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
deprecation.py 2019-04-14 09:56:45	From /usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv/weights
train.py 2019-04-14 09:56:57		MobilenetV2/Conv/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/Conv/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/Conv/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/Conv/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/Conv/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/expand/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/expand/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/expand/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/depthwise/depthwise_weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/project/weights
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/project/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/project/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/project/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv_1/weights
train.py 2019-04-14 09:56:57		MobilenetV2/Conv_1/weights
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv_1/BatchNorm/gamma
train.py 2019-04-14 09:56:57		MobilenetV2/Conv_1/BatchNorm/gamma
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv_1/BatchNorm/beta
train.py 2019-04-14 09:56:57		MobilenetV2/Conv_1/BatchNorm/beta
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv_1/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		MobilenetV2/Conv_1/BatchNorm/moving_mean
train.py 2019-04-14 09:56:57		YoloV3/MobilenetV2/Conv_1/BatchNorm/moving_variance
train.py 2019-04-14 09:56:57		MobilenetV2/Conv_1/BatchNorm/moving_variance
train.py 2019-04-14 09:57:04	Restoring weights from:	 weights/mobilenet_v2_1.0_224.ckpt
deprecation.py 2019-04-14 09:57:04	From /usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py:1266: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file APIs to check for files with this prefix.
saver.py 2019-04-14 09:57:04	Restoring parameters from weights/mobilenet_v2_1.0_224.ckpt
train.py 2019-04-14 09:59:11	Learn rate:	0.000020	period:	0	step:	137	train_loss:	2489.3260
train.py 2019-04-14 10:00:53	Learn rate:	0.000040	period:	0	step:	274	train_loss:	1293.6368
train.py 2019-04-14 10:02:35	Learn rate:	0.000060	period:	0	step:	411	train_loss:	604.0568
train.py 2019-04-14 10:04:14	Learn rate:	0.000079	period:	0	step:	548	train_loss:	285.9980
train.py 2019-04-14 10:05:47	Learn rate:	0.000099	period:	0	step:	685	train_loss:	156.5691
train.py 2019-04-14 10:07:28	Learn rate:	0.000119	period:	0	step:	822	train_loss:	108.1868
train.py 2019-04-14 10:09:07	Learn rate:	0.000139	period:	0	step:	959	train_loss:	79.9686
train.py 2019-04-14 10:10:51	Learn rate:	0.000159	period:	0	step:	1096	train_loss:	58.7836
train.py 2019-04-14 10:12:31	Learn rate:	0.000179	period:	0	step:	1233	train_loss:	45.0056
train.py 2019-04-14 10:14:12	Learn rate:	0.000199	period:	0	step:	1370	train_loss:	46.9692
train.py 2019-04-14 10:15:59	Learn rate:	0.000200	period:	1	step:	1507	train_loss:	39.6474
train.py 2019-04-14 10:17:32	Learn rate:	0.000200	period:	1	step:	1644	train_loss:	36.3905
train.py 2019-04-14 10:19:19	Learn rate:	0.000200	period:	1	step:	1781	train_loss:	35.0333
train.py 2019-04-14 10:21:02	Learn rate:	0.000200	period:	1	step:	1918	train_loss:	33.0702
train.py 2019-04-14 10:22:44	Learn rate:	0.000200	period:	1	step:	2055	train_loss:	31.6529
train.py 2019-04-14 10:24:23	Learn rate:	0.000200	period:	1	step:	2192	train_loss:	29.4319
train.py 2019-04-14 10:26:05	Learn rate:	0.000200	period:	1	step:	2329	train_loss:	29.6789
train.py 2019-04-14 10:27:47	Learn rate:	0.000200	period:	1	step:	2466	train_loss:	29.3080
train.py 2019-04-14 10:29:30	Learn rate:	0.000200	period:	1	step:	2603	train_loss:	28.8918
train.py 2019-04-14 10:31:11	Learn rate:	0.000200	period:	1	step:	2740	train_loss:	27.6995
train.py 2019-04-14 10:33:01	Learn rate:	0.000200	period:	2	step:	2877	train_loss:	28.1509
train.py 2019-04-14 10:34:48	Learn rate:	0.000200	period:	2	step:	3014	train_loss:	27.7329
train.py 2019-04-14 10:36:31	Learn rate:	0.000200	period:	2	step:	3151	train_loss:	26.2118
train.py 2019-04-14 10:38:14	Learn rate:	0.000200	period:	2	step:	3288	train_loss:	25.9035
train.py 2019-04-14 10:39:58	Learn rate:	0.000200	period:	2	step:	3425	train_loss:	25.9773
train.py 2019-04-14 10:41:41	Learn rate:	0.000200	period:	2	step:	3562	train_loss:	26.5589
train.py 2019-04-14 10:43:26	Learn rate:	0.000200	period:	2	step:	3699	train_loss:	25.7284
train.py 2019-04-14 10:45:07	Learn rate:	0.000200	period:	2	step:	3836	train_loss:	26.7671
train.py 2019-04-14 10:46:50	Learn rate:	0.000200	period:	2	step:	3973	train_loss:	25.1787
train.py 2019-04-14 10:48:29	Learn rate:	0.000200	period:	2	step:	4110	train_loss:	24.0238
train.py 2019-04-14 10:50:14	Learn rate:	0.000200	period:	3	step:	4247	train_loss:	23.6705
train.py 2019-04-14 10:52:04	Learn rate:	0.000200	period:	3	step:	4384	train_loss:	23.4784
train.py 2019-04-14 10:53:43	Learn rate:	0.000200	period:	3	step:	4521	train_loss:	24.2537
train.py 2019-04-14 10:55:23	Learn rate:	0.000200	period:	3	step:	4658	train_loss:	23.5125
train.py 2019-04-14 10:57:11	Learn rate:	0.000200	period:	3	step:	4795	train_loss:	23.9707
train.py 2019-04-14 10:58:58	Learn rate:	0.000200	period:	3	step:	4932	train_loss:	24.6004
train.py 2019-04-14 11:00:42	Learn rate:	0.000200	period:	3	step:	5069	train_loss:	23.4139
train.py 2019-04-14 11:02:22	Learn rate:	0.000200	period:	3	step:	5206	train_loss:	23.9137
train.py 2019-04-14 11:04:04	Learn rate:	0.000200	period:	3	step:	5343	train_loss:	24.7120
train.py 2019-04-14 11:05:43	Learn rate:	0.000200	period:	3	step:	5480	train_loss:	24.9750
train.py 2019-04-14 11:07:32	Learn rate:	0.000200	period:	4	step:	5617	train_loss:	23.3422
train.py 2019-04-14 11:09:10	Learn rate:	0.000199	period:	4	step:	5754	train_loss:	23.8056
train.py 2019-04-14 11:10:53	Learn rate:	0.000199	period:	4	step:	5891	train_loss:	22.7184
train.py 2019-04-14 11:12:36	Learn rate:	0.000199	period:	4	step:	6028	train_loss:	23.2222
train.py 2019-04-14 11:14:18	Learn rate:	0.000199	period:	4	step:	6165	train_loss:	22.5304
train.py 2019-04-14 11:15:59	Learn rate:	0.000199	period:	4	step:	6302	train_loss:	24.0006
train.py 2019-04-14 11:17:42	Learn rate:	0.000199	period:	4	step:	6439	train_loss:	23.4401
train.py 2019-04-14 11:19:27	Learn rate:	0.000199	period:	4	step:	6576	train_loss:	21.9438
train.py 2019-04-14 11:21:13	Learn rate:	0.000199	period:	4	step:	6713	train_loss:	22.8799
train.py 2019-04-14 11:22:53	Learn rate:	0.000199	period:	4	step:	6850	train_loss:	22.3262
train.py 2019-04-14 11:24:39	Learn rate:	0.000199	period:	5	step:	6987	train_loss:	21.1044
train.py 2019-04-14 11:26:21	Learn rate:	0.000199	period:	5	step:	7124	train_loss:	23.0688
train.py 2019-04-14 11:28:09	Learn rate:	0.000199	period:	5	step:	7261	train_loss:	21.3192
train.py 2019-04-14 11:29:52	Learn rate:	0.000199	period:	5	step:	7398	train_loss:	22.0369
train.py 2019-04-14 11:31:33	Learn rate:	0.000199	period:	5	step:	7535	train_loss:	21.7753
train.py 2019-04-14 11:33:13	Learn rate:	0.000199	period:	5	step:	7672	train_loss:	21.6136
train.py 2019-04-14 11:34:54	Learn rate:	0.000199	period:	5	step:	7809	train_loss:	22.4341
train.py 2019-04-14 11:36:33	Learn rate:	0.000199	period:	5	step:	7946	train_loss:	23.0050
train.py 2019-04-14 11:38:20	Learn rate:	0.000199	period:	5	step:	8083	train_loss:	21.3528
train.py 2019-04-14 11:40:03	Learn rate:	0.000199	period:	5	step:	8220	train_loss:	22.4141
train.py 2019-04-14 11:41:48	Learn rate:	0.000199	period:	6	step:	8357	train_loss:	21.9293
train.py 2019-04-14 11:43:34	Learn rate:	0.000199	period:	6	step:	8494	train_loss:	21.6100
train.py 2019-04-14 11:45:15	Learn rate:	0.000199	period:	6	step:	8631	train_loss:	21.0276
train.py 2019-04-14 11:46:55	Learn rate:	0.000199	period:	6	step:	8768	train_loss:	21.1606
train.py 2019-04-14 11:48:42	Learn rate:	0.000199	period:	6	step:	8905	train_loss:	21.7720
train.py 2019-04-14 11:50:23	Learn rate:	0.000198	period:	6	step:	9042	train_loss:	21.2813
train.py 2019-04-14 11:52:05	Learn rate:	0.000198	period:	6	step:	9179	train_loss:	20.4385
train.py 2019-04-14 11:53:49	Learn rate:	0.000198	period:	6	step:	9316	train_loss:	21.0325
train.py 2019-04-14 11:55:34	Learn rate:	0.000198	period:	6	step:	9453	train_loss:	21.2253
train.py 2019-04-14 11:57:16	Learn rate:	0.000198	period:	6	step:	9590	train_loss:	22.0201
train.py 2019-04-14 11:59:00	Learn rate:	0.000198	period:	7	step:	9727	train_loss:	20.7032
train.py 2019-04-14 12:00:45	Learn rate:	0.000198	period:	7	step:	9864	train_loss:	20.1856
train.py 2019-04-14 12:02:34	Learn rate:	0.000198	period:	7	step:	10001	train_loss:	20.0381
train.py 2019-04-14 12:04:18	Learn rate:	0.000198	period:	7	step:	10138	train_loss:	20.2054
train.py 2019-04-14 12:06:02	Learn rate:	0.000198	period:	7	step:	10275	train_loss:	21.0025
train.py 2019-04-14 12:07:44	Learn rate:	0.000198	period:	7	step:	10412	train_loss:	20.8299
train.py 2019-04-14 12:09:28	Learn rate:	0.000198	period:	7	step:	10549	train_loss:	20.3820
train.py 2019-04-14 12:11:07	Learn rate:	0.000198	period:	7	step:	10686	train_loss:	20.6696
train.py 2019-04-14 12:12:48	Learn rate:	0.000198	period:	7	step:	10823	train_loss:	20.8000
train.py 2019-04-14 12:14:30	Learn rate:	0.000198	period:	7	step:	10960	train_loss:	20.9874
train.py 2019-04-14 12:16:14	Learn rate:	0.000198	period:	8	step:	11097	train_loss:	20.5813
train.py 2019-04-14 12:17:57	Learn rate:	0.000197	period:	8	step:	11234	train_loss:	19.6642
train.py 2019-04-14 12:19:36	Learn rate:	0.000197	period:	8	step:	11371	train_loss:	19.7319
train.py 2019-04-14 12:21:24	Learn rate:	0.000197	period:	8	step:	11508	train_loss:	20.4948
train.py 2019-04-14 12:23:00	Learn rate:	0.000197	period:	8	step:	11645	train_loss:	20.1399
train.py 2019-04-14 12:24:47	Learn rate:	0.000197	period:	8	step:	11782	train_loss:	20.7595
train.py 2019-04-14 12:26:25	Learn rate:	0.000197	period:	8	step:	11919	train_loss:	20.4864
train.py 2019-04-14 12:28:09	Learn rate:	0.000197	period:	8	step:	12056	train_loss:	19.8448
train.py 2019-04-14 12:29:55	Learn rate:	0.000197	period:	8	step:	12193	train_loss:	20.1016
train.py 2019-04-14 12:31:32	Learn rate:	0.000197	period:	8	step:	12330	train_loss:	20.6830
train.py 2019-04-14 12:33:23	Learn rate:	0.000197	period:	9	step:	12467	train_loss:	20.5926
train.py 2019-04-14 12:35:01	Learn rate:	0.000197	period:	9	step:	12604	train_loss:	20.5096
train.py 2019-04-14 12:36:45	Learn rate:	0.000197	period:	9	step:	12741	train_loss:	19.0443
train.py 2019-04-14 12:38:26	Learn rate:	0.000197	period:	9	step:	12878	train_loss:	19.7312
train.py 2019-04-14 12:40:08	Learn rate:	0.000196	period:	9	step:	13015	train_loss:	18.3133
train.py 2019-04-14 12:41:51	Learn rate:	0.000196	period:	9	step:	13152	train_loss:	20.0310
train.py 2019-04-14 12:43:37	Learn rate:	0.000196	period:	9	step:	13289	train_loss:	18.7263
train.py 2019-04-14 12:45:21	Learn rate:	0.000196	period:	9	step:	13426	train_loss:	18.8455
train.py 2019-04-14 12:47:01	Learn rate:	0.000196	period:	9	step:	13563	train_loss:	19.0029
train.py 2019-04-14 12:48:43	Learn rate:	0.000196	period:	9	step:	13700	train_loss:	20.5584
train.py 2019-04-14 12:50:30	Learn rate:	0.000196	period:	10	step:	13837	train_loss:	20.0676
train.py 2019-04-14 12:52:15	Learn rate:	0.000196	period:	10	step:	13974	train_loss:	18.8299
train.py 2019-04-14 12:54:01	Learn rate:	0.000196	period:	10	step:	14111	train_loss:	18.4442
train.py 2019-04-14 12:55:43	Learn rate:	0.000196	period:	10	step:	14248	train_loss:	19.5286
train.py 2019-04-14 12:57:28	Learn rate:	0.000196	period:	10	step:	14385	train_loss:	18.9107
train.py 2019-04-14 12:59:07	Learn rate:	0.000195	period:	10	step:	14522	train_loss:	19.9028
train.py 2019-04-14 01:00:56	Learn rate:	0.000195	period:	10	step:	14659	train_loss:	20.0081
train.py 2019-04-14 01:02:44	Learn rate:	0.000195	period:	10	step:	14796	train_loss:	19.0553
train.py 2019-04-14 01:04:29	Learn rate:	0.000195	period:	10	step:	14933	train_loss:	18.9844
train.py 2019-04-14 01:06:13	Learn rate:	0.000195	period:	10	step:	15070	train_loss:	18.8786
train.py 2019-04-14 01:07:59	Learn rate:	0.000195	period:	11	step:	15207	train_loss:	18.9139
train.py 2019-04-14 01:09:41	Learn rate:	0.000195	period:	11	step:	15344	train_loss:	18.6850
train.py 2019-04-14 01:11:24	Learn rate:	0.000195	period:	11	step:	15481	train_loss:	19.0782
train.py 2019-04-14 01:13:07	Learn rate:	0.000195	period:	11	step:	15618	train_loss:	18.1998
train.py 2019-04-14 01:14:49	Learn rate:	0.000195	period:	11	step:	15755	train_loss:	18.7871
train.py 2019-04-14 01:16:31	Learn rate:	0.000195	period:	11	step:	15892	train_loss:	18.3765
train.py 2019-04-14 01:18:18	Learn rate:	0.000194	period:	11	step:	16029	train_loss:	18.0291
train.py 2019-04-14 01:20:05	Learn rate:	0.000194	period:	11	step:	16166	train_loss:	18.7824
train.py 2019-04-14 01:21:49	Learn rate:	0.000194	period:	11	step:	16303	train_loss:	19.2405
train.py 2019-04-14 01:23:28	Learn rate:	0.000194	period:	11	step:	16440	train_loss:	18.7938
train.py 2019-04-14 01:25:18	Learn rate:	0.000194	period:	12	step:	16577	train_loss:	18.3461
train.py 2019-04-14 01:27:02	Learn rate:	0.000194	period:	12	step:	16714	train_loss:	18.4610
train.py 2019-04-14 01:28:49	Learn rate:	0.000194	period:	12	step:	16851	train_loss:	17.8490
train.py 2019-04-14 01:30:28	Learn rate:	0.000194	period:	12	step:	16988	train_loss:	18.5077
train.py 2019-04-14 01:32:11	Learn rate:	0.000194	period:	12	step:	17125	train_loss:	17.5397
train.py 2019-04-14 01:33:48	Learn rate:	0.000193	period:	12	step:	17262	train_loss:	17.9302
train.py 2019-04-14 01:35:32	Learn rate:	0.000193	period:	12	step:	17399	train_loss:	18.5760
train.py 2019-04-14 01:37:15	Learn rate:	0.000193	period:	12	step:	17536	train_loss:	19.2570
train.py 2019-04-14 01:39:01	Learn rate:	0.000193	period:	12	step:	17673	train_loss:	18.9968
train.py 2019-04-14 01:40:44	Learn rate:	0.000193	period:	12	step:	17810	train_loss:	18.0675
train.py 2019-04-14 01:42:33	Learn rate:	0.000193	period:	13	step:	17947	train_loss:	19.1550
train.py 2019-04-14 01:44:18	Learn rate:	0.000193	period:	13	step:	18084	train_loss:	18.1123
train.py 2019-04-14 01:45:57	Learn rate:	0.000193	period:	13	step:	18221	train_loss:	18.3607
train.py 2019-04-14 01:47:38	Learn rate:	0.000193	period:	13	step:	18358	train_loss:	17.5521
train.py 2019-04-14 01:49:23	Learn rate:	0.000192	period:	13	step:	18495	train_loss:	17.3875
train.py 2019-04-14 01:51:02	Learn rate:	0.000192	period:	13	step:	18632	train_loss:	17.1952
train.py 2019-04-14 01:52:47	Learn rate:	0.000192	period:	13	step:	18769	train_loss:	17.8821
train.py 2019-04-14 01:54:32	Learn rate:	0.000192	period:	13	step:	18906	train_loss:	18.4631
train.py 2019-04-14 01:56:17	Learn rate:	0.000192	period:	13	step:	19043	train_loss:	17.5996
train.py 2019-04-14 01:58:04	Learn rate:	0.000192	period:	13	step:	19180	train_loss:	18.3768
train.py 2019-04-14 01:59:51	Learn rate:	0.000192	period:	14	step:	19317	train_loss:	17.5640
train.py 2019-04-14 02:01:30	Learn rate:	0.000192	period:	14	step:	19454	train_loss:	17.3309
train.py 2019-04-14 02:03:10	Learn rate:	0.000191	period:	14	step:	19591	train_loss:	17.9678
train.py 2019-04-14 02:04:55	Learn rate:	0.000191	period:	14	step:	19728	train_loss:	18.0721
train.py 2019-04-14 02:06:37	Learn rate:	0.000191	period:	14	step:	19865	train_loss:	18.4879
train.py 2019-04-14 02:08:16	Learn rate:	0.000191	period:	14	step:	20002	train_loss:	17.5205
train.py 2019-04-14 02:10:01	Learn rate:	0.000191	period:	14	step:	20139	train_loss:	17.7928
train.py 2019-04-14 02:11:47	Learn rate:	0.000191	period:	14	step:	20276	train_loss:	18.0415
train.py 2019-04-14 02:13:24	Learn rate:	0.000191	period:	14	step:	20413	train_loss:	17.8367
train.py 2019-04-14 02:15:04	Learn rate:	0.000190	period:	14	step:	20550	train_loss:	16.8990
train.py 2019-04-14 02:16:54	Learn rate:	0.000190	period:	15	step:	20687	train_loss:	17.8531
train.py 2019-04-14 02:18:40	Learn rate:	0.000190	period:	15	step:	20824	train_loss:	18.0670
train.py 2019-04-14 02:20:22	Learn rate:	0.000190	period:	15	step:	20961	train_loss:	17.3701
train.py 2019-04-14 02:22:06	Learn rate:	0.000190	period:	15	step:	21098	train_loss:	18.2224
train.py 2019-04-14 02:23:42	Learn rate:	0.000190	period:	15	step:	21235	train_loss:	17.1574
train.py 2019-04-14 02:25:28	Learn rate:	0.000190	period:	15	step:	21372	train_loss:	16.7218
train.py 2019-04-14 02:27:12	Learn rate:	0.000190	period:	15	step:	21509	train_loss:	17.8705
train.py 2019-04-14 02:28:53	Learn rate:	0.000189	period:	15	step:	21646	train_loss:	17.4509
train.py 2019-04-14 02:30:34	Learn rate:	0.000189	period:	15	step:	21783	train_loss:	17.5476
train.py 2019-04-14 02:32:18	Learn rate:	0.000189	period:	15	step:	21920	train_loss:	17.3169
train.py 2019-04-14 02:33:58	Learn rate:	0.000189	period:	15	step:	22057	train_loss:	17.9295
train.py 2019-04-14 02:35:48	Learn rate:	0.000189	period:	16	step:	22194	train_loss:	16.5040
train.py 2019-04-14 02:37:38	Learn rate:	0.000189	period:	16	step:	22331	train_loss:	16.2023
train.py 2019-04-14 02:39:25	Learn rate:	0.000189	period:	16	step:	22468	train_loss:	17.3384
train.py 2019-04-14 02:41:08	Learn rate:	0.000188	period:	16	step:	22605	train_loss:	17.0193
train.py 2019-04-14 02:42:45	Learn rate:	0.000188	period:	16	step:	22742	train_loss:	17.7186
train.py 2019-04-14 02:44:31	Learn rate:	0.000188	period:	16	step:	22879	train_loss:	18.0479
train.py 2019-04-14 02:46:14	Learn rate:	0.000188	period:	16	step:	23016	train_loss:	16.9369
train.py 2019-04-14 02:47:52	Learn rate:	0.000188	period:	16	step:	23153	train_loss:	17.1581
train.py 2019-04-14 02:49:33	Learn rate:	0.000188	period:	16	step:	23290	train_loss:	16.6969
train.py 2019-04-14 02:51:22	Learn rate:	0.000187	period:	16	step:	23427	train_loss:	16.8981
train.py 2019-04-14 02:53:05	Learn rate:	0.000187	period:	17	step:	23564	train_loss:	17.1219
train.py 2019-04-14 02:54:48	Learn rate:	0.000187	period:	17	step:	23701	train_loss:	17.0767
train.py 2019-04-14 02:56:31	Learn rate:	0.000187	period:	17	step:	23838	train_loss:	17.4560
train.py 2019-04-14 02:58:11	Learn rate:	0.000187	period:	17	step:	23975	train_loss:	17.0460
train.py 2019-04-14 02:59:52	Learn rate:	0.000187	period:	17	step:	24112	train_loss:	16.8087
train.py 2019-04-14 03:01:32	Learn rate:	0.000187	period:	17	step:	24249	train_loss:	17.0890
train.py 2019-04-14 03:03:17	Learn rate:	0.000186	period:	17	step:	24386	train_loss:	16.4618
train.py 2019-04-14 03:05:00	Learn rate:	0.000186	period:	17	step:	24523	train_loss:	17.8079
train.py 2019-04-14 03:06:44	Learn rate:	0.000186	period:	17	step:	24660	train_loss:	16.9355
train.py 2019-04-14 03:08:25	Learn rate:	0.000186	period:	17	step:	24797	train_loss:	17.0416
train.py 2019-04-14 03:10:14	Learn rate:	0.000186	period:	18	step:	24934	train_loss:	16.6126
train.py 2019-04-14 03:11:56	Learn rate:	0.000186	period:	18	step:	25071	train_loss:	17.2410
train.py 2019-04-14 03:13:38	Learn rate:	0.000185	period:	18	step:	25208	train_loss:	16.4935
train.py 2019-04-14 03:15:23	Learn rate:	0.000185	period:	18	step:	25345	train_loss:	16.4194
train.py 2019-04-14 03:17:09	Learn rate:	0.000185	period:	18	step:	25482	train_loss:	16.6084
train.py 2019-04-14 03:18:56	Learn rate:	0.000185	period:	18	step:	25619	train_loss:	16.4076
train.py 2019-04-14 03:20:38	Learn rate:	0.000185	period:	18	step:	25756	train_loss:	16.8852
train.py 2019-04-14 03:22:21	Learn rate:	0.000185	period:	18	step:	25893	train_loss:	16.4531
train.py 2019-04-14 03:24:04	Learn rate:	0.000184	period:	18	step:	26030	train_loss:	15.9136
train.py 2019-04-14 03:25:44	Learn rate:	0.000184	period:	18	step:	26167	train_loss:	16.9027
train.py 2019-04-14 03:27:30	Learn rate:	0.000184	period:	19	step:	26304	train_loss:	16.2031
train.py 2019-04-14 03:29:19	Learn rate:	0.000184	period:	19	step:	26441	train_loss:	17.5591
train.py 2019-04-14 03:30:59	Learn rate:	0.000184	period:	19	step:	26578	train_loss:	16.2892
train.py 2019-04-14 03:32:45	Learn rate:	0.000184	period:	19	step:	26715	train_loss:	17.1545
train.py 2019-04-14 03:34:29	Learn rate:	0.000183	period:	19	step:	26852	train_loss:	17.6641
train.py 2019-04-14 03:36:12	Learn rate:	0.000183	period:	19	step:	26989	train_loss:	16.2159
train.py 2019-04-14 03:37:50	Learn rate:	0.000183	period:	19	step:	27126	train_loss:	15.7532
train.py 2019-04-14 03:39:30	Learn rate:	0.000183	period:	19	step:	27263	train_loss:	16.4447
train.py 2019-04-14 03:41:13	Learn rate:	0.000183	period:	19	step:	27400	train_loss:	17.2316
train.py 2019-04-14 03:42:54	Learn rate:	0.000183	period:	19	step:	27537	train_loss:	15.9537
train.py 2019-04-14 03:44:40	Learn rate:	0.000182	period:	20	step:	27674	train_loss:	15.7571
train.py 2019-04-14 03:46:22	Learn rate:	0.000182	period:	20	step:	27811	train_loss:	17.3473
train.py 2019-04-14 03:48:00	Learn rate:	0.000182	period:	20	step:	27948	train_loss:	15.3743
train.py 2019-04-14 03:49:45	Learn rate:	0.000182	period:	20	step:	28085	train_loss:	16.2334
train.py 2019-04-14 03:51:28	Learn rate:	0.000182	period:	20	step:	28222	train_loss:	15.9245
train.py 2019-04-14 03:53:11	Learn rate:	0.000181	period:	20	step:	28359	train_loss:	15.6987
train.py 2019-04-14 03:54:56	Learn rate:	0.000181	period:	20	step:	28496	train_loss:	15.5651
train.py 2019-04-14 03:56:34	Learn rate:	0.000181	period:	20	step:	28633	train_loss:	16.6808
train.py 2019-04-14 03:58:21	Learn rate:	0.000181	period:	20	step:	28770	train_loss:	16.7959
train.py 2019-04-14 04:00:04	Learn rate:	0.000181	period:	20	step:	28907	train_loss:	16.2151
train.py 2019-04-14 04:01:47	Learn rate:	0.000181	period:	21	step:	29044	train_loss:	16.3782
train.py 2019-04-14 04:03:31	Learn rate:	0.000180	period:	21	step:	29181	train_loss:	15.9724
train.py 2019-04-14 04:05:14	Learn rate:	0.000180	period:	21	step:	29318	train_loss:	16.0021
train.py 2019-04-14 04:06:56	Learn rate:	0.000180	period:	21	step:	29455	train_loss:	16.0338
train.py 2019-04-14 04:08:32	Learn rate:	0.000180	period:	21	step:	29592	train_loss:	16.5251
train.py 2019-04-14 04:10:14	Learn rate:	0.000180	period:	21	step:	29729	train_loss:	15.6559
train.py 2019-04-14 04:11:55	Learn rate:	0.000179	period:	21	step:	29866	train_loss:	16.3641
train.py 2019-04-14 04:13:44	Learn rate:	0.000179	period:	21	step:	30003	train_loss:	16.8748
train.py 2019-04-14 04:15:28	Learn rate:	0.000179	period:	21	step:	30140	train_loss:	15.2217
train.py 2019-04-14 04:17:08	Learn rate:	0.000179	period:	21	step:	30277	train_loss:	16.0547
train.py 2019-04-14 04:24:42	AP for sheep = 0.7403
train.py 2019-04-14 04:24:42	AP for horse = 0.8213
train.py 2019-04-14 04:24:42	AP for bicycle = 0.8162
train.py 2019-04-14 04:24:42	AP for aeroplane = 0.7725
train.py 2019-04-14 04:24:42	AP for cow = 0.7271
train.py 2019-04-14 04:24:42	AP for sofa = 0.6747
train.py 2019-04-14 04:24:42	AP for bus = 0.7742
train.py 2019-04-14 04:24:42	AP for dog = 0.7613
train.py 2019-04-14 04:24:42	AP for cat = 0.8119
train.py 2019-04-14 04:24:42	AP for person = 0.7903
train.py 2019-04-14 04:24:42	AP for train = 0.7918
train.py 2019-04-14 04:24:42	AP for diningtable = 0.6901
train.py 2019-04-14 04:24:42	AP for bottle = 0.5303
train.py 2019-04-14 04:24:42	AP for car = 0.8329
train.py 2019-04-14 04:24:42	AP for pottedplant = 0.4331
train.py 2019-04-14 04:24:42	AP for tvmonitor = 0.6733
train.py 2019-04-14 04:24:42	AP for chair = 0.5115
train.py 2019-04-14 04:24:42	AP for bird = 0.6851
train.py 2019-04-14 04:24:42	AP for boat = 0.5479
train.py 2019-04-14 04:24:42	AP for motorbike = 0.7697
train.py 2019-04-14 04:24:42	mAP = 0.7078
train.py 2019-04-14 04:24:42	Average time for preprocess (cpu) :	5.43 ms
train.py 2019-04-14 04:24:42	Average time for postprocess (cpu) :	6.38 ms
train.py 2019-04-14 04:24:42	Average time for nms (cpu) :	33.00 ms
train.py 2019-04-14 04:24:42	Average time for detect a image (cpu + gpu) :	63.99 ms
train.py 2019-04-14 04:24:42	Average time for inference (gpu) :	18.85 ms
train.py 2019-04-14 04:24:44	Saved model:	weights/yolo.ckpt-21-0.7078
train.py 2019-04-14 04:25:38	Learn rate:	0.000179	period:	22	step:	30414	train_loss:	16.8376
train.py 2019-04-14 04:27:15	Learn rate:	0.000178	period:	22	step:	30551	train_loss:	16.3779
train.py 2019-04-14 04:28:54	Learn rate:	0.000178	period:	22	step:	30688	train_loss:	15.5656
train.py 2019-04-14 04:30:35	Learn rate:	0.000178	period:	22	step:	30825	train_loss:	15.9569
train.py 2019-04-14 04:32:20	Learn rate:	0.000178	period:	22	step:	30962	train_loss:	15.6579
train.py 2019-04-14 04:34:05	Learn rate:	0.000178	period:	22	step:	31099	train_loss:	15.7719
train.py 2019-04-14 04:35:51	Learn rate:	0.000177	period:	22	step:	31236	train_loss:	16.5043
train.py 2019-04-14 04:37:29	Learn rate:	0.000177	period:	22	step:	31373	train_loss:	15.9782
train.py 2019-04-14 04:39:16	Learn rate:	0.000177	period:	22	step:	31510	train_loss:	16.4883
train.py 2019-04-14 04:40:59	Learn rate:	0.000177	period:	22	step:	31647	train_loss:	16.0828
train.py 2019-04-14 04:49:32	AP for sheep = 0.7738
train.py 2019-04-14 04:49:32	AP for horse = 0.8121
train.py 2019-04-14 04:49:32	AP for bicycle = 0.8273
train.py 2019-04-14 04:49:32	AP for aeroplane = 0.7499
train.py 2019-04-14 04:49:32	AP for cow = 0.7187
train.py 2019-04-14 04:49:32	AP for sofa = 0.7205
train.py 2019-04-14 04:49:32	AP for bus = 0.7875
train.py 2019-04-14 04:49:32	AP for dog = 0.7774
train.py 2019-04-14 04:49:32	AP for cat = 0.8270
train.py 2019-04-14 04:49:32	AP for person = 0.7903
train.py 2019-04-14 04:49:32	AP for train = 0.8255
train.py 2019-04-14 04:49:32	AP for diningtable = 0.7179
train.py 2019-04-14 04:49:32	AP for bottle = 0.5428
train.py 2019-04-14 04:49:32	AP for car = 0.8424
train.py 2019-04-14 04:49:32	AP for pottedplant = 0.4449
train.py 2019-04-14 04:49:32	AP for tvmonitor = 0.7140
train.py 2019-04-14 04:49:32	AP for chair = 0.5262
train.py 2019-04-14 04:49:32	AP for bird = 0.6932
train.py 2019-04-14 04:49:32	AP for boat = 0.6031
train.py 2019-04-14 04:49:32	AP for motorbike = 0.7547
train.py 2019-04-14 04:49:32	mAP = 0.7225
train.py 2019-04-14 04:49:32	Average time for preprocess (cpu) :	5.40 ms
train.py 2019-04-14 04:49:32	Average time for postprocess (cpu) :	6.17 ms
train.py 2019-04-14 04:49:32	Average time for nms (cpu) :	41.01 ms
train.py 2019-04-14 04:49:32	Average time for detect a image (cpu + gpu) :	71.66 ms
train.py 2019-04-14 04:49:32	Average time for inference (gpu) :	18.68 ms
train.py 2019-04-14 04:49:34	Saved model:	weights/yolo.ckpt-22-0.7225
train.py 2019-04-14 04:50:23	Learn rate:	0.000177	period:	23	step:	31784	train_loss:	16.0186
train.py 2019-04-14 04:52:01	Learn rate:	0.000176	period:	23	step:	31921	train_loss:	15.5614
train.py 2019-04-14 04:53:44	Learn rate:	0.000176	period:	23	step:	32058	train_loss:	15.6924
train.py 2019-04-14 04:55:23	Learn rate:	0.000176	period:	23	step:	32195	train_loss:	16.0812
train.py 2019-04-14 04:57:06	Learn rate:	0.000176	period:	23	step:	32332	train_loss:	14.9431
train.py 2019-04-14 04:58:46	Learn rate:	0.000176	period:	23	step:	32469	train_loss:	15.8285
train.py 2019-04-14 05:00:29	Learn rate:	0.000175	period:	23	step:	32606	train_loss:	15.9030
train.py 2019-04-14 05:02:10	Learn rate:	0.000175	period:	23	step:	32743	train_loss:	15.8390
train.py 2019-04-14 05:03:54	Learn rate:	0.000175	period:	23	step:	32880	train_loss:	15.2518
train.py 2019-04-14 05:05:34	Learn rate:	0.000175	period:	23	step:	33017	train_loss:	16.0620
train.py 2019-04-14 05:13:14	AP for sheep = 0.6242
train.py 2019-04-14 05:13:14	AP for horse = 0.8468
train.py 2019-04-14 05:13:14	AP for bicycle = 0.8121
train.py 2019-04-14 05:13:14	AP for aeroplane = 0.6923
train.py 2019-04-14 05:13:14	AP for cow = 0.6173
train.py 2019-04-14 05:13:14	AP for sofa = 0.6990
train.py 2019-04-14 05:13:14	AP for bus = 0.7800
train.py 2019-04-14 05:13:14	AP for dog = 0.7580
train.py 2019-04-14 05:13:14	AP for cat = 0.7837
train.py 2019-04-14 05:13:14	AP for person = 0.8086
train.py 2019-04-14 05:13:14	AP for train = 0.7934
train.py 2019-04-14 05:13:14	AP for diningtable = 0.7310
train.py 2019-04-14 05:13:14	AP for bottle = 0.5456
train.py 2019-04-14 05:13:14	AP for car = 0.8322
train.py 2019-04-14 05:13:14	AP for pottedplant = 0.4292
train.py 2019-04-14 05:13:14	AP for tvmonitor = 0.7044
train.py 2019-04-14 05:13:14	AP for chair = 0.5166
train.py 2019-04-14 05:13:14	AP for bird = 0.6852
train.py 2019-04-14 05:13:14	AP for boat = 0.5791
train.py 2019-04-14 05:13:14	AP for motorbike = 0.7721
train.py 2019-04-14 05:13:14	mAP = 0.7005
train.py 2019-04-14 05:13:14	Average time for preprocess (cpu) :	5.46 ms
train.py 2019-04-14 05:13:14	Average time for postprocess (cpu) :	6.39 ms
train.py 2019-04-14 05:13:14	Average time for nms (cpu) :	31.71 ms
train.py 2019-04-14 05:13:14	Average time for detect a image (cpu + gpu) :	62.84 ms
train.py 2019-04-14 05:13:14	Average time for inference (gpu) :	18.92 ms
train.py 2019-04-14 05:13:16	Saved model:	weights/yolo.ckpt-23-0.7005
train.py 2019-04-14 05:14:02	Learn rate:	0.000175	period:	24	step:	33154	train_loss:	16.4447
train.py 2019-04-14 05:15:38	Learn rate:	0.000174	period:	24	step:	33291	train_loss:	15.1346
train.py 2019-04-14 05:17:19	Learn rate:	0.000174	period:	24	step:	33428	train_loss:	15.7817
train.py 2019-04-14 05:19:05	Learn rate:	0.000174	period:	24	step:	33565	train_loss:	15.7987
train.py 2019-04-14 05:20:51	Learn rate:	0.000174	period:	24	step:	33702	train_loss:	15.7118
train.py 2019-04-14 05:22:35	Learn rate:	0.000174	period:	24	step:	33839	train_loss:	14.9980
train.py 2019-04-14 05:24:17	Learn rate:	0.000173	period:	24	step:	33976	train_loss:	15.9871
train.py 2019-04-14 05:25:55	Learn rate:	0.000173	period:	24	step:	34113	train_loss:	15.7301
train.py 2019-04-14 05:27:40	Learn rate:	0.000173	period:	24	step:	34250	train_loss:	15.5096
train.py 2019-04-14 05:29:22	Learn rate:	0.000173	period:	24	step:	34387	train_loss:	15.7440
train.py 2019-04-14 05:37:00	AP for sheep = 0.7225
train.py 2019-04-14 05:37:00	AP for horse = 0.8573
train.py 2019-04-14 05:37:00	AP for bicycle = 0.8196
train.py 2019-04-14 05:37:00	AP for aeroplane = 0.7294
train.py 2019-04-14 05:37:00	AP for cow = 0.7059
train.py 2019-04-14 05:37:00	AP for sofa = 0.6657
train.py 2019-04-14 05:37:00	AP for bus = 0.7662
train.py 2019-04-14 05:37:00	AP for dog = 0.7903
train.py 2019-04-14 05:37:00	AP for cat = 0.8291
train.py 2019-04-14 05:37:00	AP for person = 0.7969
train.py 2019-04-14 05:37:00	AP for train = 0.7689
train.py 2019-04-14 05:37:00	AP for diningtable = 0.7108
train.py 2019-04-14 05:37:00	AP for bottle = 0.5688
train.py 2019-04-14 05:37:00	AP for car = 0.8594
train.py 2019-04-14 05:37:00	AP for pottedplant = 0.3994
train.py 2019-04-14 05:37:00	AP for tvmonitor = 0.6934
train.py 2019-04-14 05:37:00	AP for chair = 0.5347
train.py 2019-04-14 05:37:00	AP for bird = 0.6201
train.py 2019-04-14 05:37:00	AP for boat = 0.5759
train.py 2019-04-14 05:37:00	AP for motorbike = 0.7981
train.py 2019-04-14 05:37:00	mAP = 0.7106
train.py 2019-04-14 05:37:00	Average time for preprocess (cpu) :	5.42 ms
train.py 2019-04-14 05:37:00	Average time for postprocess (cpu) :	6.37 ms
train.py 2019-04-14 05:37:00	Average time for nms (cpu) :	30.55 ms
train.py 2019-04-14 05:37:00	Average time for detect a image (cpu + gpu) :	61.42 ms
train.py 2019-04-14 05:37:00	Average time for inference (gpu) :	18.75 ms
train.py 2019-04-14 05:37:02	Saved model:	weights/yolo.ckpt-24-0.7106
train.py 2019-04-14 05:37:39	Learn rate:	0.000172	period:	25	step:	34524	train_loss:	16.6396
train.py 2019-04-14 05:39:20	Learn rate:	0.000172	period:	25	step:	34661	train_loss:	14.6654
train.py 2019-04-14 05:41:00	Learn rate:	0.000172	period:	25	step:	34798	train_loss:	15.6159
train.py 2019-04-14 05:42:44	Learn rate:	0.000172	period:	25	step:	34935	train_loss:	15.6488
train.py 2019-04-14 05:44:22	Learn rate:	0.000172	period:	25	step:	35072	train_loss:	15.4303
train.py 2019-04-14 05:46:04	Learn rate:	0.000171	period:	25	step:	35209	train_loss:	14.9141
train.py 2019-04-14 05:47:41	Learn rate:	0.000171	period:	25	step:	35346	train_loss:	14.9764
train.py 2019-04-14 05:49:18	Learn rate:	0.000171	period:	25	step:	35483	train_loss:	15.1946
train.py 2019-04-14 05:50:58	Learn rate:	0.000171	period:	25	step:	35620	train_loss:	15.8142
train.py 2019-04-14 05:52:38	Learn rate:	0.000170	period:	25	step:	35757	train_loss:	14.6910
train.py 2019-04-14 06:00:00	AP for sheep = 0.6237
train.py 2019-04-14 06:00:00	AP for horse = 0.8526
train.py 2019-04-14 06:00:00	AP for bicycle = 0.8267
train.py 2019-04-14 06:00:00	AP for aeroplane = 0.7541
train.py 2019-04-14 06:00:00	AP for cow = 0.7684
train.py 2019-04-14 06:00:00	AP for sofa = 0.6854
train.py 2019-04-14 06:00:00	AP for bus = 0.7904
train.py 2019-04-14 06:00:00	AP for dog = 0.7537
train.py 2019-04-14 06:00:00	AP for cat = 0.8447
train.py 2019-04-14 06:00:00	AP for person = 0.8070
train.py 2019-04-14 06:00:00	AP for train = 0.8040
train.py 2019-04-14 06:00:00	AP for diningtable = 0.6960
train.py 2019-04-14 06:00:00	AP for bottle = 0.5856
train.py 2019-04-14 06:00:00	AP for car = 0.8603
train.py 2019-04-14 06:00:00	AP for pottedplant = 0.4866
train.py 2019-04-14 06:00:00	AP for tvmonitor = 0.7358
train.py 2019-04-14 06:00:00	AP for chair = 0.5289
train.py 2019-04-14 06:00:00	AP for bird = 0.7108
train.py 2019-04-14 06:00:00	AP for boat = 0.5804
train.py 2019-04-14 06:00:00	AP for motorbike = 0.7975
train.py 2019-04-14 06:00:00	mAP = 0.7246
train.py 2019-04-14 06:00:00	Average time for preprocess (cpu) :	5.40 ms
train.py 2019-04-14 06:00:00	Average time for postprocess (cpu) :	6.23 ms
train.py 2019-04-14 06:00:00	Average time for nms (cpu) :	27.89 ms
train.py 2019-04-14 06:00:00	Average time for detect a image (cpu + gpu) :	58.41 ms
train.py 2019-04-14 06:00:00	Average time for inference (gpu) :	18.56 ms
train.py 2019-04-14 06:00:03	Saved model:	weights/yolo.ckpt-25-0.7246
train.py 2019-04-14 06:00:33	Learn rate:	0.000170	period:	26	step:	35894	train_loss:	15.0541
train.py 2019-04-14 06:02:17	Learn rate:	0.000170	period:	26	step:	36031	train_loss:	15.2922
train.py 2019-04-14 06:03:57	Learn rate:	0.000170	period:	26	step:	36168	train_loss:	15.4497
train.py 2019-04-14 06:05:36	Learn rate:	0.000170	period:	26	step:	36305	train_loss:	15.1313
train.py 2019-04-14 06:07:15	Learn rate:	0.000169	period:	26	step:	36442	train_loss:	15.9876
train.py 2019-04-14 06:09:01	Learn rate:	0.000169	period:	26	step:	36579	train_loss:	15.6547
train.py 2019-04-14 06:10:41	Learn rate:	0.000169	period:	26	step:	36716	train_loss:	15.3822
train.py 2019-04-14 06:12:25	Learn rate:	0.000169	period:	26	step:	36853	train_loss:	15.0647
train.py 2019-04-14 06:14:04	Learn rate:	0.000168	period:	26	step:	36990	train_loss:	14.8994
train.py 2019-04-14 06:15:47	Learn rate:	0.000168	period:	26	step:	37127	train_loss:	15.3855
train.py 2019-04-14 06:23:00	AP for sheep = 0.7623
train.py 2019-04-14 06:23:00	AP for horse = 0.8422
train.py 2019-04-14 06:23:00	AP for bicycle = 0.8298
train.py 2019-04-14 06:23:00	AP for aeroplane = 0.7688
train.py 2019-04-14 06:23:00	AP for cow = 0.7459
train.py 2019-04-14 06:23:00	AP for sofa = 0.7146
train.py 2019-04-14 06:23:00	AP for bus = 0.7798
train.py 2019-04-14 06:23:00	AP for dog = 0.7854
train.py 2019-04-14 06:23:00	AP for cat = 0.7873
train.py 2019-04-14 06:23:00	AP for person = 0.8182
train.py 2019-04-14 06:23:00	AP for train = 0.8036
train.py 2019-04-14 06:23:00	AP for diningtable = 0.7157
train.py 2019-04-14 06:23:00	AP for bottle = 0.5573
train.py 2019-04-14 06:23:00	AP for car = 0.8639
train.py 2019-04-14 06:23:00	AP for pottedplant = 0.4055
train.py 2019-04-14 06:23:00	AP for tvmonitor = 0.6910
train.py 2019-04-14 06:23:00	AP for chair = 0.5163
train.py 2019-04-14 06:23:00	AP for bird = 0.6968
train.py 2019-04-14 06:23:00	AP for boat = 0.6010
train.py 2019-04-14 06:23:00	AP for motorbike = 0.8024
train.py 2019-04-14 06:23:00	mAP = 0.7244
train.py 2019-04-14 06:23:00	Average time for preprocess (cpu) :	5.43 ms
train.py 2019-04-14 06:23:00	Average time for postprocess (cpu) :	6.24 ms
train.py 2019-04-14 06:23:00	Average time for nms (cpu) :	24.74 ms
train.py 2019-04-14 06:23:00	Average time for detect a image (cpu + gpu) :	55.40 ms
train.py 2019-04-14 06:23:00	Average time for inference (gpu) :	18.68 ms
train.py 2019-04-14 06:23:03	Saved model:	weights/yolo.ckpt-26-0.7244
train.py 2019-04-14 06:23:25	Learn rate:	0.000168	period:	27	step:	37264	train_loss:	14.9393
train.py 2019-04-14 06:25:07	Learn rate:	0.000168	period:	27	step:	37401	train_loss:	14.9738
train.py 2019-04-14 06:26:54	Learn rate:	0.000167	period:	27	step:	37538	train_loss:	15.3158
train.py 2019-04-14 06:28:38	Learn rate:	0.000167	period:	27	step:	37675	train_loss:	15.0385
train.py 2019-04-14 06:30:19	Learn rate:	0.000167	period:	27	step:	37812	train_loss:	15.2076
train.py 2019-04-14 06:32:03	Learn rate:	0.000167	period:	27	step:	37949	train_loss:	14.3787
train.py 2019-04-14 06:33:49	Learn rate:	0.000167	period:	27	step:	38086	train_loss:	14.9059
train.py 2019-04-14 06:35:31	Learn rate:	0.000166	period:	27	step:	38223	train_loss:	15.1857
train.py 2019-04-14 06:37:16	Learn rate:	0.000166	period:	27	step:	38360	train_loss:	15.3334
train.py 2019-04-14 06:39:03	Learn rate:	0.000166	period:	27	step:	38497	train_loss:	15.3479
train.py 2019-04-14 06:46:36	AP for sheep = 0.7500
train.py 2019-04-14 06:46:36	AP for horse = 0.8340
train.py 2019-04-14 06:46:36	AP for bicycle = 0.8332
train.py 2019-04-14 06:46:36	AP for aeroplane = 0.7309
train.py 2019-04-14 06:46:36	AP for cow = 0.7766
train.py 2019-04-14 06:46:36	AP for sofa = 0.6836
train.py 2019-04-14 06:46:36	AP for bus = 0.7212
train.py 2019-04-14 06:46:36	AP for dog = 0.7719
train.py 2019-04-14 06:46:36	AP for cat = 0.8471
train.py 2019-04-14 06:46:36	AP for person = 0.8122
train.py 2019-04-14 06:46:36	AP for train = 0.7954
train.py 2019-04-14 06:46:36	AP for diningtable = 0.7065
train.py 2019-04-14 06:46:36	AP for bottle = 0.5664
train.py 2019-04-14 06:46:36	AP for car = 0.8481
train.py 2019-04-14 06:46:36	AP for pottedplant = 0.4361
train.py 2019-04-14 06:46:36	AP for tvmonitor = 0.7267
train.py 2019-04-14 06:46:36	AP for chair = 0.5445
train.py 2019-04-14 06:46:36	AP for bird = 0.7031
train.py 2019-04-14 06:46:36	AP for boat = 0.5922
train.py 2019-04-14 06:46:36	AP for motorbike = 0.7876
train.py 2019-04-14 06:46:36	mAP = 0.7234
train.py 2019-04-14 06:46:36	Average time for preprocess (cpu) :	5.45 ms
train.py 2019-04-14 06:46:36	Average time for postprocess (cpu) :	6.14 ms
train.py 2019-04-14 06:46:36	Average time for nms (cpu) :	27.93 ms
train.py 2019-04-14 06:46:36	Average time for detect a image (cpu + gpu) :	58.48 ms
train.py 2019-04-14 06:46:36	Average time for inference (gpu) :	18.61 ms
train.py 2019-04-14 06:46:38	Saved model:	weights/yolo.ckpt-27-0.7234
train.py 2019-04-14 06:46:54	Learn rate:	0.000166	period:	28	step:	38634	train_loss:	15.7344
train.py 2019-04-14 06:48:41	Learn rate:	0.000165	period:	28	step:	38771	train_loss:	14.5020
train.py 2019-04-14 06:50:25	Learn rate:	0.000165	period:	28	step:	38908	train_loss:	15.3122
train.py 2019-04-14 06:52:08	Learn rate:	0.000165	period:	28	step:	39045	train_loss:	14.9968
train.py 2019-04-14 06:53:52	Learn rate:	0.000165	period:	28	step:	39182	train_loss:	15.2976
train.py 2019-04-14 06:55:37	Learn rate:	0.000164	period:	28	step:	39319	train_loss:	14.8478
train.py 2019-04-14 06:57:21	Learn rate:	0.000164	period:	28	step:	39456	train_loss:	15.4626
train.py 2019-04-14 06:59:03	Learn rate:	0.000164	period:	28	step:	39593	train_loss:	14.6311
train.py 2019-04-14 07:00:43	Learn rate:	0.000164	period:	28	step:	39730	train_loss:	14.3236
train.py 2019-04-14 07:02:25	Learn rate:	0.000163	period:	28	step:	39867	train_loss:	15.8815
train.py 2019-04-14 07:09:54	AP for sheep = 0.7470
train.py 2019-04-14 07:09:54	AP for horse = 0.8689
train.py 2019-04-14 07:09:54	AP for bicycle = 0.8256
train.py 2019-04-14 07:09:54	AP for aeroplane = 0.7511
train.py 2019-04-14 07:09:54	AP for cow = 0.7697
train.py 2019-04-14 07:09:54	AP for sofa = 0.6995
train.py 2019-04-14 07:09:54	AP for bus = 0.7971
train.py 2019-04-14 07:09:54	AP for dog = 0.7966
train.py 2019-04-14 07:09:54	AP for cat = 0.8475
train.py 2019-04-14 07:09:54	AP for person = 0.8084
train.py 2019-04-14 07:09:54	AP for train = 0.7780
train.py 2019-04-14 07:09:54	AP for diningtable = 0.7184
train.py 2019-04-14 07:09:54	AP for bottle = 0.5702
train.py 2019-04-14 07:09:54	AP for car = 0.8525
train.py 2019-04-14 07:09:54	AP for pottedplant = 0.4192
train.py 2019-04-14 07:09:54	AP for tvmonitor = 0.7311
train.py 2019-04-14 07:09:54	AP for chair = 0.5483
train.py 2019-04-14 07:09:54	AP for bird = 0.7253
train.py 2019-04-14 07:09:54	AP for boat = 0.5686
train.py 2019-04-14 07:09:54	AP for motorbike = 0.7849
train.py 2019-04-14 07:09:54	mAP = 0.7304
train.py 2019-04-14 07:09:54	Average time for preprocess (cpu) :	5.47 ms
train.py 2019-04-14 07:09:54	Average time for postprocess (cpu) :	6.15 ms
train.py 2019-04-14 07:09:54	Average time for nms (cpu) :	25.18 ms
train.py 2019-04-14 07:09:54	Average time for detect a image (cpu + gpu) :	56.00 ms
train.py 2019-04-14 07:09:54	Average time for inference (gpu) :	18.88 ms
train.py 2019-04-14 07:09:57	Saved model:	weights/yolo.ckpt-28-0.7304
train.py 2019-04-14 07:10:09	Learn rate:	0.000163	period:	29	step:	40004	train_loss:	14.9473
train.py 2019-04-14 07:11:51	Learn rate:	0.000163	period:	29	step:	40141	train_loss:	14.5972
train.py 2019-04-14 07:13:29	Learn rate:	0.000163	period:	29	step:	40278	train_loss:	14.6208
train.py 2019-04-14 07:15:12	Learn rate:	0.000162	period:	29	step:	40415	train_loss:	14.1815
train.py 2019-04-14 07:16:56	Learn rate:	0.000162	period:	29	step:	40552	train_loss:	14.7713
train.py 2019-04-14 07:18:41	Learn rate:	0.000162	period:	29	step:	40689	train_loss:	15.2140
train.py 2019-04-14 07:20:27	Learn rate:	0.000162	period:	29	step:	40826	train_loss:	14.7521
train.py 2019-04-14 07:22:09	Learn rate:	0.000161	period:	29	step:	40963	train_loss:	15.3887
train.py 2019-04-14 07:23:51	Learn rate:	0.000161	period:	29	step:	41100	train_loss:	15.2605
train.py 2019-04-14 07:25:30	Learn rate:	0.000161	period:	29	step:	41237	train_loss:	14.7490
train.py 2019-04-14 07:33:03	AP for sheep = 0.7346
train.py 2019-04-14 07:33:03	AP for horse = 0.8436
train.py 2019-04-14 07:33:03	AP for bicycle = 0.8330
train.py 2019-04-14 07:33:03	AP for aeroplane = 0.7739
train.py 2019-04-14 07:33:03	AP for cow = 0.8030
train.py 2019-04-14 07:33:03	AP for sofa = 0.6948
train.py 2019-04-14 07:33:03	AP for bus = 0.8018
train.py 2019-04-14 07:33:03	AP for dog = 0.8095
train.py 2019-04-14 07:33:03	AP for cat = 0.8159
train.py 2019-04-14 07:33:03	AP for person = 0.8081
train.py 2019-04-14 07:33:03	AP for train = 0.8039
train.py 2019-04-14 07:33:03	AP for diningtable = 0.7162
train.py 2019-04-14 07:33:03	AP for bottle = 0.5948
train.py 2019-04-14 07:33:03	AP for car = 0.8596
train.py 2019-04-14 07:33:03	AP for pottedplant = 0.4579
train.py 2019-04-14 07:33:03	AP for tvmonitor = 0.7248
train.py 2019-04-14 07:33:03	AP for chair = 0.5519
train.py 2019-04-14 07:33:03	AP for bird = 0.7195
train.py 2019-04-14 07:33:03	AP for boat = 0.6037
train.py 2019-04-14 07:33:03	AP for motorbike = 0.8123
train.py 2019-04-14 07:33:03	mAP = 0.7381
train.py 2019-04-14 07:33:03	Average time for preprocess (cpu) :	5.54 ms
train.py 2019-04-14 07:33:03	Average time for postprocess (cpu) :	6.34 ms
train.py 2019-04-14 07:33:03	Average time for nms (cpu) :	24.97 ms
train.py 2019-04-14 07:33:03	Average time for detect a image (cpu + gpu) :	55.61 ms
train.py 2019-04-14 07:33:03	Average time for inference (gpu) :	18.45 ms
train.py 2019-04-14 07:33:06	Saved model:	weights/yolo.ckpt-29-0.7381
train.py 2019-04-14 07:33:10	Learn rate:	0.000161	period:	30	step:	41374	train_loss:	15.0110
train.py 2019-04-14 07:34:53	Learn rate:	0.000161	period:	30	step:	41511	train_loss:	14.5813
train.py 2019-04-14 07:36:34	Learn rate:	0.000160	period:	30	step:	41648	train_loss:	14.3195
train.py 2019-04-14 07:38:13	Learn rate:	0.000160	period:	30	step:	41785	train_loss:	14.1608
train.py 2019-04-14 07:39:53	Learn rate:	0.000160	period:	30	step:	41922	train_loss:	15.1406
train.py 2019-04-14 07:41:33	Learn rate:	0.000159	period:	30	step:	42059	train_loss:	14.6113
train.py 2019-04-14 07:43:08	Learn rate:	0.000159	period:	30	step:	42196	train_loss:	14.6837
train.py 2019-04-14 07:45:01	Learn rate:	0.000159	period:	30	step:	42333	train_loss:	13.7164
train.py 2019-04-14 07:46:43	Learn rate:	0.000159	period:	30	step:	42470	train_loss:	14.9739
train.py 2019-04-14 07:48:32	Learn rate:	0.000158	period:	30	step:	42607	train_loss:	15.2332
train.py 2019-04-14 07:50:21	Learn rate:	0.000158	period:	30	step:	42744	train_loss:	14.9321
train.py 2019-04-14 07:56:40	AP for sheep = 0.7703
train.py 2019-04-14 07:56:40	AP for horse = 0.8356
train.py 2019-04-14 07:56:40	AP for bicycle = 0.8382
train.py 2019-04-14 07:56:40	AP for aeroplane = 0.7786
train.py 2019-04-14 07:56:40	AP for cow = 0.7536
train.py 2019-04-14 07:56:40	AP for sofa = 0.7084
train.py 2019-04-14 07:56:40	AP for bus = 0.7440
train.py 2019-04-14 07:56:40	AP for dog = 0.7919
train.py 2019-04-14 07:56:40	AP for cat = 0.8317
train.py 2019-04-14 07:56:40	AP for person = 0.7898
train.py 2019-04-14 07:56:40	AP for train = 0.7817
train.py 2019-04-14 07:56:40	AP for diningtable = 0.7188
train.py 2019-04-14 07:56:40	AP for bottle = 0.5626
train.py 2019-04-14 07:56:40	AP for car = 0.8477
train.py 2019-04-14 07:56:40	AP for pottedplant = 0.4337
train.py 2019-04-14 07:56:40	AP for tvmonitor = 0.7325
train.py 2019-04-14 07:56:40	AP for chair = 0.5390
train.py 2019-04-14 07:56:40	AP for bird = 0.7269
train.py 2019-04-14 07:56:40	AP for boat = 0.5537
train.py 2019-04-14 07:56:40	AP for motorbike = 0.7719
train.py 2019-04-14 07:56:40	mAP = 0.7255
train.py 2019-04-14 07:56:40	Average time for preprocess (cpu) :	5.40 ms
train.py 2019-04-14 07:56:40	Average time for postprocess (cpu) :	6.16 ms
train.py 2019-04-14 07:56:40	Average time for nms (cpu) :	28.25 ms
train.py 2019-04-14 07:56:40	Average time for detect a image (cpu + gpu) :	58.94 ms
train.py 2019-04-14 07:56:40	Average time for inference (gpu) :	18.79 ms
train.py 2019-04-14 07:56:43	Saved model:	weights/yolo.ckpt-30-0.7255
train.py 2019-04-14 07:58:22	Learn rate:	0.000158	period:	31	step:	42881	train_loss:	14.4728
train.py 2019-04-14 08:00:05	Learn rate:	0.000158	period:	31	step:	43018	train_loss:	14.4365
train.py 2019-04-14 08:01:47	Learn rate:	0.000157	period:	31	step:	43155	train_loss:	15.1040
train.py 2019-04-14 08:03:27	Learn rate:	0.000157	period:	31	step:	43292	train_loss:	14.7486
train.py 2019-04-14 08:05:16	Learn rate:	0.000157	period:	31	step:	43429	train_loss:	14.9036
train.py 2019-04-14 08:06:59	Learn rate:	0.000157	period:	31	step:	43566	train_loss:	14.9837
train.py 2019-04-14 08:08:42	Learn rate:	0.000156	period:	31	step:	43703	train_loss:	14.3319
train.py 2019-04-14 08:10:30	Learn rate:	0.000156	period:	31	step:	43840	train_loss:	14.6640
train.py 2019-04-14 08:12:12	Learn rate:	0.000156	period:	31	step:	43977	train_loss:	14.3183
train.py 2019-04-14 08:13:55	Learn rate:	0.000156	period:	31	step:	44114	train_loss:	14.6639
train.py 2019-04-14 08:19:32	AP for sheep = 0.7453
train.py 2019-04-14 08:19:32	AP for horse = 0.8226
train.py 2019-04-14 08:19:32	AP for bicycle = 0.8378
train.py 2019-04-14 08:19:32	AP for aeroplane = 0.8161
train.py 2019-04-14 08:19:32	AP for cow = 0.7698
train.py 2019-04-14 08:19:32	AP for sofa = 0.6812
train.py 2019-04-14 08:19:32	AP for bus = 0.7918
train.py 2019-04-14 08:19:32	AP for dog = 0.7887
train.py 2019-04-14 08:19:32	AP for cat = 0.8007
train.py 2019-04-14 08:19:32	AP for person = 0.8080
train.py 2019-04-14 08:19:32	AP for train = 0.7845
train.py 2019-04-14 08:19:32	AP for diningtable = 0.7615
train.py 2019-04-14 08:19:32	AP for bottle = 0.5604
train.py 2019-04-14 08:19:32	AP for car = 0.8653
train.py 2019-04-14 08:19:32	AP for pottedplant = 0.4134
train.py 2019-04-14 08:19:32	AP for tvmonitor = 0.7286
train.py 2019-04-14 08:19:32	AP for chair = 0.5430
train.py 2019-04-14 08:19:32	AP for bird = 0.7082
train.py 2019-04-14 08:19:32	AP for boat = 0.6068
train.py 2019-04-14 08:19:32	AP for motorbike = 0.8313
train.py 2019-04-14 08:19:32	mAP = 0.7333
train.py 2019-04-14 08:19:32	Average time for preprocess (cpu) :	5.39 ms
train.py 2019-04-14 08:19:32	Average time for postprocess (cpu) :	6.14 ms
train.py 2019-04-14 08:19:32	Average time for nms (cpu) :	20.86 ms
train.py 2019-04-14 08:19:32	Average time for detect a image (cpu + gpu) :	51.24 ms
train.py 2019-04-14 08:19:32	Average time for inference (gpu) :	18.58 ms
train.py 2019-04-14 08:19:34	Saved model:	weights/yolo.ckpt-31-0.7333
train.py 2019-04-14 08:21:10	Learn rate:	0.000155	period:	32	step:	44251	train_loss:	13.9407
train.py 2019-04-14 08:22:51	Learn rate:	0.000155	period:	32	step:	44388	train_loss:	13.6267
train.py 2019-04-14 08:24:33	Learn rate:	0.000155	period:	32	step:	44525	train_loss:	14.3933
train.py 2019-04-14 08:26:21	Learn rate:	0.000155	period:	32	step:	44662	train_loss:	14.8540
train.py 2019-04-14 08:28:04	Learn rate:	0.000154	period:	32	step:	44799	train_loss:	14.4916
train.py 2019-04-14 08:29:49	Learn rate:	0.000154	period:	32	step:	44936	train_loss:	14.6006
train.py 2019-04-14 08:31:31	Learn rate:	0.000154	period:	32	step:	45073	train_loss:	14.2557
train.py 2019-04-14 08:33:05	Learn rate:	0.000154	period:	32	step:	45210	train_loss:	15.2301
train.py 2019-04-14 08:34:46	Learn rate:	0.000153	period:	32	step:	45347	train_loss:	14.3904
train.py 2019-04-14 08:36:30	Learn rate:	0.000153	period:	32	step:	45484	train_loss:	14.4614
train.py 2019-04-14 08:43:19	AP for sheep = 0.8241
train.py 2019-04-14 08:43:19	AP for horse = 0.8170
train.py 2019-04-14 08:43:19	AP for bicycle = 0.8528
train.py 2019-04-14 08:43:19	AP for aeroplane = 0.8069
train.py 2019-04-14 08:43:19	AP for cow = 0.7585
train.py 2019-04-14 08:43:19	AP for sofa = 0.6938
train.py 2019-04-14 08:43:19	AP for bus = 0.8020
train.py 2019-04-14 08:43:19	AP for dog = 0.7446
train.py 2019-04-14 08:43:19	AP for cat = 0.8293
train.py 2019-04-14 08:43:19	AP for person = 0.8181
train.py 2019-04-14 08:43:19	AP for train = 0.8065
train.py 2019-04-14 08:43:19	AP for diningtable = 0.7278
train.py 2019-04-14 08:43:19	AP for bottle = 0.5928
train.py 2019-04-14 08:43:19	AP for car = 0.8557
train.py 2019-04-14 08:43:19	AP for pottedplant = 0.4365
train.py 2019-04-14 08:43:19	AP for tvmonitor = 0.7240
train.py 2019-04-14 08:43:19	AP for chair = 0.5592
train.py 2019-04-14 08:43:19	AP for bird = 0.7127
train.py 2019-04-14 08:43:19	AP for boat = 0.5820
train.py 2019-04-14 08:43:19	AP for motorbike = 0.8158
train.py 2019-04-14 08:43:19	mAP = 0.7380
train.py 2019-04-14 08:43:19	Average time for preprocess (cpu) :	5.76 ms
train.py 2019-04-14 08:43:19	Average time for postprocess (cpu) :	6.49 ms
train.py 2019-04-14 08:43:19	Average time for nms (cpu) :	30.54 ms
train.py 2019-04-14 08:43:19	Average time for detect a image (cpu + gpu) :	61.54 ms
train.py 2019-04-14 08:43:19	Average time for inference (gpu) :	18.43 ms
train.py 2019-04-14 08:43:22	Saved model:	weights/yolo.ckpt-32-0.7380
train.py 2019-04-14 08:44:47	Learn rate:	0.000153	period:	33	step:	45621	train_loss:	14.2906
train.py 2019-04-14 08:46:29	Learn rate:	0.000152	period:	33	step:	45758	train_loss:	13.9037
train.py 2019-04-14 08:48:14	Learn rate:	0.000152	period:	33	step:	45895	train_loss:	14.7642
train.py 2019-04-14 08:49:52	Learn rate:	0.000152	period:	33	step:	46032	train_loss:	14.6629
train.py 2019-04-14 08:51:33	Learn rate:	0.000152	period:	33	step:	46169	train_loss:	14.0657
train.py 2019-04-14 08:53:15	Learn rate:	0.000151	period:	33	step:	46306	train_loss:	14.5951
train.py 2019-04-14 08:54:56	Learn rate:	0.000151	period:	33	step:	46443	train_loss:	14.5615
train.py 2019-04-14 08:56:43	Learn rate:	0.000151	period:	33	step:	46580	train_loss:	14.1952
train.py 2019-04-14 08:58:27	Learn rate:	0.000151	period:	33	step:	46717	train_loss:	14.4580
train.py 2019-04-14 09:00:12	Learn rate:	0.000150	period:	33	step:	46854	train_loss:	13.9149
train.py 2019-04-14 09:05:57	AP for sheep = 0.7546
train.py 2019-04-14 09:05:57	AP for horse = 0.8440
train.py 2019-04-14 09:05:57	AP for bicycle = 0.8561
train.py 2019-04-14 09:05:57	AP for aeroplane = 0.8001
train.py 2019-04-14 09:05:57	AP for cow = 0.7754
train.py 2019-04-14 09:05:57	AP for sofa = 0.7133
train.py 2019-04-14 09:05:57	AP for bus = 0.8197
train.py 2019-04-14 09:05:57	AP for dog = 0.7926
train.py 2019-04-14 09:05:57	AP for cat = 0.8248
train.py 2019-04-14 09:05:57	AP for person = 0.8159
train.py 2019-04-14 09:05:57	AP for train = 0.8243
train.py 2019-04-14 09:05:57	AP for diningtable = 0.7441
train.py 2019-04-14 09:05:57	AP for bottle = 0.5807
train.py 2019-04-14 09:05:57	AP for car = 0.8638
train.py 2019-04-14 09:05:57	AP for pottedplant = 0.4682
train.py 2019-04-14 09:05:57	AP for tvmonitor = 0.7430
train.py 2019-04-14 09:05:57	AP for chair = 0.5679
train.py 2019-04-14 09:05:57	AP for bird = 0.7330
train.py 2019-04-14 09:05:57	AP for boat = 0.6124
train.py 2019-04-14 09:05:57	AP for motorbike = 0.8084
train.py 2019-04-14 09:05:57	mAP = 0.7471
train.py 2019-04-14 09:05:57	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-14 09:05:57	Average time for postprocess (cpu) :	6.33 ms
train.py 2019-04-14 09:05:57	Average time for nms (cpu) :	20.10 ms
train.py 2019-04-14 09:05:57	Average time for detect a image (cpu + gpu) :	50.00 ms
train.py 2019-04-14 09:05:57	Average time for inference (gpu) :	17.98 ms
train.py 2019-04-14 09:05:59	Saved model:	weights/yolo.ckpt-33-0.7471
train.py 2019-04-14 09:07:18	Learn rate:	0.000150	period:	34	step:	46991	train_loss:	14.2591
train.py 2019-04-14 09:08:59	Learn rate:	0.000150	period:	34	step:	47128	train_loss:	14.1539
train.py 2019-04-14 09:10:40	Learn rate:	0.000149	period:	34	step:	47265	train_loss:	14.5062
train.py 2019-04-14 09:12:27	Learn rate:	0.000149	period:	34	step:	47402	train_loss:	14.5167
train.py 2019-04-14 09:14:13	Learn rate:	0.000149	period:	34	step:	47539	train_loss:	14.2502
train.py 2019-04-14 09:15:55	Learn rate:	0.000149	period:	34	step:	47676	train_loss:	14.6702
train.py 2019-04-14 09:17:43	Learn rate:	0.000148	period:	34	step:	47813	train_loss:	14.5784
train.py 2019-04-14 09:19:24	Learn rate:	0.000148	period:	34	step:	47950	train_loss:	14.3002
train.py 2019-04-14 09:21:09	Learn rate:	0.000148	period:	34	step:	48087	train_loss:	14.1929
train.py 2019-04-14 09:22:47	Learn rate:	0.000148	period:	34	step:	48224	train_loss:	14.1739
train.py 2019-04-14 09:28:39	AP for sheep = 0.7537
train.py 2019-04-14 09:28:39	AP for horse = 0.8471
train.py 2019-04-14 09:28:39	AP for bicycle = 0.8429
train.py 2019-04-14 09:28:39	AP for aeroplane = 0.7666
train.py 2019-04-14 09:28:39	AP for cow = 0.7176
train.py 2019-04-14 09:28:39	AP for sofa = 0.6924
train.py 2019-04-14 09:28:39	AP for bus = 0.7721
train.py 2019-04-14 09:28:39	AP for dog = 0.7857
train.py 2019-04-14 09:28:39	AP for cat = 0.8112
train.py 2019-04-14 09:28:39	AP for person = 0.8197
train.py 2019-04-14 09:28:39	AP for train = 0.7861
train.py 2019-04-14 09:28:39	AP for diningtable = 0.7086
train.py 2019-04-14 09:28:39	AP for bottle = 0.5903
train.py 2019-04-14 09:28:39	AP for car = 0.8677
train.py 2019-04-14 09:28:39	AP for pottedplant = 0.4423
train.py 2019-04-14 09:28:39	AP for tvmonitor = 0.7344
train.py 2019-04-14 09:28:39	AP for chair = 0.5772
train.py 2019-04-14 09:28:39	AP for bird = 0.7188
train.py 2019-04-14 09:28:39	AP for boat = 0.5546
train.py 2019-04-14 09:28:39	AP for motorbike = 0.7972
train.py 2019-04-14 09:28:39	mAP = 0.7293
train.py 2019-04-14 09:28:39	Average time for preprocess (cpu) :	5.44 ms
train.py 2019-04-14 09:28:39	Average time for postprocess (cpu) :	6.32 ms
train.py 2019-04-14 09:28:39	Average time for nms (cpu) :	21.01 ms
train.py 2019-04-14 09:28:39	Average time for detect a image (cpu + gpu) :	51.25 ms
train.py 2019-04-14 09:28:39	Average time for inference (gpu) :	18.18 ms
train.py 2019-04-14 09:28:42	Saved model:	weights/yolo.ckpt-34-0.7293
train.py 2019-04-14 09:29:50	Learn rate:	0.000147	period:	35	step:	48361	train_loss:	14.9650
train.py 2019-04-14 09:31:35	Learn rate:	0.000147	period:	35	step:	48498	train_loss:	13.8119
train.py 2019-04-14 09:33:22	Learn rate:	0.000147	period:	35	step:	48635	train_loss:	14.5988
train.py 2019-04-14 09:35:03	Learn rate:	0.000146	period:	35	step:	48772	train_loss:	13.9694
train.py 2019-04-14 09:36:46	Learn rate:	0.000146	period:	35	step:	48909	train_loss:	13.7653
train.py 2019-04-14 09:38:26	Learn rate:	0.000146	period:	35	step:	49046	train_loss:	14.0665
train.py 2019-04-14 09:40:08	Learn rate:	0.000146	period:	35	step:	49183	train_loss:	14.2011
train.py 2019-04-14 09:41:52	Learn rate:	0.000145	period:	35	step:	49320	train_loss:	13.4945
train.py 2019-04-14 09:43:39	Learn rate:	0.000145	period:	35	step:	49457	train_loss:	13.9819
train.py 2019-04-14 09:45:20	Learn rate:	0.000145	period:	35	step:	49594	train_loss:	14.2334
train.py 2019-04-14 09:52:05	AP for sheep = 0.7879
train.py 2019-04-14 09:52:05	AP for horse = 0.8436
train.py 2019-04-14 09:52:05	AP for bicycle = 0.8555
train.py 2019-04-14 09:52:05	AP for aeroplane = 0.8119
train.py 2019-04-14 09:52:05	AP for cow = 0.7873
train.py 2019-04-14 09:52:05	AP for sofa = 0.7260
train.py 2019-04-14 09:52:05	AP for bus = 0.8009
train.py 2019-04-14 09:52:05	AP for dog = 0.7670
train.py 2019-04-14 09:52:05	AP for cat = 0.8113
train.py 2019-04-14 09:52:05	AP for person = 0.8169
train.py 2019-04-14 09:52:05	AP for train = 0.8250
train.py 2019-04-14 09:52:05	AP for diningtable = 0.7155
train.py 2019-04-14 09:52:05	AP for bottle = 0.5871
train.py 2019-04-14 09:52:05	AP for car = 0.8701
train.py 2019-04-14 09:52:05	AP for pottedplant = 0.4640
train.py 2019-04-14 09:52:05	AP for tvmonitor = 0.7485
train.py 2019-04-14 09:52:05	AP for chair = 0.5258
train.py 2019-04-14 09:52:05	AP for bird = 0.7458
train.py 2019-04-14 09:52:05	AP for boat = 0.5581
train.py 2019-04-14 09:52:05	AP for motorbike = 0.8550
train.py 2019-04-14 09:52:05	mAP = 0.7452
train.py 2019-04-14 09:52:05	Average time for preprocess (cpu) :	5.51 ms
train.py 2019-04-14 09:52:05	Average time for postprocess (cpu) :	6.38 ms
train.py 2019-04-14 09:52:05	Average time for nms (cpu) :	27.01 ms
train.py 2019-04-14 09:52:05	Average time for detect a image (cpu + gpu) :	57.68 ms
train.py 2019-04-14 09:52:05	Average time for inference (gpu) :	18.43 ms
train.py 2019-04-14 09:52:08	Saved model:	weights/yolo.ckpt-35-0.7452
train.py 2019-04-14 09:53:10	Learn rate:	0.000145	period:	36	step:	49731	train_loss:	14.2894
train.py 2019-04-14 09:54:54	Learn rate:	0.000144	period:	36	step:	49868	train_loss:	13.4881
train.py 2019-04-14 09:56:35	Learn rate:	0.000144	period:	36	step:	50005	train_loss:	14.1660
train.py 2019-04-14 09:58:22	Learn rate:	0.000144	period:	36	step:	50142	train_loss:	13.5517
train.py 2019-04-14 10:00:03	Learn rate:	0.000143	period:	36	step:	50279	train_loss:	13.1624
train.py 2019-04-14 10:01:45	Learn rate:	0.000143	period:	36	step:	50416	train_loss:	13.9643
train.py 2019-04-14 10:03:28	Learn rate:	0.000143	period:	36	step:	50553	train_loss:	13.6799
train.py 2019-04-14 10:05:16	Learn rate:	0.000143	period:	36	step:	50690	train_loss:	13.7717
train.py 2019-04-14 10:07:00	Learn rate:	0.000142	period:	36	step:	50827	train_loss:	15.0028
train.py 2019-04-14 10:08:43	Learn rate:	0.000142	period:	36	step:	50964	train_loss:	14.5864
train.py 2019-04-14 10:14:59	AP for sheep = 0.7691
train.py 2019-04-14 10:14:59	AP for horse = 0.8613
train.py 2019-04-14 10:14:59	AP for bicycle = 0.8436
train.py 2019-04-14 10:14:59	AP for aeroplane = 0.8216
train.py 2019-04-14 10:14:59	AP for cow = 0.7663
train.py 2019-04-14 10:14:59	AP for sofa = 0.7195
train.py 2019-04-14 10:14:59	AP for bus = 0.8283
train.py 2019-04-14 10:14:59	AP for dog = 0.7579
train.py 2019-04-14 10:14:59	AP for cat = 0.8427
train.py 2019-04-14 10:14:59	AP for person = 0.8200
train.py 2019-04-14 10:14:59	AP for train = 0.8398
train.py 2019-04-14 10:14:59	AP for diningtable = 0.7384
train.py 2019-04-14 10:14:59	AP for bottle = 0.5988
train.py 2019-04-14 10:14:59	AP for car = 0.8736
train.py 2019-04-14 10:14:59	AP for pottedplant = 0.4661
train.py 2019-04-14 10:14:59	AP for tvmonitor = 0.7539
train.py 2019-04-14 10:14:59	AP for chair = 0.5557
train.py 2019-04-14 10:14:59	AP for bird = 0.7565
train.py 2019-04-14 10:14:59	AP for boat = 0.5985
train.py 2019-04-14 10:14:59	AP for motorbike = 0.8329
train.py 2019-04-14 10:14:59	mAP = 0.7522
train.py 2019-04-14 10:14:59	Average time for preprocess (cpu) :	5.37 ms
train.py 2019-04-14 10:14:59	Average time for postprocess (cpu) :	6.27 ms
train.py 2019-04-14 10:14:59	Average time for nms (cpu) :	21.13 ms
train.py 2019-04-14 10:14:59	Average time for detect a image (cpu + gpu) :	51.84 ms
train.py 2019-04-14 10:14:59	Average time for inference (gpu) :	18.79 ms
train.py 2019-04-14 10:15:01	Saved model:	weights/yolo.ckpt-36-0.7522
train.py 2019-04-14 10:15:59	Learn rate:	0.000142	period:	37	step:	51101	train_loss:	13.9473
train.py 2019-04-14 10:17:43	Learn rate:	0.000141	period:	37	step:	51238	train_loss:	14.5015
train.py 2019-04-14 10:19:28	Learn rate:	0.000141	period:	37	step:	51375	train_loss:	13.2887
train.py 2019-04-14 10:21:10	Learn rate:	0.000141	period:	37	step:	51512	train_loss:	14.6266
train.py 2019-04-14 10:22:54	Learn rate:	0.000141	period:	37	step:	51649	train_loss:	13.9895
train.py 2019-04-14 10:24:37	Learn rate:	0.000140	period:	37	step:	51786	train_loss:	13.6950
train.py 2019-04-14 10:26:16	Learn rate:	0.000140	period:	37	step:	51923	train_loss:	14.5331
train.py 2019-04-14 10:28:03	Learn rate:	0.000140	period:	37	step:	52060	train_loss:	14.4952
train.py 2019-04-14 10:29:42	Learn rate:	0.000139	period:	37	step:	52197	train_loss:	14.0281
train.py 2019-04-14 10:31:26	Learn rate:	0.000139	period:	37	step:	52334	train_loss:	13.0869
train.py 2019-04-14 10:37:55	AP for sheep = 0.7639
train.py 2019-04-14 10:37:55	AP for horse = 0.8486
train.py 2019-04-14 10:37:55	AP for bicycle = 0.8429
train.py 2019-04-14 10:37:55	AP for aeroplane = 0.8028
train.py 2019-04-14 10:37:55	AP for cow = 0.6621
train.py 2019-04-14 10:37:55	AP for sofa = 0.7230
train.py 2019-04-14 10:37:55	AP for bus = 0.8068
train.py 2019-04-14 10:37:55	AP for dog = 0.8073
train.py 2019-04-14 10:37:55	AP for cat = 0.8700
train.py 2019-04-14 10:37:55	AP for person = 0.8237
train.py 2019-04-14 10:37:55	AP for train = 0.7970
train.py 2019-04-14 10:37:55	AP for diningtable = 0.7112
train.py 2019-04-14 10:37:55	AP for bottle = 0.5857
train.py 2019-04-14 10:37:55	AP for car = 0.8710
train.py 2019-04-14 10:37:55	AP for pottedplant = 0.4602
train.py 2019-04-14 10:37:55	AP for tvmonitor = 0.7535
train.py 2019-04-14 10:37:55	AP for chair = 0.5856
train.py 2019-04-14 10:37:55	AP for bird = 0.7472
train.py 2019-04-14 10:37:55	AP for boat = 0.6127
train.py 2019-04-14 10:37:55	AP for motorbike = 0.8158
train.py 2019-04-14 10:37:55	mAP = 0.7446
train.py 2019-04-14 10:37:55	Average time for preprocess (cpu) :	5.37 ms
train.py 2019-04-14 10:37:55	Average time for postprocess (cpu) :	6.26 ms
train.py 2019-04-14 10:37:55	Average time for nms (cpu) :	22.58 ms
train.py 2019-04-14 10:37:55	Average time for detect a image (cpu + gpu) :	53.47 ms
train.py 2019-04-14 10:37:55	Average time for inference (gpu) :	18.96 ms
train.py 2019-04-14 10:37:58	Saved model:	weights/yolo.ckpt-37-0.7446
train.py 2019-04-14 10:38:48	Learn rate:	0.000139	period:	38	step:	52471	train_loss:	13.7619
train.py 2019-04-14 10:40:34	Learn rate:	0.000139	period:	38	step:	52608	train_loss:	14.0050
train.py 2019-04-14 10:42:17	Learn rate:	0.000138	period:	38	step:	52745	train_loss:	13.6544
train.py 2019-04-14 10:44:03	Learn rate:	0.000138	period:	38	step:	52882	train_loss:	14.1226
train.py 2019-04-14 10:45:46	Learn rate:	0.000138	period:	38	step:	53019	train_loss:	13.1631
train.py 2019-04-14 10:47:23	Learn rate:	0.000137	period:	38	step:	53156	train_loss:	13.7304
train.py 2019-04-14 10:49:03	Learn rate:	0.000137	period:	38	step:	53293	train_loss:	13.8994
train.py 2019-04-14 10:50:47	Learn rate:	0.000137	period:	38	step:	53430	train_loss:	13.8399
train.py 2019-04-14 10:52:30	Learn rate:	0.000136	period:	38	step:	53567	train_loss:	14.0858
train.py 2019-04-14 10:54:11	Learn rate:	0.000136	period:	38	step:	53704	train_loss:	13.4800
train.py 2019-04-14 11:00:41	AP for sheep = 0.7794
train.py 2019-04-14 11:00:41	AP for horse = 0.8565
train.py 2019-04-14 11:00:41	AP for bicycle = 0.8269
train.py 2019-04-14 11:00:41	AP for aeroplane = 0.8147
train.py 2019-04-14 11:00:41	AP for cow = 0.7798
train.py 2019-04-14 11:00:41	AP for sofa = 0.7118
train.py 2019-04-14 11:00:41	AP for bus = 0.8053
train.py 2019-04-14 11:00:41	AP for dog = 0.7994
train.py 2019-04-14 11:00:41	AP for cat = 0.8585
train.py 2019-04-14 11:00:41	AP for person = 0.8260
train.py 2019-04-14 11:00:41	AP for train = 0.8164
train.py 2019-04-14 11:00:41	AP for diningtable = 0.6949
train.py 2019-04-14 11:00:41	AP for bottle = 0.5929
train.py 2019-04-14 11:00:41	AP for car = 0.8755
train.py 2019-04-14 11:00:41	AP for pottedplant = 0.4630
train.py 2019-04-14 11:00:41	AP for tvmonitor = 0.7492
train.py 2019-04-14 11:00:41	AP for chair = 0.5498
train.py 2019-04-14 11:00:41	AP for bird = 0.7629
train.py 2019-04-14 11:00:41	AP for boat = 0.6083
train.py 2019-04-14 11:00:41	AP for motorbike = 0.7760
train.py 2019-04-14 11:00:41	mAP = 0.7474
train.py 2019-04-14 11:00:41	Average time for preprocess (cpu) :	5.61 ms
train.py 2019-04-14 11:00:41	Average time for postprocess (cpu) :	6.43 ms
train.py 2019-04-14 11:00:41	Average time for nms (cpu) :	21.28 ms
train.py 2019-04-14 11:00:41	Average time for detect a image (cpu + gpu) :	52.04 ms
train.py 2019-04-14 11:00:41	Average time for inference (gpu) :	18.42 ms
train.py 2019-04-14 11:00:43	Saved model:	weights/yolo.ckpt-38-0.7474
train.py 2019-04-14 11:01:31	Learn rate:	0.000136	period:	39	step:	53841	train_loss:	13.6959
train.py 2019-04-14 11:03:11	Learn rate:	0.000136	period:	39	step:	53978	train_loss:	12.9480
train.py 2019-04-14 11:04:55	Learn rate:	0.000135	period:	39	step:	54115	train_loss:	14.0797
train.py 2019-04-14 11:06:39	Learn rate:	0.000135	period:	39	step:	54252	train_loss:	13.6275
train.py 2019-04-14 11:08:21	Learn rate:	0.000135	period:	39	step:	54389	train_loss:	13.4095
train.py 2019-04-14 11:09:59	Learn rate:	0.000134	period:	39	step:	54526	train_loss:	13.6087
train.py 2019-04-14 11:11:45	Learn rate:	0.000134	period:	39	step:	54663	train_loss:	14.0881
train.py 2019-04-14 11:13:28	Learn rate:	0.000134	period:	39	step:	54800	train_loss:	13.8166
train.py 2019-04-14 11:15:08	Learn rate:	0.000134	period:	39	step:	54937	train_loss:	13.1950
train.py 2019-04-14 11:16:56	Learn rate:	0.000133	period:	39	step:	55074	train_loss:	13.6321
train.py 2019-04-14 11:23:43	AP for sheep = 0.7877
train.py 2019-04-14 11:23:43	AP for horse = 0.8297
train.py 2019-04-14 11:23:43	AP for bicycle = 0.8719
train.py 2019-04-14 11:23:43	AP for aeroplane = 0.7853
train.py 2019-04-14 11:23:43	AP for cow = 0.7614
train.py 2019-04-14 11:23:43	AP for sofa = 0.7496
train.py 2019-04-14 11:23:43	AP for bus = 0.8407
train.py 2019-04-14 11:23:43	AP for dog = 0.8062
train.py 2019-04-14 11:23:43	AP for cat = 0.8499
train.py 2019-04-14 11:23:43	AP for person = 0.8276
train.py 2019-04-14 11:23:43	AP for train = 0.8192
train.py 2019-04-14 11:23:43	AP for diningtable = 0.7408
train.py 2019-04-14 11:23:43	AP for bottle = 0.5910
train.py 2019-04-14 11:23:43	AP for car = 0.8824
train.py 2019-04-14 11:23:43	AP for pottedplant = 0.4479
train.py 2019-04-14 11:23:43	AP for tvmonitor = 0.7742
train.py 2019-04-14 11:23:43	AP for chair = 0.5896
train.py 2019-04-14 11:23:43	AP for bird = 0.7180
train.py 2019-04-14 11:23:43	AP for boat = 0.6010
train.py 2019-04-14 11:23:43	AP for motorbike = 0.8096
train.py 2019-04-14 11:23:43	mAP = 0.7542
train.py 2019-04-14 11:23:43	Average time for preprocess (cpu) :	5.66 ms
train.py 2019-04-14 11:23:43	Average time for postprocess (cpu) :	6.40 ms
train.py 2019-04-14 11:23:43	Average time for nms (cpu) :	23.14 ms
train.py 2019-04-14 11:23:43	Average time for detect a image (cpu + gpu) :	53.79 ms
train.py 2019-04-14 11:23:43	Average time for inference (gpu) :	18.28 ms
train.py 2019-04-14 11:23:46	Saved model:	weights/yolo.ckpt-39-0.7542
train.py 2019-04-14 11:24:27	Learn rate:	0.000133	period:	40	step:	55211	train_loss:	13.5674
train.py 2019-04-14 11:26:09	Learn rate:	0.000133	period:	40	step:	55348	train_loss:	13.9637
train.py 2019-04-14 11:27:52	Learn rate:	0.000132	period:	40	step:	55485	train_loss:	13.0272
train.py 2019-04-14 11:29:38	Learn rate:	0.000132	period:	40	step:	55622	train_loss:	13.6048
train.py 2019-04-14 11:31:20	Learn rate:	0.000132	period:	40	step:	55759	train_loss:	13.1177
train.py 2019-04-14 11:33:04	Learn rate:	0.000131	period:	40	step:	55896	train_loss:	13.3805
train.py 2019-04-14 11:34:42	Learn rate:	0.000131	period:	40	step:	56033	train_loss:	13.1135
train.py 2019-04-14 11:36:24	Learn rate:	0.000131	period:	40	step:	56170	train_loss:	13.3245
train.py 2019-04-14 11:38:10	Learn rate:	0.000131	period:	40	step:	56307	train_loss:	14.0582
train.py 2019-04-14 11:39:52	Learn rate:	0.000130	period:	40	step:	56444	train_loss:	13.4613
train.py 2019-04-14 11:46:13	AP for sheep = 0.7847
train.py 2019-04-14 11:46:13	AP for horse = 0.8540
train.py 2019-04-14 11:46:13	AP for bicycle = 0.8610
train.py 2019-04-14 11:46:13	AP for aeroplane = 0.7622
train.py 2019-04-14 11:46:13	AP for cow = 0.7888
train.py 2019-04-14 11:46:13	AP for sofa = 0.7319
train.py 2019-04-14 11:46:13	AP for bus = 0.8392
train.py 2019-04-14 11:46:13	AP for dog = 0.7756
train.py 2019-04-14 11:46:13	AP for cat = 0.8583
train.py 2019-04-14 11:46:13	AP for person = 0.8270
train.py 2019-04-14 11:46:13	AP for train = 0.8307
train.py 2019-04-14 11:46:13	AP for diningtable = 0.7472
train.py 2019-04-14 11:46:13	AP for bottle = 0.5878
train.py 2019-04-14 11:46:13	AP for car = 0.8748
train.py 2019-04-14 11:46:13	AP for pottedplant = 0.4678
train.py 2019-04-14 11:46:13	AP for tvmonitor = 0.7476
train.py 2019-04-14 11:46:13	AP for chair = 0.5685
train.py 2019-04-14 11:46:13	AP for bird = 0.7514
train.py 2019-04-14 11:46:13	AP for boat = 0.6221
train.py 2019-04-14 11:46:13	AP for motorbike = 0.8248
train.py 2019-04-14 11:46:13	mAP = 0.7553
train.py 2019-04-14 11:46:13	Average time for preprocess (cpu) :	5.39 ms
train.py 2019-04-14 11:46:13	Average time for postprocess (cpu) :	6.38 ms
train.py 2019-04-14 11:46:13	Average time for nms (cpu) :	18.49 ms
train.py 2019-04-14 11:46:13	Average time for detect a image (cpu + gpu) :	48.68 ms
train.py 2019-04-14 11:46:13	Average time for inference (gpu) :	18.15 ms
train.py 2019-04-14 11:46:16	Saved model:	weights/yolo.ckpt-40-0.7553
train.py 2019-04-14 11:46:48	Learn rate:	0.000130	period:	41	step:	56581	train_loss:	13.2038
train.py 2019-04-14 11:48:34	Learn rate:	0.000130	period:	41	step:	56718	train_loss:	12.9500
train.py 2019-04-14 11:50:19	Learn rate:	0.000129	period:	41	step:	56855	train_loss:	13.9841
train.py 2019-04-14 11:52:04	Learn rate:	0.000129	period:	41	step:	56992	train_loss:	13.7298
train.py 2019-04-14 11:53:43	Learn rate:	0.000129	period:	41	step:	57129	train_loss:	13.8951
train.py 2019-04-14 11:55:28	Learn rate:	0.000128	period:	41	step:	57266	train_loss:	13.6670
train.py 2019-04-14 11:57:12	Learn rate:	0.000128	period:	41	step:	57403	train_loss:	13.3239
train.py 2019-04-14 11:58:55	Learn rate:	0.000128	period:	41	step:	57540	train_loss:	13.4512
train.py 2019-04-15 12:00:37	Learn rate:	0.000128	period:	41	step:	57677	train_loss:	13.1235
train.py 2019-04-15 12:02:21	Learn rate:	0.000127	period:	41	step:	57814	train_loss:	13.2074
train.py 2019-04-15 12:08:53	AP for sheep = 0.7622
train.py 2019-04-15 12:08:53	AP for horse = 0.8585
train.py 2019-04-15 12:08:53	AP for bicycle = 0.8284
train.py 2019-04-15 12:08:53	AP for aeroplane = 0.8278
train.py 2019-04-15 12:08:53	AP for cow = 0.7942
train.py 2019-04-15 12:08:53	AP for sofa = 0.7057
train.py 2019-04-15 12:08:53	AP for bus = 0.8521
train.py 2019-04-15 12:08:53	AP for dog = 0.7872
train.py 2019-04-15 12:08:53	AP for cat = 0.8175
train.py 2019-04-15 12:08:53	AP for person = 0.8312
train.py 2019-04-15 12:08:53	AP for train = 0.8144
train.py 2019-04-15 12:08:53	AP for diningtable = 0.7430
train.py 2019-04-15 12:08:53	AP for bottle = 0.5842
train.py 2019-04-15 12:08:53	AP for car = 0.8742
train.py 2019-04-15 12:08:53	AP for pottedplant = 0.4790
train.py 2019-04-15 12:08:53	AP for tvmonitor = 0.7476
train.py 2019-04-15 12:08:53	AP for chair = 0.5653
train.py 2019-04-15 12:08:53	AP for bird = 0.7457
train.py 2019-04-15 12:08:53	AP for boat = 0.6046
train.py 2019-04-15 12:08:53	AP for motorbike = 0.8233
train.py 2019-04-15 12:08:53	mAP = 0.7523
train.py 2019-04-15 12:08:53	Average time for preprocess (cpu) :	5.32 ms
train.py 2019-04-15 12:08:53	Average time for postprocess (cpu) :	6.39 ms
train.py 2019-04-15 12:08:53	Average time for nms (cpu) :	20.35 ms
train.py 2019-04-15 12:08:53	Average time for detect a image (cpu + gpu) :	49.99 ms
train.py 2019-04-15 12:08:53	Average time for inference (gpu) :	17.67 ms
train.py 2019-04-15 12:08:55	Saved model:	weights/yolo.ckpt-41-0.7523
train.py 2019-04-15 12:09:18	Learn rate:	0.000127	period:	42	step:	57951	train_loss:	13.4103
train.py 2019-04-15 12:10:59	Learn rate:	0.000127	period:	42	step:	58088	train_loss:	12.5814
train.py 2019-04-15 12:12:37	Learn rate:	0.000126	period:	42	step:	58225	train_loss:	13.7712
train.py 2019-04-15 12:14:26	Learn rate:	0.000126	period:	42	step:	58362	train_loss:	13.3370
train.py 2019-04-15 12:16:10	Learn rate:	0.000126	period:	42	step:	58499	train_loss:	14.2555
train.py 2019-04-15 12:17:51	Learn rate:	0.000125	period:	42	step:	58636	train_loss:	13.5785
train.py 2019-04-15 12:19:33	Learn rate:	0.000125	period:	42	step:	58773	train_loss:	13.0750
train.py 2019-04-15 12:21:15	Learn rate:	0.000125	period:	42	step:	58910	train_loss:	13.0655
train.py 2019-04-15 12:23:01	Learn rate:	0.000125	period:	42	step:	59047	train_loss:	12.6790
train.py 2019-04-15 12:24:42	Learn rate:	0.000124	period:	42	step:	59184	train_loss:	13.1250
train.py 2019-04-15 12:31:15	AP for sheep = 0.7949
train.py 2019-04-15 12:31:15	AP for horse = 0.8695
train.py 2019-04-15 12:31:15	AP for bicycle = 0.8751
train.py 2019-04-15 12:31:15	AP for aeroplane = 0.8211
train.py 2019-04-15 12:31:15	AP for cow = 0.7824
train.py 2019-04-15 12:31:15	AP for sofa = 0.6745
train.py 2019-04-15 12:31:15	AP for bus = 0.8485
train.py 2019-04-15 12:31:15	AP for dog = 0.8139
train.py 2019-04-15 12:31:15	AP for cat = 0.8447
train.py 2019-04-15 12:31:15	AP for person = 0.8201
train.py 2019-04-15 12:31:15	AP for train = 0.8241
train.py 2019-04-15 12:31:15	AP for diningtable = 0.7317
train.py 2019-04-15 12:31:15	AP for bottle = 0.5808
train.py 2019-04-15 12:31:15	AP for car = 0.8797
train.py 2019-04-15 12:31:15	AP for pottedplant = 0.4890
train.py 2019-04-15 12:31:15	AP for tvmonitor = 0.7808
train.py 2019-04-15 12:31:15	AP for chair = 0.5965
train.py 2019-04-15 12:31:15	AP for bird = 0.7409
train.py 2019-04-15 12:31:15	AP for boat = 0.6034
train.py 2019-04-15 12:31:15	AP for motorbike = 0.8153
train.py 2019-04-15 12:31:15	mAP = 0.7594
train.py 2019-04-15 12:31:15	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 12:31:15	Average time for postprocess (cpu) :	6.35 ms
train.py 2019-04-15 12:31:15	Average time for nms (cpu) :	19.87 ms
train.py 2019-04-15 12:31:15	Average time for detect a image (cpu + gpu) :	49.44 ms
train.py 2019-04-15 12:31:15	Average time for inference (gpu) :	17.65 ms
train.py 2019-04-15 12:31:17	Saved model:	weights/yolo.ckpt-42-0.7594
train.py 2019-04-15 12:31:35	Learn rate:	0.000124	period:	43	step:	59321	train_loss:	13.2568
train.py 2019-04-15 12:33:17	Learn rate:	0.000124	period:	43	step:	59458	train_loss:	13.6616
train.py 2019-04-15 12:34:57	Learn rate:	0.000123	period:	43	step:	59595	train_loss:	12.9989
train.py 2019-04-15 12:36:35	Learn rate:	0.000123	period:	43	step:	59732	train_loss:	12.8748
train.py 2019-04-15 12:38:14	Learn rate:	0.000123	period:	43	step:	59869	train_loss:	13.1566
train.py 2019-04-15 12:39:55	Learn rate:	0.000122	period:	43	step:	60006	train_loss:	12.9427
train.py 2019-04-15 12:41:41	Learn rate:	0.000122	period:	43	step:	60143	train_loss:	13.2427
train.py 2019-04-15 12:43:22	Learn rate:	0.000122	period:	43	step:	60280	train_loss:	12.6244
train.py 2019-04-15 12:45:09	Learn rate:	0.000121	period:	43	step:	60417	train_loss:	13.2390
train.py 2019-04-15 12:46:47	Learn rate:	0.000121	period:	43	step:	60554	train_loss:	13.1839
train.py 2019-04-15 12:53:35	AP for sheep = 0.8007
train.py 2019-04-15 12:53:35	AP for horse = 0.8674
train.py 2019-04-15 12:53:35	AP for bicycle = 0.8627
train.py 2019-04-15 12:53:35	AP for aeroplane = 0.8478
train.py 2019-04-15 12:53:35	AP for cow = 0.7889
train.py 2019-04-15 12:53:35	AP for sofa = 0.7179
train.py 2019-04-15 12:53:35	AP for bus = 0.8269
train.py 2019-04-15 12:53:35	AP for dog = 0.8079
train.py 2019-04-15 12:53:35	AP for cat = 0.8503
train.py 2019-04-15 12:53:35	AP for person = 0.8328
train.py 2019-04-15 12:53:35	AP for train = 0.8000
train.py 2019-04-15 12:53:35	AP for diningtable = 0.7381
train.py 2019-04-15 12:53:35	AP for bottle = 0.6030
train.py 2019-04-15 12:53:35	AP for car = 0.8796
train.py 2019-04-15 12:53:35	AP for pottedplant = 0.4534
train.py 2019-04-15 12:53:35	AP for tvmonitor = 0.7480
train.py 2019-04-15 12:53:35	AP for chair = 0.5805
train.py 2019-04-15 12:53:35	AP for bird = 0.7548
train.py 2019-04-15 12:53:35	AP for boat = 0.6146
train.py 2019-04-15 12:53:35	AP for motorbike = 0.7816
train.py 2019-04-15 12:53:35	mAP = 0.7578
train.py 2019-04-15 12:53:35	Average time for preprocess (cpu) :	5.46 ms
train.py 2019-04-15 12:53:35	Average time for postprocess (cpu) :	6.53 ms
train.py 2019-04-15 12:53:35	Average time for nms (cpu) :	20.17 ms
train.py 2019-04-15 12:53:35	Average time for detect a image (cpu + gpu) :	50.00 ms
train.py 2019-04-15 12:53:35	Average time for inference (gpu) :	17.56 ms
train.py 2019-04-15 12:53:37	Saved model:	weights/yolo.ckpt-43-0.7578
train.py 2019-04-15 12:53:49	Learn rate:	0.000121	period:	44	step:	60691	train_loss:	13.2247
train.py 2019-04-15 12:55:31	Learn rate:	0.000121	period:	44	step:	60828	train_loss:	13.5935
train.py 2019-04-15 12:57:13	Learn rate:	0.000120	period:	44	step:	60965	train_loss:	12.7996
train.py 2019-04-15 12:58:58	Learn rate:	0.000120	period:	44	step:	61102	train_loss:	13.3014
train.py 2019-04-15 01:00:37	Learn rate:	0.000120	period:	44	step:	61239	train_loss:	12.7040
train.py 2019-04-15 01:02:16	Learn rate:	0.000119	period:	44	step:	61376	train_loss:	13.5842
train.py 2019-04-15 01:03:58	Learn rate:	0.000119	period:	44	step:	61513	train_loss:	12.9184
train.py 2019-04-15 01:05:38	Learn rate:	0.000119	period:	44	step:	61650	train_loss:	13.3250
train.py 2019-04-15 01:07:19	Learn rate:	0.000118	period:	44	step:	61787	train_loss:	12.9016
train.py 2019-04-15 01:09:05	Learn rate:	0.000118	period:	44	step:	61924	train_loss:	12.8156
train.py 2019-04-15 01:15:59	AP for sheep = 0.8031
train.py 2019-04-15 01:15:59	AP for horse = 0.8750
train.py 2019-04-15 01:15:59	AP for bicycle = 0.8636
train.py 2019-04-15 01:15:59	AP for aeroplane = 0.8153
train.py 2019-04-15 01:15:59	AP for cow = 0.7772
train.py 2019-04-15 01:15:59	AP for sofa = 0.7319
train.py 2019-04-15 01:15:59	AP for bus = 0.8135
train.py 2019-04-15 01:15:59	AP for dog = 0.8247
train.py 2019-04-15 01:15:59	AP for cat = 0.8678
train.py 2019-04-15 01:15:59	AP for person = 0.8310
train.py 2019-04-15 01:15:59	AP for train = 0.8254
train.py 2019-04-15 01:15:59	AP for diningtable = 0.7204
train.py 2019-04-15 01:15:59	AP for bottle = 0.5751
train.py 2019-04-15 01:15:59	AP for car = 0.8803
train.py 2019-04-15 01:15:59	AP for pottedplant = 0.4880
train.py 2019-04-15 01:15:59	AP for tvmonitor = 0.7756
train.py 2019-04-15 01:15:59	AP for chair = 0.5681
train.py 2019-04-15 01:15:59	AP for bird = 0.7403
train.py 2019-04-15 01:15:59	AP for boat = 0.6134
train.py 2019-04-15 01:15:59	AP for motorbike = 0.8341
train.py 2019-04-15 01:15:59	mAP = 0.7612
train.py 2019-04-15 01:15:59	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 01:15:59	Average time for postprocess (cpu) :	6.37 ms
train.py 2019-04-15 01:15:59	Average time for nms (cpu) :	20.35 ms
train.py 2019-04-15 01:15:59	Average time for detect a image (cpu + gpu) :	49.70 ms
train.py 2019-04-15 01:15:59	Average time for inference (gpu) :	17.42 ms
train.py 2019-04-15 01:16:01	Saved model:	weights/yolo.ckpt-44-0.7612
train.py 2019-04-15 01:16:07	Learn rate:	0.000118	period:	45	step:	62061	train_loss:	13.3607
train.py 2019-04-15 01:17:43	Learn rate:	0.000117	period:	45	step:	62198	train_loss:	13.3660
train.py 2019-04-15 01:19:28	Learn rate:	0.000117	period:	45	step:	62335	train_loss:	13.1257
train.py 2019-04-15 01:21:17	Learn rate:	0.000117	period:	45	step:	62472	train_loss:	12.3834
train.py 2019-04-15 01:23:02	Learn rate:	0.000117	period:	45	step:	62609	train_loss:	13.3107
train.py 2019-04-15 01:24:43	Learn rate:	0.000116	period:	45	step:	62746	train_loss:	12.7400
train.py 2019-04-15 01:26:29	Learn rate:	0.000116	period:	45	step:	62883	train_loss:	12.3341
train.py 2019-04-15 01:28:10	Learn rate:	0.000116	period:	45	step:	63020	train_loss:	13.0041
train.py 2019-04-15 01:29:53	Learn rate:	0.000115	period:	45	step:	63157	train_loss:	13.4354
train.py 2019-04-15 01:31:36	Learn rate:	0.000115	period:	45	step:	63294	train_loss:	12.9704
train.py 2019-04-15 01:33:23	Learn rate:	0.000115	period:	45	step:	63431	train_loss:	12.8791
train.py 2019-04-15 01:39:26	AP for sheep = 0.7744
train.py 2019-04-15 01:39:26	AP for horse = 0.8675
train.py 2019-04-15 01:39:26	AP for bicycle = 0.8594
train.py 2019-04-15 01:39:26	AP for aeroplane = 0.7592
train.py 2019-04-15 01:39:26	AP for cow = 0.8173
train.py 2019-04-15 01:39:26	AP for sofa = 0.7322
train.py 2019-04-15 01:39:26	AP for bus = 0.8339
train.py 2019-04-15 01:39:26	AP for dog = 0.8254
train.py 2019-04-15 01:39:26	AP for cat = 0.8552
train.py 2019-04-15 01:39:26	AP for person = 0.8183
train.py 2019-04-15 01:39:26	AP for train = 0.8138
train.py 2019-04-15 01:39:26	AP for diningtable = 0.7169
train.py 2019-04-15 01:39:26	AP for bottle = 0.5636
train.py 2019-04-15 01:39:26	AP for car = 0.8718
train.py 2019-04-15 01:39:26	AP for pottedplant = 0.4464
train.py 2019-04-15 01:39:26	AP for tvmonitor = 0.7703
train.py 2019-04-15 01:39:26	AP for chair = 0.5666
train.py 2019-04-15 01:39:26	AP for bird = 0.7257
train.py 2019-04-15 01:39:26	AP for boat = 0.6124
train.py 2019-04-15 01:39:26	AP for motorbike = 0.8085
train.py 2019-04-15 01:39:26	mAP = 0.7520
train.py 2019-04-15 01:39:26	Average time for preprocess (cpu) :	5.40 ms
train.py 2019-04-15 01:39:26	Average time for postprocess (cpu) :	6.53 ms
train.py 2019-04-15 01:39:26	Average time for nms (cpu) :	26.90 ms
train.py 2019-04-15 01:39:26	Average time for detect a image (cpu + gpu) :	56.69 ms
train.py 2019-04-15 01:39:26	Average time for inference (gpu) :	17.53 ms
train.py 2019-04-15 01:39:29	Saved model:	weights/yolo.ckpt-45-0.7520
train.py 2019-04-15 01:41:08	Learn rate:	0.000114	period:	46	step:	63568	train_loss:	13.1617
train.py 2019-04-15 01:42:53	Learn rate:	0.000114	period:	46	step:	63705	train_loss:	12.1864
train.py 2019-04-15 01:44:30	Learn rate:	0.000114	period:	46	step:	63842	train_loss:	12.8746
train.py 2019-04-15 01:46:12	Learn rate:	0.000113	period:	46	step:	63979	train_loss:	13.1627
train.py 2019-04-15 01:47:53	Learn rate:	0.000113	period:	46	step:	64116	train_loss:	13.1972
train.py 2019-04-15 01:49:39	Learn rate:	0.000113	period:	46	step:	64253	train_loss:	12.6997
train.py 2019-04-15 01:51:23	Learn rate:	0.000112	period:	46	step:	64390	train_loss:	12.6763
train.py 2019-04-15 01:53:02	Learn rate:	0.000112	period:	46	step:	64527	train_loss:	12.5802
train.py 2019-04-15 01:54:46	Learn rate:	0.000112	period:	46	step:	64664	train_loss:	12.8180
train.py 2019-04-15 01:56:33	Learn rate:	0.000112	period:	46	step:	64801	train_loss:	13.0609
train.py 2019-04-15 02:01:53	AP for sheep = 0.7763
train.py 2019-04-15 02:01:53	AP for horse = 0.8854
train.py 2019-04-15 02:01:53	AP for bicycle = 0.8681
train.py 2019-04-15 02:01:53	AP for aeroplane = 0.8011
train.py 2019-04-15 02:01:53	AP for cow = 0.7950
train.py 2019-04-15 02:01:53	AP for sofa = 0.7465
train.py 2019-04-15 02:01:53	AP for bus = 0.8286
train.py 2019-04-15 02:01:53	AP for dog = 0.7836
train.py 2019-04-15 02:01:53	AP for cat = 0.8142
train.py 2019-04-15 02:01:53	AP for person = 0.8303
train.py 2019-04-15 02:01:53	AP for train = 0.8052
train.py 2019-04-15 02:01:53	AP for diningtable = 0.7206
train.py 2019-04-15 02:01:53	AP for bottle = 0.5964
train.py 2019-04-15 02:01:53	AP for car = 0.8682
train.py 2019-04-15 02:01:53	AP for pottedplant = 0.4559
train.py 2019-04-15 02:01:53	AP for tvmonitor = 0.7549
train.py 2019-04-15 02:01:53	AP for chair = 0.5794
train.py 2019-04-15 02:01:53	AP for bird = 0.7551
train.py 2019-04-15 02:01:53	AP for boat = 0.6216
train.py 2019-04-15 02:01:53	AP for motorbike = 0.8213
train.py 2019-04-15 02:01:53	mAP = 0.7554
train.py 2019-04-15 02:01:53	Average time for preprocess (cpu) :	5.52 ms
train.py 2019-04-15 02:01:53	Average time for postprocess (cpu) :	6.45 ms
train.py 2019-04-15 02:01:53	Average time for nms (cpu) :	18.63 ms
train.py 2019-04-15 02:01:53	Average time for detect a image (cpu + gpu) :	49.69 ms
train.py 2019-04-15 02:01:53	Average time for inference (gpu) :	18.83 ms
train.py 2019-04-15 02:01:56	Saved model:	weights/yolo.ckpt-46-0.7554
train.py 2019-04-15 02:03:28	Learn rate:	0.000111	period:	47	step:	64938	train_loss:	12.6023
train.py 2019-04-15 02:05:09	Learn rate:	0.000111	period:	47	step:	65075	train_loss:	12.7899
train.py 2019-04-15 02:06:45	Learn rate:	0.000111	period:	47	step:	65212	train_loss:	12.8988
train.py 2019-04-15 02:08:29	Learn rate:	0.000110	period:	47	step:	65349	train_loss:	12.7317
train.py 2019-04-15 02:10:10	Learn rate:	0.000110	period:	47	step:	65486	train_loss:	12.7933
train.py 2019-04-15 02:11:55	Learn rate:	0.000110	period:	47	step:	65623	train_loss:	12.0980
train.py 2019-04-15 02:13:40	Learn rate:	0.000109	period:	47	step:	65760	train_loss:	13.3794
train.py 2019-04-15 02:15:18	Learn rate:	0.000109	period:	47	step:	65897	train_loss:	12.8367
train.py 2019-04-15 02:16:55	Learn rate:	0.000109	period:	47	step:	66034	train_loss:	13.4291
train.py 2019-04-15 02:18:35	Learn rate:	0.000108	period:	47	step:	66171	train_loss:	12.5074
train.py 2019-04-15 02:24:15	AP for sheep = 0.7602
train.py 2019-04-15 02:24:15	AP for horse = 0.8584
train.py 2019-04-15 02:24:15	AP for bicycle = 0.8787
train.py 2019-04-15 02:24:15	AP for aeroplane = 0.8207
train.py 2019-04-15 02:24:15	AP for cow = 0.8221
train.py 2019-04-15 02:24:15	AP for sofa = 0.7042
train.py 2019-04-15 02:24:15	AP for bus = 0.8464
train.py 2019-04-15 02:24:15	AP for dog = 0.8065
train.py 2019-04-15 02:24:15	AP for cat = 0.8349
train.py 2019-04-15 02:24:15	AP for person = 0.8379
train.py 2019-04-15 02:24:15	AP for train = 0.8382
train.py 2019-04-15 02:24:15	AP for diningtable = 0.7350
train.py 2019-04-15 02:24:15	AP for bottle = 0.5949
train.py 2019-04-15 02:24:15	AP for car = 0.8771
train.py 2019-04-15 02:24:15	AP for pottedplant = 0.4483
train.py 2019-04-15 02:24:15	AP for tvmonitor = 0.7519
train.py 2019-04-15 02:24:15	AP for chair = 0.5623
train.py 2019-04-15 02:24:15	AP for bird = 0.7744
train.py 2019-04-15 02:24:15	AP for boat = 0.6241
train.py 2019-04-15 02:24:15	AP for motorbike = 0.8386
train.py 2019-04-15 02:24:15	mAP = 0.7607
train.py 2019-04-15 02:24:15	Average time for preprocess (cpu) :	5.55 ms
train.py 2019-04-15 02:24:15	Average time for postprocess (cpu) :	6.37 ms
train.py 2019-04-15 02:24:15	Average time for nms (cpu) :	21.45 ms
train.py 2019-04-15 02:24:15	Average time for detect a image (cpu + gpu) :	51.29 ms
train.py 2019-04-15 02:24:15	Average time for inference (gpu) :	17.65 ms
train.py 2019-04-15 02:24:18	Saved model:	weights/yolo.ckpt-47-0.7607
train.py 2019-04-15 02:25:46	Learn rate:	0.000108	period:	48	step:	66308	train_loss:	12.6643
train.py 2019-04-15 02:27:32	Learn rate:	0.000108	period:	48	step:	66445	train_loss:	12.8177
train.py 2019-04-15 02:29:17	Learn rate:	0.000107	period:	48	step:	66582	train_loss:	12.7652
train.py 2019-04-15 02:31:00	Learn rate:	0.000107	period:	48	step:	66719	train_loss:	13.2170
train.py 2019-04-15 02:32:46	Learn rate:	0.000107	period:	48	step:	66856	train_loss:	12.6092
train.py 2019-04-15 02:34:30	Learn rate:	0.000107	period:	48	step:	66993	train_loss:	12.6227
train.py 2019-04-15 02:36:17	Learn rate:	0.000106	period:	48	step:	67130	train_loss:	12.1645
train.py 2019-04-15 02:38:00	Learn rate:	0.000106	period:	48	step:	67267	train_loss:	12.4552
train.py 2019-04-15 02:39:40	Learn rate:	0.000106	period:	48	step:	67404	train_loss:	12.7470
train.py 2019-04-15 02:41:16	Learn rate:	0.000105	period:	48	step:	67541	train_loss:	12.8809
train.py 2019-04-15 02:47:09	AP for sheep = 0.7689
train.py 2019-04-15 02:47:09	AP for horse = 0.8578
train.py 2019-04-15 02:47:09	AP for bicycle = 0.8543
train.py 2019-04-15 02:47:09	AP for aeroplane = 0.8157
train.py 2019-04-15 02:47:09	AP for cow = 0.7774
train.py 2019-04-15 02:47:09	AP for sofa = 0.7164
train.py 2019-04-15 02:47:09	AP for bus = 0.8525
train.py 2019-04-15 02:47:09	AP for dog = 0.7840
train.py 2019-04-15 02:47:09	AP for cat = 0.8459
train.py 2019-04-15 02:47:09	AP for person = 0.8320
train.py 2019-04-15 02:47:09	AP for train = 0.8480
train.py 2019-04-15 02:47:09	AP for diningtable = 0.7335
train.py 2019-04-15 02:47:09	AP for bottle = 0.6213
train.py 2019-04-15 02:47:09	AP for car = 0.8770
train.py 2019-04-15 02:47:09	AP for pottedplant = 0.5004
train.py 2019-04-15 02:47:09	AP for tvmonitor = 0.7413
train.py 2019-04-15 02:47:09	AP for chair = 0.5747
train.py 2019-04-15 02:47:09	AP for bird = 0.7480
train.py 2019-04-15 02:47:09	AP for boat = 0.6234
train.py 2019-04-15 02:47:09	AP for motorbike = 0.8239
train.py 2019-04-15 02:47:09	mAP = 0.7598
train.py 2019-04-15 02:47:09	Average time for preprocess (cpu) :	5.77 ms
train.py 2019-04-15 02:47:09	Average time for postprocess (cpu) :	6.41 ms
train.py 2019-04-15 02:47:09	Average time for nms (cpu) :	22.58 ms
train.py 2019-04-15 02:47:09	Average time for detect a image (cpu + gpu) :	52.86 ms
train.py 2019-04-15 02:47:09	Average time for inference (gpu) :	17.80 ms
train.py 2019-04-15 02:47:12	Saved model:	weights/yolo.ckpt-48-0.7598
train.py 2019-04-15 02:48:30	Learn rate:	0.000105	period:	49	step:	67678	train_loss:	12.3648
train.py 2019-04-15 02:50:12	Learn rate:	0.000105	period:	49	step:	67815	train_loss:	12.9975
train.py 2019-04-15 02:51:56	Learn rate:	0.000104	period:	49	step:	67952	train_loss:	12.6025
train.py 2019-04-15 02:53:31	Learn rate:	0.000104	period:	49	step:	68089	train_loss:	12.4400
train.py 2019-04-15 02:55:12	Learn rate:	0.000104	period:	49	step:	68226	train_loss:	12.7945
train.py 2019-04-15 02:56:55	Learn rate:	0.000103	period:	49	step:	68363	train_loss:	13.0267
train.py 2019-04-15 02:58:34	Learn rate:	0.000103	period:	49	step:	68500	train_loss:	12.4325
train.py 2019-04-15 03:00:15	Learn rate:	0.000103	period:	49	step:	68637	train_loss:	12.1450
train.py 2019-04-15 03:02:03	Learn rate:	0.000102	period:	49	step:	68774	train_loss:	12.8057
train.py 2019-04-15 03:03:47	Learn rate:	0.000102	period:	49	step:	68911	train_loss:	12.1671
train.py 2019-04-15 03:09:04	AP for sheep = 0.7934
train.py 2019-04-15 03:09:04	AP for horse = 0.8637
train.py 2019-04-15 03:09:04	AP for bicycle = 0.8621
train.py 2019-04-15 03:09:04	AP for aeroplane = 0.8047
train.py 2019-04-15 03:09:04	AP for cow = 0.8110
train.py 2019-04-15 03:09:04	AP for sofa = 0.7317
train.py 2019-04-15 03:09:04	AP for bus = 0.8503
train.py 2019-04-15 03:09:04	AP for dog = 0.8454
train.py 2019-04-15 03:09:04	AP for cat = 0.8479
train.py 2019-04-15 03:09:04	AP for person = 0.8436
train.py 2019-04-15 03:09:04	AP for train = 0.8533
train.py 2019-04-15 03:09:04	AP for diningtable = 0.7307
train.py 2019-04-15 03:09:04	AP for bottle = 0.6136
train.py 2019-04-15 03:09:04	AP for car = 0.8716
train.py 2019-04-15 03:09:04	AP for pottedplant = 0.4879
train.py 2019-04-15 03:09:04	AP for tvmonitor = 0.7846
train.py 2019-04-15 03:09:04	AP for chair = 0.5943
train.py 2019-04-15 03:09:04	AP for bird = 0.7642
train.py 2019-04-15 03:09:04	AP for boat = 0.6229
train.py 2019-04-15 03:09:04	AP for motorbike = 0.8298
train.py 2019-04-15 03:09:04	mAP = 0.7703
train.py 2019-04-15 03:09:04	Average time for preprocess (cpu) :	5.37 ms
train.py 2019-04-15 03:09:04	Average time for postprocess (cpu) :	6.45 ms
train.py 2019-04-15 03:09:04	Average time for nms (cpu) :	16.43 ms
train.py 2019-04-15 03:09:04	Average time for detect a image (cpu + gpu) :	46.13 ms
train.py 2019-04-15 03:09:04	Average time for inference (gpu) :	17.63 ms
train.py 2019-04-15 03:09:07	Saved model:	weights/yolo.ckpt-49-0.7703
train.py 2019-04-15 03:10:18	Learn rate:	0.000102	period:	50	step:	69048	train_loss:	12.5368
train.py 2019-04-15 03:11:54	Learn rate:	0.000102	period:	50	step:	69185	train_loss:	12.6050
train.py 2019-04-15 03:13:40	Learn rate:	0.000101	period:	50	step:	69322	train_loss:	12.5285
train.py 2019-04-15 03:15:19	Learn rate:	0.000101	period:	50	step:	69459	train_loss:	12.5324
train.py 2019-04-15 03:17:02	Learn rate:	0.000101	period:	50	step:	69596	train_loss:	12.6422
train.py 2019-04-15 03:18:49	Learn rate:	0.000100	period:	50	step:	69733	train_loss:	12.7544
train.py 2019-04-15 03:20:36	Learn rate:	0.000100	period:	50	step:	69870	train_loss:	12.2515
train.py 2019-04-15 03:22:14	Learn rate:	0.000100	period:	50	step:	70007	train_loss:	12.7010
train.py 2019-04-15 03:23:53	Learn rate:	0.000099	period:	50	step:	70144	train_loss:	12.6106
train.py 2019-04-15 03:25:33	Learn rate:	0.000099	period:	50	step:	70281	train_loss:	12.3773
train.py 2019-04-15 03:30:48	AP for sheep = 0.8010
train.py 2019-04-15 03:30:48	AP for horse = 0.8599
train.py 2019-04-15 03:30:48	AP for bicycle = 0.8756
train.py 2019-04-15 03:30:48	AP for aeroplane = 0.8390
train.py 2019-04-15 03:30:48	AP for cow = 0.7894
train.py 2019-04-15 03:30:48	AP for sofa = 0.7251
train.py 2019-04-15 03:30:48	AP for bus = 0.8266
train.py 2019-04-15 03:30:48	AP for dog = 0.8188
train.py 2019-04-15 03:30:48	AP for cat = 0.8691
train.py 2019-04-15 03:30:48	AP for person = 0.8347
train.py 2019-04-15 03:30:48	AP for train = 0.8166
train.py 2019-04-15 03:30:48	AP for diningtable = 0.7142
train.py 2019-04-15 03:30:48	AP for bottle = 0.6454
train.py 2019-04-15 03:30:48	AP for car = 0.8828
train.py 2019-04-15 03:30:48	AP for pottedplant = 0.4785
train.py 2019-04-15 03:30:48	AP for tvmonitor = 0.7645
train.py 2019-04-15 03:30:48	AP for chair = 0.5813
train.py 2019-04-15 03:30:48	AP for bird = 0.7491
train.py 2019-04-15 03:30:48	AP for boat = 0.6353
train.py 2019-04-15 03:30:48	AP for motorbike = 0.8415
train.py 2019-04-15 03:30:48	mAP = 0.7674
train.py 2019-04-15 03:30:48	Average time for preprocess (cpu) :	5.18 ms
train.py 2019-04-15 03:30:48	Average time for postprocess (cpu) :	5.80 ms
train.py 2019-04-15 03:30:48	Average time for nms (cpu) :	16.14 ms
train.py 2019-04-15 03:30:48	Average time for detect a image (cpu + gpu) :	44.55 ms
train.py 2019-04-15 03:30:48	Average time for inference (gpu) :	17.21 ms
train.py 2019-04-15 03:30:50	Saved model:	weights/yolo.ckpt-50-0.7674
train.py 2019-04-15 03:31:53	Learn rate:	0.000099	period:	51	step:	70418	train_loss:	12.2237
train.py 2019-04-15 03:33:30	Learn rate:	0.000098	period:	51	step:	70555	train_loss:	11.5243
train.py 2019-04-15 03:35:06	Learn rate:	0.000098	period:	51	step:	70692	train_loss:	12.3483
train.py 2019-04-15 03:36:47	Learn rate:	0.000098	period:	51	step:	70829	train_loss:	12.3189
train.py 2019-04-15 03:38:26	Learn rate:	0.000097	period:	51	step:	70966	train_loss:	12.5200
train.py 2019-04-15 03:40:03	Learn rate:	0.000097	period:	51	step:	71103	train_loss:	12.8664
train.py 2019-04-15 03:41:40	Learn rate:	0.000097	period:	51	step:	71240	train_loss:	13.5180
train.py 2019-04-15 03:43:20	Learn rate:	0.000097	period:	51	step:	71377	train_loss:	11.9890
train.py 2019-04-15 03:45:00	Learn rate:	0.000096	period:	51	step:	71514	train_loss:	12.0021
train.py 2019-04-15 03:46:41	Learn rate:	0.000096	period:	51	step:	71651	train_loss:	12.3433
train.py 2019-04-15 03:52:24	AP for sheep = 0.7694
train.py 2019-04-15 03:52:24	AP for horse = 0.8633
train.py 2019-04-15 03:52:24	AP for bicycle = 0.8602
train.py 2019-04-15 03:52:24	AP for aeroplane = 0.8103
train.py 2019-04-15 03:52:24	AP for cow = 0.7394
train.py 2019-04-15 03:52:24	AP for sofa = 0.7405
train.py 2019-04-15 03:52:24	AP for bus = 0.8445
train.py 2019-04-15 03:52:24	AP for dog = 0.8191
train.py 2019-04-15 03:52:24	AP for cat = 0.8691
train.py 2019-04-15 03:52:24	AP for person = 0.8351
train.py 2019-04-15 03:52:24	AP for train = 0.8481
train.py 2019-04-15 03:52:24	AP for diningtable = 0.7523
train.py 2019-04-15 03:52:24	AP for bottle = 0.5977
train.py 2019-04-15 03:52:24	AP for car = 0.8796
train.py 2019-04-15 03:52:24	AP for pottedplant = 0.4879
train.py 2019-04-15 03:52:24	AP for tvmonitor = 0.7685
train.py 2019-04-15 03:52:24	AP for chair = 0.5737
train.py 2019-04-15 03:52:24	AP for bird = 0.7370
train.py 2019-04-15 03:52:24	AP for boat = 0.6103
train.py 2019-04-15 03:52:24	AP for motorbike = 0.8272
train.py 2019-04-15 03:52:24	mAP = 0.7617
train.py 2019-04-15 03:52:24	Average time for preprocess (cpu) :	5.20 ms
train.py 2019-04-15 03:52:24	Average time for postprocess (cpu) :	5.72 ms
train.py 2019-04-15 03:52:24	Average time for nms (cpu) :	19.42 ms
train.py 2019-04-15 03:52:24	Average time for detect a image (cpu + gpu) :	47.88 ms
train.py 2019-04-15 03:52:24	Average time for inference (gpu) :	17.30 ms
train.py 2019-04-15 03:52:27	Saved model:	weights/yolo.ckpt-51-0.7617
train.py 2019-04-15 03:53:21	Learn rate:	0.000096	period:	52	step:	71788	train_loss:	12.1364
train.py 2019-04-15 03:55:00	Learn rate:	0.000095	period:	52	step:	71925	train_loss:	12.5968
train.py 2019-04-15 03:56:35	Learn rate:	0.000095	period:	52	step:	72062	train_loss:	12.5995
train.py 2019-04-15 03:58:15	Learn rate:	0.000095	period:	52	step:	72199	train_loss:	12.2382
train.py 2019-04-15 03:59:52	Learn rate:	0.000094	period:	52	step:	72336	train_loss:	12.4250
train.py 2019-04-15 04:01:34	Learn rate:	0.000094	period:	52	step:	72473	train_loss:	12.2639
train.py 2019-04-15 04:03:13	Learn rate:	0.000094	period:	52	step:	72610	train_loss:	12.7971
train.py 2019-04-15 04:04:59	Learn rate:	0.000093	period:	52	step:	72747	train_loss:	12.3703
train.py 2019-04-15 04:06:37	Learn rate:	0.000093	period:	52	step:	72884	train_loss:	12.2883
train.py 2019-04-15 04:08:15	Learn rate:	0.000093	period:	52	step:	73021	train_loss:	11.9730
train.py 2019-04-15 04:13:53	AP for sheep = 0.8095
train.py 2019-04-15 04:13:53	AP for horse = 0.8881
train.py 2019-04-15 04:13:53	AP for bicycle = 0.8665
train.py 2019-04-15 04:13:53	AP for aeroplane = 0.8244
train.py 2019-04-15 04:13:53	AP for cow = 0.8178
train.py 2019-04-15 04:13:53	AP for sofa = 0.7422
train.py 2019-04-15 04:13:53	AP for bus = 0.8609
train.py 2019-04-15 04:13:53	AP for dog = 0.8404
train.py 2019-04-15 04:13:53	AP for cat = 0.8589
train.py 2019-04-15 04:13:53	AP for person = 0.8337
train.py 2019-04-15 04:13:53	AP for train = 0.8418
train.py 2019-04-15 04:13:53	AP for diningtable = 0.7599
train.py 2019-04-15 04:13:53	AP for bottle = 0.5996
train.py 2019-04-15 04:13:53	AP for car = 0.8825
train.py 2019-04-15 04:13:53	AP for pottedplant = 0.4883
train.py 2019-04-15 04:13:53	AP for tvmonitor = 0.7795
train.py 2019-04-15 04:13:53	AP for chair = 0.5767
train.py 2019-04-15 04:13:53	AP for bird = 0.7455
train.py 2019-04-15 04:13:53	AP for boat = 0.5969
train.py 2019-04-15 04:13:53	AP for motorbike = 0.8427
train.py 2019-04-15 04:13:53	mAP = 0.7728
train.py 2019-04-15 04:13:53	Average time for preprocess (cpu) :	5.18 ms
train.py 2019-04-15 04:13:53	Average time for postprocess (cpu) :	5.77 ms
train.py 2019-04-15 04:13:53	Average time for nms (cpu) :	17.30 ms
train.py 2019-04-15 04:13:53	Average time for detect a image (cpu + gpu) :	45.55 ms
train.py 2019-04-15 04:13:53	Average time for inference (gpu) :	17.06 ms
train.py 2019-04-15 04:13:56	Saved model:	weights/yolo.ckpt-52-0.7728
train.py 2019-04-15 04:14:47	Learn rate:	0.000092	period:	53	step:	73158	train_loss:	12.2084
train.py 2019-04-15 04:16:28	Learn rate:	0.000092	period:	53	step:	73295	train_loss:	12.4115
train.py 2019-04-15 04:18:08	Learn rate:	0.000092	period:	53	step:	73432	train_loss:	12.0399
train.py 2019-04-15 04:19:46	Learn rate:	0.000092	period:	53	step:	73569	train_loss:	11.9308
train.py 2019-04-15 04:21:25	Learn rate:	0.000091	period:	53	step:	73706	train_loss:	12.2978
train.py 2019-04-15 04:23:05	Learn rate:	0.000091	period:	53	step:	73843	train_loss:	11.8337
train.py 2019-04-15 04:24:45	Learn rate:	0.000091	period:	53	step:	73980	train_loss:	12.1699
train.py 2019-04-15 04:26:22	Learn rate:	0.000090	period:	53	step:	74117	train_loss:	12.1764
train.py 2019-04-15 04:27:58	Learn rate:	0.000090	period:	53	step:	74254	train_loss:	12.0999
train.py 2019-04-15 04:29:33	Learn rate:	0.000090	period:	53	step:	74391	train_loss:	12.2120
train.py 2019-04-15 04:35:32	AP for sheep = 0.7498
train.py 2019-04-15 04:35:32	AP for horse = 0.8801
train.py 2019-04-15 04:35:32	AP for bicycle = 0.8568
train.py 2019-04-15 04:35:32	AP for aeroplane = 0.8417
train.py 2019-04-15 04:35:32	AP for cow = 0.8095
train.py 2019-04-15 04:35:32	AP for sofa = 0.7528
train.py 2019-04-15 04:35:32	AP for bus = 0.8614
train.py 2019-04-15 04:35:32	AP for dog = 0.8307
train.py 2019-04-15 04:35:32	AP for cat = 0.8714
train.py 2019-04-15 04:35:32	AP for person = 0.8313
train.py 2019-04-15 04:35:32	AP for train = 0.8580
train.py 2019-04-15 04:35:32	AP for diningtable = 0.7655
train.py 2019-04-15 04:35:32	AP for bottle = 0.6144
train.py 2019-04-15 04:35:32	AP for car = 0.8839
train.py 2019-04-15 04:35:32	AP for pottedplant = 0.4626
train.py 2019-04-15 04:35:32	AP for tvmonitor = 0.7733
train.py 2019-04-15 04:35:32	AP for chair = 0.5816
train.py 2019-04-15 04:35:32	AP for bird = 0.7524
train.py 2019-04-15 04:35:32	AP for boat = 0.6075
train.py 2019-04-15 04:35:32	AP for motorbike = 0.8091
train.py 2019-04-15 04:35:32	mAP = 0.7697
train.py 2019-04-15 04:35:32	Average time for preprocess (cpu) :	5.25 ms
train.py 2019-04-15 04:35:32	Average time for postprocess (cpu) :	5.79 ms
train.py 2019-04-15 04:35:32	Average time for nms (cpu) :	19.46 ms
train.py 2019-04-15 04:35:32	Average time for detect a image (cpu + gpu) :	48.12 ms
train.py 2019-04-15 04:35:32	Average time for inference (gpu) :	17.38 ms
train.py 2019-04-15 04:35:35	Saved model:	weights/yolo.ckpt-53-0.7697
train.py 2019-04-15 04:36:21	Learn rate:	0.000089	period:	54	step:	74528	train_loss:	11.8923
train.py 2019-04-15 04:38:00	Learn rate:	0.000089	period:	54	step:	74665	train_loss:	11.9740
train.py 2019-04-15 04:39:40	Learn rate:	0.000089	period:	54	step:	74802	train_loss:	11.8239
train.py 2019-04-15 04:41:21	Learn rate:	0.000088	period:	54	step:	74939	train_loss:	12.4332
train.py 2019-04-15 04:43:06	Learn rate:	0.000088	period:	54	step:	75076	train_loss:	12.6053
train.py 2019-04-15 04:44:47	Learn rate:	0.000088	period:	54	step:	75213	train_loss:	12.2844
train.py 2019-04-15 04:46:31	Learn rate:	0.000087	period:	54	step:	75350	train_loss:	12.4448
train.py 2019-04-15 04:48:11	Learn rate:	0.000087	period:	54	step:	75487	train_loss:	12.2207
train.py 2019-04-15 04:49:53	Learn rate:	0.000087	period:	54	step:	75624	train_loss:	12.9806
train.py 2019-04-15 04:51:33	Learn rate:	0.000087	period:	54	step:	75761	train_loss:	12.0444
train.py 2019-04-15 04:57:24	AP for sheep = 0.8189
train.py 2019-04-15 04:57:24	AP for horse = 0.8726
train.py 2019-04-15 04:57:24	AP for bicycle = 0.8664
train.py 2019-04-15 04:57:24	AP for aeroplane = 0.8596
train.py 2019-04-15 04:57:24	AP for cow = 0.8139
train.py 2019-04-15 04:57:24	AP for sofa = 0.7163
train.py 2019-04-15 04:57:24	AP for bus = 0.8601
train.py 2019-04-15 04:57:24	AP for dog = 0.8521
train.py 2019-04-15 04:57:24	AP for cat = 0.8641
train.py 2019-04-15 04:57:24	AP for person = 0.8411
train.py 2019-04-15 04:57:24	AP for train = 0.8562
train.py 2019-04-15 04:57:24	AP for diningtable = 0.7444
train.py 2019-04-15 04:57:24	AP for bottle = 0.6467
train.py 2019-04-15 04:57:24	AP for car = 0.8815
train.py 2019-04-15 04:57:24	AP for pottedplant = 0.4895
train.py 2019-04-15 04:57:24	AP for tvmonitor = 0.7802
train.py 2019-04-15 04:57:24	AP for chair = 0.5751
train.py 2019-04-15 04:57:24	AP for bird = 0.7319
train.py 2019-04-15 04:57:24	AP for boat = 0.6150
train.py 2019-04-15 04:57:24	AP for motorbike = 0.8210
train.py 2019-04-15 04:57:24	mAP = 0.7753
train.py 2019-04-15 04:57:24	Average time for preprocess (cpu) :	5.21 ms
train.py 2019-04-15 04:57:24	Average time for postprocess (cpu) :	5.81 ms
train.py 2019-04-15 04:57:24	Average time for nms (cpu) :	17.65 ms
train.py 2019-04-15 04:57:24	Average time for detect a image (cpu + gpu) :	46.13 ms
train.py 2019-04-15 04:57:24	Average time for inference (gpu) :	17.25 ms
train.py 2019-04-15 04:57:27	Saved model:	weights/yolo.ckpt-54-0.7753
train.py 2019-04-15 04:58:07	Learn rate:	0.000086	period:	55	step:	75898	train_loss:	12.0114
train.py 2019-04-15 04:59:43	Learn rate:	0.000086	period:	55	step:	76035	train_loss:	12.5081
train.py 2019-04-15 05:01:22	Learn rate:	0.000086	period:	55	step:	76172	train_loss:	11.6837
train.py 2019-04-15 05:03:04	Learn rate:	0.000085	period:	55	step:	76309	train_loss:	11.7391
train.py 2019-04-15 05:04:43	Learn rate:	0.000085	period:	55	step:	76446	train_loss:	11.7519
train.py 2019-04-15 05:06:23	Learn rate:	0.000085	period:	55	step:	76583	train_loss:	12.1936
train.py 2019-04-15 05:08:03	Learn rate:	0.000084	period:	55	step:	76720	train_loss:	12.0063
train.py 2019-04-15 05:09:42	Learn rate:	0.000084	period:	55	step:	76857	train_loss:	11.7022
train.py 2019-04-15 05:11:22	Learn rate:	0.000084	period:	55	step:	76994	train_loss:	12.0493
train.py 2019-04-15 05:13:03	Learn rate:	0.000083	period:	55	step:	77131	train_loss:	12.6407
train.py 2019-04-15 05:19:16	AP for sheep = 0.7809
train.py 2019-04-15 05:19:16	AP for horse = 0.8777
train.py 2019-04-15 05:19:16	AP for bicycle = 0.8688
train.py 2019-04-15 05:19:16	AP for aeroplane = 0.8052
train.py 2019-04-15 05:19:16	AP for cow = 0.8315
train.py 2019-04-15 05:19:16	AP for sofa = 0.7411
train.py 2019-04-15 05:19:16	AP for bus = 0.8591
train.py 2019-04-15 05:19:16	AP for dog = 0.8343
train.py 2019-04-15 05:19:16	AP for cat = 0.8566
train.py 2019-04-15 05:19:16	AP for person = 0.8438
train.py 2019-04-15 05:19:16	AP for train = 0.8483
train.py 2019-04-15 05:19:16	AP for diningtable = 0.7285
train.py 2019-04-15 05:19:16	AP for bottle = 0.6091
train.py 2019-04-15 05:19:16	AP for car = 0.8863
train.py 2019-04-15 05:19:16	AP for pottedplant = 0.4445
train.py 2019-04-15 05:19:16	AP for tvmonitor = 0.7878
train.py 2019-04-15 05:19:16	AP for chair = 0.5854
train.py 2019-04-15 05:19:16	AP for bird = 0.7407
train.py 2019-04-15 05:19:16	AP for boat = 0.5900
train.py 2019-04-15 05:19:16	AP for motorbike = 0.8478
train.py 2019-04-15 05:19:16	mAP = 0.7684
train.py 2019-04-15 05:19:16	Average time for preprocess (cpu) :	5.17 ms
train.py 2019-04-15 05:19:16	Average time for postprocess (cpu) :	5.89 ms
train.py 2019-04-15 05:19:16	Average time for nms (cpu) :	19.99 ms
train.py 2019-04-15 05:19:16	Average time for detect a image (cpu + gpu) :	48.72 ms
train.py 2019-04-15 05:19:16	Average time for inference (gpu) :	17.41 ms
train.py 2019-04-15 05:19:19	Saved model:	weights/yolo.ckpt-55-0.7684
train.py 2019-04-15 05:19:54	Learn rate:	0.000083	period:	56	step:	77268	train_loss:	11.5542
train.py 2019-04-15 05:21:36	Learn rate:	0.000083	period:	56	step:	77405	train_loss:	12.2507
train.py 2019-04-15 05:23:14	Learn rate:	0.000083	period:	56	step:	77542	train_loss:	11.6614
train.py 2019-04-15 05:24:52	Learn rate:	0.000082	period:	56	step:	77679	train_loss:	11.7219
train.py 2019-04-15 05:26:33	Learn rate:	0.000082	period:	56	step:	77816	train_loss:	12.3746
train.py 2019-04-15 05:28:07	Learn rate:	0.000082	period:	56	step:	77953	train_loss:	12.4980
train.py 2019-04-15 05:29:46	Learn rate:	0.000081	period:	56	step:	78090	train_loss:	11.7247
train.py 2019-04-15 05:31:27	Learn rate:	0.000081	period:	56	step:	78227	train_loss:	12.1611
train.py 2019-04-15 05:33:10	Learn rate:	0.000081	period:	56	step:	78364	train_loss:	11.9302
train.py 2019-04-15 05:34:46	Learn rate:	0.000080	period:	56	step:	78501	train_loss:	11.7947
train.py 2019-04-15 05:40:34	AP for sheep = 0.7942
train.py 2019-04-15 05:40:34	AP for horse = 0.8681
train.py 2019-04-15 05:40:34	AP for bicycle = 0.8655
train.py 2019-04-15 05:40:34	AP for aeroplane = 0.8324
train.py 2019-04-15 05:40:34	AP for cow = 0.8269
train.py 2019-04-15 05:40:34	AP for sofa = 0.7531
train.py 2019-04-15 05:40:34	AP for bus = 0.8430
train.py 2019-04-15 05:40:34	AP for dog = 0.8002
train.py 2019-04-15 05:40:34	AP for cat = 0.8578
train.py 2019-04-15 05:40:34	AP for person = 0.8375
train.py 2019-04-15 05:40:34	AP for train = 0.8205
train.py 2019-04-15 05:40:34	AP for diningtable = 0.7393
train.py 2019-04-15 05:40:34	AP for bottle = 0.6204
train.py 2019-04-15 05:40:34	AP for car = 0.8839
train.py 2019-04-15 05:40:34	AP for pottedplant = 0.4663
train.py 2019-04-15 05:40:34	AP for tvmonitor = 0.7973
train.py 2019-04-15 05:40:34	AP for chair = 0.5825
train.py 2019-04-15 05:40:34	AP for bird = 0.7407
train.py 2019-04-15 05:40:34	AP for boat = 0.6281
train.py 2019-04-15 05:40:34	AP for motorbike = 0.8429
train.py 2019-04-15 05:40:34	mAP = 0.7700
train.py 2019-04-15 05:40:34	Average time for preprocess (cpu) :	5.39 ms
train.py 2019-04-15 05:40:34	Average time for postprocess (cpu) :	5.81 ms
train.py 2019-04-15 05:40:34	Average time for nms (cpu) :	15.40 ms
train.py 2019-04-15 05:40:34	Average time for detect a image (cpu + gpu) :	43.92 ms
train.py 2019-04-15 05:40:34	Average time for inference (gpu) :	17.10 ms
train.py 2019-04-15 05:40:37	Saved model:	weights/yolo.ckpt-56-0.7700
train.py 2019-04-15 05:41:05	Learn rate:	0.000080	period:	57	step:	78638	train_loss:	11.9400
train.py 2019-04-15 05:42:52	Learn rate:	0.000080	period:	57	step:	78775	train_loss:	11.5840
train.py 2019-04-15 05:44:36	Learn rate:	0.000079	period:	57	step:	78912	train_loss:	11.0826
train.py 2019-04-15 05:46:16	Learn rate:	0.000079	period:	57	step:	79049	train_loss:	12.1055
train.py 2019-04-15 05:47:57	Learn rate:	0.000079	period:	57	step:	79186	train_loss:	11.7232
train.py 2019-04-15 05:49:31	Learn rate:	0.000079	period:	57	step:	79323	train_loss:	12.0947
train.py 2019-04-15 05:51:06	Learn rate:	0.000078	period:	57	step:	79460	train_loss:	11.6188
train.py 2019-04-15 05:52:47	Learn rate:	0.000078	period:	57	step:	79597	train_loss:	11.7012
train.py 2019-04-15 05:54:22	Learn rate:	0.000078	period:	57	step:	79734	train_loss:	11.2672
train.py 2019-04-15 05:55:58	Learn rate:	0.000077	period:	57	step:	79871	train_loss:	12.0323
train.py 2019-04-15 06:02:14	AP for sheep = 0.8243
train.py 2019-04-15 06:02:14	AP for horse = 0.8789
train.py 2019-04-15 06:02:14	AP for bicycle = 0.8687
train.py 2019-04-15 06:02:14	AP for aeroplane = 0.8467
train.py 2019-04-15 06:02:14	AP for cow = 0.8345
train.py 2019-04-15 06:02:14	AP for sofa = 0.7705
train.py 2019-04-15 06:02:14	AP for bus = 0.8327
train.py 2019-04-15 06:02:14	AP for dog = 0.8342
train.py 2019-04-15 06:02:14	AP for cat = 0.8691
train.py 2019-04-15 06:02:14	AP for person = 0.8396
train.py 2019-04-15 06:02:14	AP for train = 0.8613
train.py 2019-04-15 06:02:14	AP for diningtable = 0.7325
train.py 2019-04-15 06:02:14	AP for bottle = 0.6401
train.py 2019-04-15 06:02:14	AP for car = 0.8807
train.py 2019-04-15 06:02:14	AP for pottedplant = 0.4950
train.py 2019-04-15 06:02:14	AP for tvmonitor = 0.7844
train.py 2019-04-15 06:02:14	AP for chair = 0.5766
train.py 2019-04-15 06:02:14	AP for bird = 0.7291
train.py 2019-04-15 06:02:14	AP for boat = 0.6316
train.py 2019-04-15 06:02:14	AP for motorbike = 0.8207
train.py 2019-04-15 06:02:14	mAP = 0.7776
train.py 2019-04-15 06:02:14	Average time for preprocess (cpu) :	5.32 ms
train.py 2019-04-15 06:02:14	Average time for postprocess (cpu) :	5.91 ms
train.py 2019-04-15 06:02:14	Average time for nms (cpu) :	17.98 ms
train.py 2019-04-15 06:02:14	Average time for detect a image (cpu + gpu) :	46.68 ms
train.py 2019-04-15 06:02:14	Average time for inference (gpu) :	17.22 ms
train.py 2019-04-15 06:02:16	Saved model:	weights/yolo.ckpt-57-0.7776
train.py 2019-04-15 06:02:36	Learn rate:	0.000077	period:	58	step:	80008	train_loss:	12.1857
train.py 2019-04-15 06:04:16	Learn rate:	0.000077	period:	58	step:	80145	train_loss:	11.3059
train.py 2019-04-15 06:05:56	Learn rate:	0.000076	period:	58	step:	80282	train_loss:	11.6515
train.py 2019-04-15 06:07:34	Learn rate:	0.000076	period:	58	step:	80419	train_loss:	11.7341
train.py 2019-04-15 06:09:12	Learn rate:	0.000076	period:	58	step:	80556	train_loss:	11.8458
train.py 2019-04-15 06:10:46	Learn rate:	0.000075	period:	58	step:	80693	train_loss:	11.9071
train.py 2019-04-15 06:12:29	Learn rate:	0.000075	period:	58	step:	80830	train_loss:	12.3827
train.py 2019-04-15 06:14:13	Learn rate:	0.000075	period:	58	step:	80967	train_loss:	12.1608
train.py 2019-04-15 06:15:52	Learn rate:	0.000075	period:	58	step:	81104	train_loss:	11.6032
train.py 2019-04-15 06:17:32	Learn rate:	0.000074	period:	58	step:	81241	train_loss:	12.2628
train.py 2019-04-15 06:24:00	AP for sheep = 0.8063
train.py 2019-04-15 06:24:00	AP for horse = 0.8631
train.py 2019-04-15 06:24:00	AP for bicycle = 0.8474
train.py 2019-04-15 06:24:00	AP for aeroplane = 0.8088
train.py 2019-04-15 06:24:00	AP for cow = 0.7935
train.py 2019-04-15 06:24:00	AP for sofa = 0.7190
train.py 2019-04-15 06:24:00	AP for bus = 0.8350
train.py 2019-04-15 06:24:00	AP for dog = 0.8211
train.py 2019-04-15 06:24:00	AP for cat = 0.8655
train.py 2019-04-15 06:24:00	AP for person = 0.8314
train.py 2019-04-15 06:24:00	AP for train = 0.8254
train.py 2019-04-15 06:24:00	AP for diningtable = 0.7155
train.py 2019-04-15 06:24:00	AP for bottle = 0.6194
train.py 2019-04-15 06:24:00	AP for car = 0.8697
train.py 2019-04-15 06:24:00	AP for pottedplant = 0.4633
train.py 2019-04-15 06:24:00	AP for tvmonitor = 0.7560
train.py 2019-04-15 06:24:00	AP for chair = 0.5573
train.py 2019-04-15 06:24:00	AP for bird = 0.7410
train.py 2019-04-15 06:24:00	AP for boat = 0.6088
train.py 2019-04-15 06:24:00	AP for motorbike = 0.8301
train.py 2019-04-15 06:24:00	mAP = 0.7589
train.py 2019-04-15 06:24:00	Average time for preprocess (cpu) :	5.17 ms
train.py 2019-04-15 06:24:00	Average time for postprocess (cpu) :	5.91 ms
train.py 2019-04-15 06:24:00	Average time for nms (cpu) :	18.13 ms
train.py 2019-04-15 06:24:00	Average time for detect a image (cpu + gpu) :	46.82 ms
train.py 2019-04-15 06:24:00	Average time for inference (gpu) :	17.36 ms
train.py 2019-04-15 06:24:03	Saved model:	weights/yolo.ckpt-58-0.7589
train.py 2019-04-15 06:24:16	Learn rate:	0.000074	period:	59	step:	81378	train_loss:	11.5695
train.py 2019-04-15 06:25:50	Learn rate:	0.000074	period:	59	step:	81515	train_loss:	11.7292
train.py 2019-04-15 06:27:30	Learn rate:	0.000073	period:	59	step:	81652	train_loss:	11.7851
train.py 2019-04-15 06:29:04	Learn rate:	0.000073	period:	59	step:	81789	train_loss:	11.2593
train.py 2019-04-15 06:30:42	Learn rate:	0.000073	period:	59	step:	81926	train_loss:	12.1366
train.py 2019-04-15 06:32:19	Learn rate:	0.000072	period:	59	step:	82063	train_loss:	11.5837
train.py 2019-04-15 06:34:03	Learn rate:	0.000072	period:	59	step:	82200	train_loss:	11.6910
train.py 2019-04-15 06:35:42	Learn rate:	0.000072	period:	59	step:	82337	train_loss:	11.9801
train.py 2019-04-15 06:37:19	Learn rate:	0.000072	period:	59	step:	82474	train_loss:	11.9814
train.py 2019-04-15 06:38:59	Learn rate:	0.000071	period:	59	step:	82611	train_loss:	11.7604
train.py 2019-04-15 06:45:24	AP for sheep = 0.8012
train.py 2019-04-15 06:45:24	AP for horse = 0.8800
train.py 2019-04-15 06:45:24	AP for bicycle = 0.8670
train.py 2019-04-15 06:45:24	AP for aeroplane = 0.7481
train.py 2019-04-15 06:45:24	AP for cow = 0.7976
train.py 2019-04-15 06:45:24	AP for sofa = 0.7485
train.py 2019-04-15 06:45:24	AP for bus = 0.8530
train.py 2019-04-15 06:45:24	AP for dog = 0.8141
train.py 2019-04-15 06:45:24	AP for cat = 0.8748
train.py 2019-04-15 06:45:24	AP for person = 0.8408
train.py 2019-04-15 06:45:24	AP for train = 0.8267
train.py 2019-04-15 06:45:24	AP for diningtable = 0.7140
train.py 2019-04-15 06:45:24	AP for bottle = 0.6229
train.py 2019-04-15 06:45:24	AP for car = 0.8772
train.py 2019-04-15 06:45:24	AP for pottedplant = 0.4663
train.py 2019-04-15 06:45:24	AP for tvmonitor = 0.7652
train.py 2019-04-15 06:45:24	AP for chair = 0.5721
train.py 2019-04-15 06:45:24	AP for bird = 0.7355
train.py 2019-04-15 06:45:24	AP for boat = 0.6080
train.py 2019-04-15 06:45:24	AP for motorbike = 0.8164
train.py 2019-04-15 06:45:24	mAP = 0.7615
train.py 2019-04-15 06:45:24	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 06:45:24	Average time for postprocess (cpu) :	5.94 ms
train.py 2019-04-15 06:45:24	Average time for nms (cpu) :	18.29 ms
train.py 2019-04-15 06:45:24	Average time for detect a image (cpu + gpu) :	47.18 ms
train.py 2019-04-15 06:45:24	Average time for inference (gpu) :	17.39 ms
train.py 2019-04-15 06:45:26	Saved model:	weights/yolo.ckpt-59-0.7615
train.py 2019-04-15 06:45:33	Learn rate:	0.000071	period:	60	step:	82748	train_loss:	11.4064
train.py 2019-04-15 06:47:17	Learn rate:	0.000071	period:	60	step:	82885	train_loss:	11.7441
train.py 2019-04-15 06:48:57	Learn rate:	0.000070	period:	60	step:	83022	train_loss:	11.5759
train.py 2019-04-15 06:50:38	Learn rate:	0.000070	period:	60	step:	83159	train_loss:	11.7216
train.py 2019-04-15 06:52:20	Learn rate:	0.000070	period:	60	step:	83296	train_loss:	11.5038
train.py 2019-04-15 06:54:03	Learn rate:	0.000069	period:	60	step:	83433	train_loss:	11.3695
train.py 2019-04-15 06:55:42	Learn rate:	0.000069	period:	60	step:	83570	train_loss:	11.6997
train.py 2019-04-15 06:57:22	Learn rate:	0.000069	period:	60	step:	83707	train_loss:	11.5979
train.py 2019-04-15 06:58:57	Learn rate:	0.000069	period:	60	step:	83844	train_loss:	11.4418
train.py 2019-04-15 07:00:40	Learn rate:	0.000068	period:	60	step:	83981	train_loss:	11.1021
train.py 2019-04-15 07:02:19	Learn rate:	0.000068	period:	60	step:	84118	train_loss:	12.0272
train.py 2019-04-15 07:07:01	AP for sheep = 0.8169
train.py 2019-04-15 07:07:01	AP for horse = 0.8709
train.py 2019-04-15 07:07:01	AP for bicycle = 0.8674
train.py 2019-04-15 07:07:01	AP for aeroplane = 0.8256
train.py 2019-04-15 07:07:01	AP for cow = 0.8453
train.py 2019-04-15 07:07:01	AP for sofa = 0.7347
train.py 2019-04-15 07:07:01	AP for bus = 0.8426
train.py 2019-04-15 07:07:01	AP for dog = 0.8460
train.py 2019-04-15 07:07:01	AP for cat = 0.8711
train.py 2019-04-15 07:07:01	AP for person = 0.8397
train.py 2019-04-15 07:07:01	AP for train = 0.8516
train.py 2019-04-15 07:07:01	AP for diningtable = 0.7433
train.py 2019-04-15 07:07:01	AP for bottle = 0.6209
train.py 2019-04-15 07:07:01	AP for car = 0.8763
train.py 2019-04-15 07:07:01	AP for pottedplant = 0.4932
train.py 2019-04-15 07:07:01	AP for tvmonitor = 0.7760
train.py 2019-04-15 07:07:01	AP for chair = 0.5821
train.py 2019-04-15 07:07:01	AP for bird = 0.7484
train.py 2019-04-15 07:07:01	AP for boat = 0.6168
train.py 2019-04-15 07:07:01	AP for motorbike = 0.7960
train.py 2019-04-15 07:07:01	mAP = 0.7732
train.py 2019-04-15 07:07:01	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 07:07:01	Average time for postprocess (cpu) :	5.83 ms
train.py 2019-04-15 07:07:01	Average time for nms (cpu) :	16.07 ms
train.py 2019-04-15 07:07:01	Average time for detect a image (cpu + gpu) :	44.51 ms
train.py 2019-04-15 07:07:01	Average time for inference (gpu) :	17.12 ms
train.py 2019-04-15 07:07:03	Saved model:	weights/yolo.ckpt-60-0.7732
train.py 2019-04-15 07:08:39	Learn rate:	0.000068	period:	61	step:	84255	train_loss:	11.9805
train.py 2019-04-15 07:10:22	Learn rate:	0.000067	period:	61	step:	84392	train_loss:	11.4586
train.py 2019-04-15 07:12:03	Learn rate:	0.000067	period:	61	step:	84529	train_loss:	11.9583
train.py 2019-04-15 07:13:42	Learn rate:	0.000067	period:	61	step:	84666	train_loss:	11.4762
train.py 2019-04-15 07:15:20	Learn rate:	0.000066	period:	61	step:	84803	train_loss:	11.5076
train.py 2019-04-15 07:17:01	Learn rate:	0.000066	period:	61	step:	84940	train_loss:	11.9673
train.py 2019-04-15 07:18:41	Learn rate:	0.000066	period:	61	step:	85077	train_loss:	12.2145
train.py 2019-04-15 07:20:23	Learn rate:	0.000066	period:	61	step:	85214	train_loss:	10.9856
train.py 2019-04-15 07:22:02	Learn rate:	0.000065	period:	61	step:	85351	train_loss:	11.5940
train.py 2019-04-15 07:23:42	Learn rate:	0.000065	period:	61	step:	85488	train_loss:	11.8110
train.py 2019-04-15 07:28:36	AP for sheep = 0.8072
train.py 2019-04-15 07:28:36	AP for horse = 0.8840
train.py 2019-04-15 07:28:36	AP for bicycle = 0.8736
train.py 2019-04-15 07:28:36	AP for aeroplane = 0.8379
train.py 2019-04-15 07:28:36	AP for cow = 0.8286
train.py 2019-04-15 07:28:36	AP for sofa = 0.7356
train.py 2019-04-15 07:28:36	AP for bus = 0.8514
train.py 2019-04-15 07:28:36	AP for dog = 0.8368
train.py 2019-04-15 07:28:36	AP for cat = 0.8720
train.py 2019-04-15 07:28:36	AP for person = 0.8316
train.py 2019-04-15 07:28:36	AP for train = 0.8533
train.py 2019-04-15 07:28:36	AP for diningtable = 0.7112
train.py 2019-04-15 07:28:36	AP for bottle = 0.6201
train.py 2019-04-15 07:28:36	AP for car = 0.8792
train.py 2019-04-15 07:28:36	AP for pottedplant = 0.4572
train.py 2019-04-15 07:28:36	AP for tvmonitor = 0.7538
train.py 2019-04-15 07:28:36	AP for chair = 0.5695
train.py 2019-04-15 07:28:36	AP for bird = 0.7570
train.py 2019-04-15 07:28:36	AP for boat = 0.6293
train.py 2019-04-15 07:28:36	AP for motorbike = 0.8299
train.py 2019-04-15 07:28:36	mAP = 0.7710
train.py 2019-04-15 07:28:36	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-15 07:28:36	Average time for postprocess (cpu) :	5.93 ms
train.py 2019-04-15 07:28:36	Average time for nms (cpu) :	16.66 ms
train.py 2019-04-15 07:28:36	Average time for detect a image (cpu + gpu) :	45.67 ms
train.py 2019-04-15 07:28:36	Average time for inference (gpu) :	17.53 ms
train.py 2019-04-15 07:28:39	Saved model:	weights/yolo.ckpt-61-0.7710
train.py 2019-04-15 07:30:14	Learn rate:	0.000065	period:	62	step:	85625	train_loss:	11.6378
train.py 2019-04-15 07:31:54	Learn rate:	0.000064	period:	62	step:	85762	train_loss:	12.1629
train.py 2019-04-15 07:33:33	Learn rate:	0.000064	period:	62	step:	85899	train_loss:	11.3981
train.py 2019-04-15 07:35:05	Learn rate:	0.000064	period:	62	step:	86036	train_loss:	11.7880
train.py 2019-04-15 07:36:47	Learn rate:	0.000064	period:	62	step:	86173	train_loss:	11.3386
train.py 2019-04-15 07:38:28	Learn rate:	0.000063	period:	62	step:	86310	train_loss:	11.8105
train.py 2019-04-15 07:40:10	Learn rate:	0.000063	period:	62	step:	86447	train_loss:	12.1492
train.py 2019-04-15 07:41:51	Learn rate:	0.000063	period:	62	step:	86584	train_loss:	11.6285
train.py 2019-04-15 07:43:33	Learn rate:	0.000062	period:	62	step:	86721	train_loss:	10.9350
train.py 2019-04-15 07:45:10	Learn rate:	0.000062	period:	62	step:	86858	train_loss:	11.4260
train.py 2019-04-15 07:50:06	AP for sheep = 0.8071
train.py 2019-04-15 07:50:06	AP for horse = 0.8825
train.py 2019-04-15 07:50:06	AP for bicycle = 0.8789
train.py 2019-04-15 07:50:06	AP for aeroplane = 0.8196
train.py 2019-04-15 07:50:06	AP for cow = 0.8356
train.py 2019-04-15 07:50:06	AP for sofa = 0.7380
train.py 2019-04-15 07:50:06	AP for bus = 0.8569
train.py 2019-04-15 07:50:06	AP for dog = 0.8275
train.py 2019-04-15 07:50:06	AP for cat = 0.8692
train.py 2019-04-15 07:50:06	AP for person = 0.8394
train.py 2019-04-15 07:50:06	AP for train = 0.8489
train.py 2019-04-15 07:50:06	AP for diningtable = 0.7488
train.py 2019-04-15 07:50:06	AP for bottle = 0.6436
train.py 2019-04-15 07:50:06	AP for car = 0.8850
train.py 2019-04-15 07:50:06	AP for pottedplant = 0.5134
train.py 2019-04-15 07:50:06	AP for tvmonitor = 0.7598
train.py 2019-04-15 07:50:06	AP for chair = 0.5751
train.py 2019-04-15 07:50:06	AP for bird = 0.7453
train.py 2019-04-15 07:50:06	AP for boat = 0.5894
train.py 2019-04-15 07:50:06	AP for motorbike = 0.8349
train.py 2019-04-15 07:50:06	mAP = 0.7750
train.py 2019-04-15 07:50:06	Average time for preprocess (cpu) :	5.37 ms
train.py 2019-04-15 07:50:06	Average time for postprocess (cpu) :	5.97 ms
train.py 2019-04-15 07:50:06	Average time for nms (cpu) :	15.61 ms
train.py 2019-04-15 07:50:06	Average time for detect a image (cpu + gpu) :	45.12 ms
train.py 2019-04-15 07:50:06	Average time for inference (gpu) :	17.94 ms
train.py 2019-04-15 07:50:08	Saved model:	weights/yolo.ckpt-62-0.7750
train.py 2019-04-15 07:51:34	Learn rate:	0.000062	period:	63	step:	86995	train_loss:	11.3289
train.py 2019-04-15 07:53:13	Learn rate:	0.000062	period:	63	step:	87132	train_loss:	10.8195
train.py 2019-04-15 07:54:54	Learn rate:	0.000061	period:	63	step:	87269	train_loss:	11.3636
train.py 2019-04-15 07:56:31	Learn rate:	0.000061	period:	63	step:	87406	train_loss:	11.2145
train.py 2019-04-15 07:58:13	Learn rate:	0.000061	period:	63	step:	87543	train_loss:	11.5402
train.py 2019-04-15 07:59:54	Learn rate:	0.000060	period:	63	step:	87680	train_loss:	11.3394
train.py 2019-04-15 08:01:32	Learn rate:	0.000060	period:	63	step:	87817	train_loss:	11.3818
train.py 2019-04-15 08:03:10	Learn rate:	0.000060	period:	63	step:	87954	train_loss:	11.4148
train.py 2019-04-15 08:04:57	Learn rate:	0.000060	period:	63	step:	88091	train_loss:	11.3527
train.py 2019-04-15 08:06:37	Learn rate:	0.000059	period:	63	step:	88228	train_loss:	11.3449
train.py 2019-04-15 08:11:27	AP for sheep = 0.8120
train.py 2019-04-15 08:11:27	AP for horse = 0.8826
train.py 2019-04-15 08:11:27	AP for bicycle = 0.8667
train.py 2019-04-15 08:11:27	AP for aeroplane = 0.8201
train.py 2019-04-15 08:11:27	AP for cow = 0.8496
train.py 2019-04-15 08:11:27	AP for sofa = 0.7555
train.py 2019-04-15 08:11:27	AP for bus = 0.8404
train.py 2019-04-15 08:11:27	AP for dog = 0.8307
train.py 2019-04-15 08:11:27	AP for cat = 0.8622
train.py 2019-04-15 08:11:27	AP for person = 0.8430
train.py 2019-04-15 08:11:27	AP for train = 0.8491
train.py 2019-04-15 08:11:27	AP for diningtable = 0.7257
train.py 2019-04-15 08:11:27	AP for bottle = 0.6174
train.py 2019-04-15 08:11:27	AP for car = 0.8869
train.py 2019-04-15 08:11:27	AP for pottedplant = 0.4970
train.py 2019-04-15 08:11:27	AP for tvmonitor = 0.7642
train.py 2019-04-15 08:11:27	AP for chair = 0.5958
train.py 2019-04-15 08:11:27	AP for bird = 0.7598
train.py 2019-04-15 08:11:27	AP for boat = 0.6282
train.py 2019-04-15 08:11:27	AP for motorbike = 0.8360
train.py 2019-04-15 08:11:27	mAP = 0.7761
train.py 2019-04-15 08:11:27	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 08:11:27	Average time for postprocess (cpu) :	5.92 ms
train.py 2019-04-15 08:11:27	Average time for nms (cpu) :	14.16 ms
train.py 2019-04-15 08:11:27	Average time for detect a image (cpu + gpu) :	42.69 ms
train.py 2019-04-15 08:11:27	Average time for inference (gpu) :	17.09 ms
train.py 2019-04-15 08:11:29	Saved model:	weights/yolo.ckpt-63-0.7761
train.py 2019-04-15 08:12:46	Learn rate:	0.000059	period:	64	step:	88365	train_loss:	11.8080
train.py 2019-04-15 08:14:25	Learn rate:	0.000059	period:	64	step:	88502	train_loss:	11.5535
train.py 2019-04-15 08:16:06	Learn rate:	0.000058	period:	64	step:	88639	train_loss:	11.1505
train.py 2019-04-15 08:17:47	Learn rate:	0.000058	period:	64	step:	88776	train_loss:	10.7542
train.py 2019-04-15 08:19:31	Learn rate:	0.000058	period:	64	step:	88913	train_loss:	11.5125
train.py 2019-04-15 08:21:10	Learn rate:	0.000058	period:	64	step:	89050	train_loss:	11.9604
train.py 2019-04-15 08:22:48	Learn rate:	0.000057	period:	64	step:	89187	train_loss:	11.2109
train.py 2019-04-15 08:24:28	Learn rate:	0.000057	period:	64	step:	89324	train_loss:	12.0805
train.py 2019-04-15 08:26:06	Learn rate:	0.000057	period:	64	step:	89461	train_loss:	11.3031
train.py 2019-04-15 08:27:45	Learn rate:	0.000056	period:	64	step:	89598	train_loss:	11.9286
train.py 2019-04-15 08:33:08	AP for sheep = 0.8047
train.py 2019-04-15 08:33:08	AP for horse = 0.8712
train.py 2019-04-15 08:33:08	AP for bicycle = 0.8763
train.py 2019-04-15 08:33:08	AP for aeroplane = 0.8568
train.py 2019-04-15 08:33:08	AP for cow = 0.8431
train.py 2019-04-15 08:33:08	AP for sofa = 0.7475
train.py 2019-04-15 08:33:08	AP for bus = 0.8476
train.py 2019-04-15 08:33:08	AP for dog = 0.8299
train.py 2019-04-15 08:33:08	AP for cat = 0.8823
train.py 2019-04-15 08:33:08	AP for person = 0.8408
train.py 2019-04-15 08:33:08	AP for train = 0.8287
train.py 2019-04-15 08:33:08	AP for diningtable = 0.7423
train.py 2019-04-15 08:33:08	AP for bottle = 0.6248
train.py 2019-04-15 08:33:08	AP for car = 0.8790
train.py 2019-04-15 08:33:08	AP for pottedplant = 0.4965
train.py 2019-04-15 08:33:08	AP for tvmonitor = 0.7617
train.py 2019-04-15 08:33:08	AP for chair = 0.5912
train.py 2019-04-15 08:33:08	AP for bird = 0.7580
train.py 2019-04-15 08:33:08	AP for boat = 0.6041
train.py 2019-04-15 08:33:08	AP for motorbike = 0.8425
train.py 2019-04-15 08:33:08	mAP = 0.7765
train.py 2019-04-15 08:33:08	Average time for preprocess (cpu) :	5.38 ms
train.py 2019-04-15 08:33:08	Average time for postprocess (cpu) :	5.93 ms
train.py 2019-04-15 08:33:08	Average time for nms (cpu) :	17.21 ms
train.py 2019-04-15 08:33:08	Average time for detect a image (cpu + gpu) :	47.07 ms
train.py 2019-04-15 08:33:08	Average time for inference (gpu) :	18.28 ms
train.py 2019-04-15 08:33:10	Saved model:	weights/yolo.ckpt-64-0.7765
train.py 2019-04-15 08:34:28	Learn rate:	0.000056	period:	65	step:	89735	train_loss:	11.5283
train.py 2019-04-15 08:36:09	Learn rate:	0.000056	period:	65	step:	89872	train_loss:	11.9290
train.py 2019-04-15 08:37:47	Learn rate:	0.000056	period:	65	step:	90009	train_loss:	11.1539
train.py 2019-04-15 08:39:22	Learn rate:	0.000055	period:	65	step:	90146	train_loss:	11.0932
train.py 2019-04-15 08:41:01	Learn rate:	0.000055	period:	65	step:	90283	train_loss:	11.0254
train.py 2019-04-15 08:42:41	Learn rate:	0.000055	period:	65	step:	90420	train_loss:	11.9834
train.py 2019-04-15 08:44:20	Learn rate:	0.000054	period:	65	step:	90557	train_loss:	11.5605
train.py 2019-04-15 08:46:06	Learn rate:	0.000054	period:	65	step:	90694	train_loss:	11.1992
train.py 2019-04-15 08:47:47	Learn rate:	0.000054	period:	65	step:	90831	train_loss:	11.7439
train.py 2019-04-15 08:49:31	Learn rate:	0.000054	period:	65	step:	90968	train_loss:	11.2723
train.py 2019-04-15 08:54:55	AP for sheep = 0.8237
train.py 2019-04-15 08:54:55	AP for horse = 0.8892
train.py 2019-04-15 08:54:55	AP for bicycle = 0.8721
train.py 2019-04-15 08:54:55	AP for aeroplane = 0.8386
train.py 2019-04-15 08:54:55	AP for cow = 0.8404
train.py 2019-04-15 08:54:55	AP for sofa = 0.7533
train.py 2019-04-15 08:54:55	AP for bus = 0.8581
train.py 2019-04-15 08:54:55	AP for dog = 0.8330
train.py 2019-04-15 08:54:55	AP for cat = 0.8846
train.py 2019-04-15 08:54:55	AP for person = 0.8380
train.py 2019-04-15 08:54:55	AP for train = 0.8350
train.py 2019-04-15 08:54:55	AP for diningtable = 0.7652
train.py 2019-04-15 08:54:55	AP for bottle = 0.6148
train.py 2019-04-15 08:54:55	AP for car = 0.8818
train.py 2019-04-15 08:54:55	AP for pottedplant = 0.4569
train.py 2019-04-15 08:54:55	AP for tvmonitor = 0.7610
train.py 2019-04-15 08:54:55	AP for chair = 0.5854
train.py 2019-04-15 08:54:55	AP for bird = 0.7722
train.py 2019-04-15 08:54:55	AP for boat = 0.6212
train.py 2019-04-15 08:54:55	AP for motorbike = 0.8214
train.py 2019-04-15 08:54:55	mAP = 0.7773
train.py 2019-04-15 08:54:55	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-15 08:54:55	Average time for postprocess (cpu) :	6.01 ms
train.py 2019-04-15 08:54:55	Average time for nms (cpu) :	16.92 ms
train.py 2019-04-15 08:54:55	Average time for detect a image (cpu + gpu) :	46.80 ms
train.py 2019-04-15 08:54:55	Average time for inference (gpu) :	18.31 ms
train.py 2019-04-15 08:54:57	Saved model:	weights/yolo.ckpt-65-0.7773
train.py 2019-04-15 08:56:03	Learn rate:	0.000053	period:	66	step:	91105	train_loss:	11.7309
train.py 2019-04-15 08:57:43	Learn rate:	0.000053	period:	66	step:	91242	train_loss:	10.8903
train.py 2019-04-15 08:59:21	Learn rate:	0.000053	period:	66	step:	91379	train_loss:	11.0840
train.py 2019-04-15 09:01:05	Learn rate:	0.000052	period:	66	step:	91516	train_loss:	11.6885
train.py 2019-04-15 09:02:39	Learn rate:	0.000052	period:	66	step:	91653	train_loss:	11.4394
train.py 2019-04-15 09:04:21	Learn rate:	0.000052	period:	66	step:	91790	train_loss:	10.7088
train.py 2019-04-15 09:05:59	Learn rate:	0.000052	period:	66	step:	91927	train_loss:	10.9127
train.py 2019-04-15 09:07:42	Learn rate:	0.000051	period:	66	step:	92064	train_loss:	11.5043
train.py 2019-04-15 09:09:23	Learn rate:	0.000051	period:	66	step:	92201	train_loss:	11.2519
train.py 2019-04-15 09:11:00	Learn rate:	0.000051	period:	66	step:	92338	train_loss:	11.6267
train.py 2019-04-15 09:16:19	AP for sheep = 0.8159
train.py 2019-04-15 09:16:19	AP for horse = 0.8743
train.py 2019-04-15 09:16:19	AP for bicycle = 0.8886
train.py 2019-04-15 09:16:19	AP for aeroplane = 0.8678
train.py 2019-04-15 09:16:19	AP for cow = 0.8419
train.py 2019-04-15 09:16:19	AP for sofa = 0.7372
train.py 2019-04-15 09:16:19	AP for bus = 0.8576
train.py 2019-04-15 09:16:19	AP for dog = 0.8518
train.py 2019-04-15 09:16:19	AP for cat = 0.8800
train.py 2019-04-15 09:16:19	AP for person = 0.8467
train.py 2019-04-15 09:16:19	AP for train = 0.8515
train.py 2019-04-15 09:16:19	AP for diningtable = 0.7520
train.py 2019-04-15 09:16:19	AP for bottle = 0.6412
train.py 2019-04-15 09:16:19	AP for car = 0.8863
train.py 2019-04-15 09:16:19	AP for pottedplant = 0.4832
train.py 2019-04-15 09:16:19	AP for tvmonitor = 0.7701
train.py 2019-04-15 09:16:19	AP for chair = 0.5960
train.py 2019-04-15 09:16:19	AP for bird = 0.7715
train.py 2019-04-15 09:16:19	AP for boat = 0.6483
train.py 2019-04-15 09:16:19	AP for motorbike = 0.8564
train.py 2019-04-15 09:16:19	mAP = 0.7859
train.py 2019-04-15 09:16:19	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 09:16:19	Average time for postprocess (cpu) :	6.03 ms
train.py 2019-04-15 09:16:19	Average time for nms (cpu) :	14.63 ms
train.py 2019-04-15 09:16:19	Average time for detect a image (cpu + gpu) :	44.31 ms
train.py 2019-04-15 09:16:19	Average time for inference (gpu) :	18.11 ms
train.py 2019-04-15 09:16:22	Saved model:	weights/yolo.ckpt-66-0.7859
train.py 2019-04-15 09:17:22	Learn rate:	0.000051	period:	67	step:	92475	train_loss:	11.7334
train.py 2019-04-15 09:19:06	Learn rate:	0.000050	period:	67	step:	92612	train_loss:	10.8854
train.py 2019-04-15 09:20:48	Learn rate:	0.000050	period:	67	step:	92749	train_loss:	11.1003
train.py 2019-04-15 09:22:31	Learn rate:	0.000050	period:	67	step:	92886	train_loss:	11.2718
train.py 2019-04-15 09:24:10	Learn rate:	0.000050	period:	67	step:	93023	train_loss:	11.5132
train.py 2019-04-15 09:25:49	Learn rate:	0.000049	period:	67	step:	93160	train_loss:	11.1235
train.py 2019-04-15 09:27:31	Learn rate:	0.000049	period:	67	step:	93297	train_loss:	11.4550
train.py 2019-04-15 09:29:11	Learn rate:	0.000049	period:	67	step:	93434	train_loss:	11.3610
train.py 2019-04-15 09:30:51	Learn rate:	0.000048	period:	67	step:	93571	train_loss:	11.5257
train.py 2019-04-15 09:32:34	Learn rate:	0.000048	period:	67	step:	93708	train_loss:	11.0907
train.py 2019-04-15 09:38:20	AP for sheep = 0.8196
train.py 2019-04-15 09:38:20	AP for horse = 0.8812
train.py 2019-04-15 09:38:20	AP for bicycle = 0.8476
train.py 2019-04-15 09:38:20	AP for aeroplane = 0.8212
train.py 2019-04-15 09:38:20	AP for cow = 0.8284
train.py 2019-04-15 09:38:20	AP for sofa = 0.7137
train.py 2019-04-15 09:38:20	AP for bus = 0.8460
train.py 2019-04-15 09:38:20	AP for dog = 0.8242
train.py 2019-04-15 09:38:20	AP for cat = 0.8592
train.py 2019-04-15 09:38:20	AP for person = 0.8383
train.py 2019-04-15 09:38:20	AP for train = 0.8509
train.py 2019-04-15 09:38:20	AP for diningtable = 0.7276
train.py 2019-04-15 09:38:20	AP for bottle = 0.6326
train.py 2019-04-15 09:38:20	AP for car = 0.8697
train.py 2019-04-15 09:38:20	AP for pottedplant = 0.4513
train.py 2019-04-15 09:38:20	AP for tvmonitor = 0.7579
train.py 2019-04-15 09:38:20	AP for chair = 0.5673
train.py 2019-04-15 09:38:20	AP for bird = 0.7693
train.py 2019-04-15 09:38:20	AP for boat = 0.6075
train.py 2019-04-15 09:38:20	AP for motorbike = 0.8278
train.py 2019-04-15 09:38:20	mAP = 0.7671
train.py 2019-04-15 09:38:20	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 09:38:20	Average time for postprocess (cpu) :	6.14 ms
train.py 2019-04-15 09:38:20	Average time for nms (cpu) :	17.93 ms
train.py 2019-04-15 09:38:20	Average time for detect a image (cpu + gpu) :	47.78 ms
train.py 2019-04-15 09:38:20	Average time for inference (gpu) :	18.16 ms
train.py 2019-04-15 09:38:23	Saved model:	weights/yolo.ckpt-67-0.7671
train.py 2019-04-15 09:39:18	Learn rate:	0.000048	period:	68	step:	93845	train_loss:	11.1881
train.py 2019-04-15 09:40:56	Learn rate:	0.000048	period:	68	step:	93982	train_loss:	11.0377
train.py 2019-04-15 09:42:38	Learn rate:	0.000047	period:	68	step:	94119	train_loss:	11.4180
train.py 2019-04-15 09:44:19	Learn rate:	0.000047	period:	68	step:	94256	train_loss:	11.2355
train.py 2019-04-15 09:46:03	Learn rate:	0.000047	period:	68	step:	94393	train_loss:	10.7291
train.py 2019-04-15 09:47:43	Learn rate:	0.000047	period:	68	step:	94530	train_loss:	11.5544
train.py 2019-04-15 09:49:30	Learn rate:	0.000046	period:	68	step:	94667	train_loss:	11.0266
train.py 2019-04-15 09:51:11	Learn rate:	0.000046	period:	68	step:	94804	train_loss:	10.9722
train.py 2019-04-15 09:52:54	Learn rate:	0.000046	period:	68	step:	94941	train_loss:	11.2137
train.py 2019-04-15 09:54:35	Learn rate:	0.000046	period:	68	step:	95078	train_loss:	11.0915
train.py 2019-04-15 10:00:13	AP for sheep = 0.8040
train.py 2019-04-15 10:00:13	AP for horse = 0.8847
train.py 2019-04-15 10:00:13	AP for bicycle = 0.8727
train.py 2019-04-15 10:00:13	AP for aeroplane = 0.8607
train.py 2019-04-15 10:00:13	AP for cow = 0.8612
train.py 2019-04-15 10:00:13	AP for sofa = 0.7310
train.py 2019-04-15 10:00:13	AP for bus = 0.8572
train.py 2019-04-15 10:00:13	AP for dog = 0.8155
train.py 2019-04-15 10:00:13	AP for cat = 0.8685
train.py 2019-04-15 10:00:13	AP for person = 0.8404
train.py 2019-04-15 10:00:13	AP for train = 0.8574
train.py 2019-04-15 10:00:13	AP for diningtable = 0.7465
train.py 2019-04-15 10:00:13	AP for bottle = 0.6306
train.py 2019-04-15 10:00:13	AP for car = 0.8855
train.py 2019-04-15 10:00:13	AP for pottedplant = 0.4926
train.py 2019-04-15 10:00:13	AP for tvmonitor = 0.7828
train.py 2019-04-15 10:00:13	AP for chair = 0.5767
train.py 2019-04-15 10:00:13	AP for bird = 0.7637
train.py 2019-04-15 10:00:13	AP for boat = 0.6369
train.py 2019-04-15 10:00:13	AP for motorbike = 0.8398
train.py 2019-04-15 10:00:13	mAP = 0.7804
train.py 2019-04-15 10:00:13	Average time for preprocess (cpu) :	5.28 ms
train.py 2019-04-15 10:00:13	Average time for postprocess (cpu) :	6.05 ms
train.py 2019-04-15 10:00:13	Average time for nms (cpu) :	15.57 ms
train.py 2019-04-15 10:00:13	Average time for detect a image (cpu + gpu) :	45.29 ms
train.py 2019-04-15 10:00:13	Average time for inference (gpu) :	18.18 ms
train.py 2019-04-15 10:00:16	Saved model:	weights/yolo.ckpt-68-0.7804
train.py 2019-04-15 10:01:05	Learn rate:	0.000045	period:	69	step:	95215	train_loss:	10.7893
train.py 2019-04-15 10:02:45	Learn rate:	0.000045	period:	69	step:	95352	train_loss:	11.3239
train.py 2019-04-15 10:04:25	Learn rate:	0.000045	period:	69	step:	95489	train_loss:	11.3485
train.py 2019-04-15 10:06:06	Learn rate:	0.000044	period:	69	step:	95626	train_loss:	11.6322
train.py 2019-04-15 10:07:50	Learn rate:	0.000044	period:	69	step:	95763	train_loss:	11.4531
train.py 2019-04-15 10:09:33	Learn rate:	0.000044	period:	69	step:	95900	train_loss:	10.9408
train.py 2019-04-15 10:11:22	Learn rate:	0.000044	period:	69	step:	96037	train_loss:	11.1331
train.py 2019-04-15 10:13:00	Learn rate:	0.000043	period:	69	step:	96174	train_loss:	11.3834
train.py 2019-04-15 10:14:37	Learn rate:	0.000043	period:	69	step:	96311	train_loss:	11.6720
train.py 2019-04-15 10:16:22	Learn rate:	0.000043	period:	69	step:	96448	train_loss:	10.3130
train.py 2019-04-15 10:22:01	AP for sheep = 0.8126
train.py 2019-04-15 10:22:01	AP for horse = 0.8774
train.py 2019-04-15 10:22:01	AP for bicycle = 0.8747
train.py 2019-04-15 10:22:01	AP for aeroplane = 0.8282
train.py 2019-04-15 10:22:01	AP for cow = 0.8458
train.py 2019-04-15 10:22:01	AP for sofa = 0.7521
train.py 2019-04-15 10:22:01	AP for bus = 0.8454
train.py 2019-04-15 10:22:01	AP for dog = 0.8168
train.py 2019-04-15 10:22:01	AP for cat = 0.8580
train.py 2019-04-15 10:22:01	AP for person = 0.8399
train.py 2019-04-15 10:22:01	AP for train = 0.8284
train.py 2019-04-15 10:22:01	AP for diningtable = 0.7375
train.py 2019-04-15 10:22:01	AP for bottle = 0.5847
train.py 2019-04-15 10:22:01	AP for car = 0.8844
train.py 2019-04-15 10:22:01	AP for pottedplant = 0.4718
train.py 2019-04-15 10:22:01	AP for tvmonitor = 0.7837
train.py 2019-04-15 10:22:01	AP for chair = 0.5775
train.py 2019-04-15 10:22:01	AP for bird = 0.7538
train.py 2019-04-15 10:22:01	AP for boat = 0.5978
train.py 2019-04-15 10:22:01	AP for motorbike = 0.8363
train.py 2019-04-15 10:22:01	mAP = 0.7703
train.py 2019-04-15 10:22:01	Average time for preprocess (cpu) :	5.28 ms
train.py 2019-04-15 10:22:01	Average time for postprocess (cpu) :	5.99 ms
train.py 2019-04-15 10:22:01	Average time for nms (cpu) :	15.60 ms
train.py 2019-04-15 10:22:01	Average time for detect a image (cpu + gpu) :	45.21 ms
train.py 2019-04-15 10:22:01	Average time for inference (gpu) :	18.13 ms
train.py 2019-04-15 10:22:04	Saved model:	weights/yolo.ckpt-69-0.7703
train.py 2019-04-15 10:22:47	Learn rate:	0.000043	period:	70	step:	96585	train_loss:	10.9712
train.py 2019-04-15 10:24:33	Learn rate:	0.000042	period:	70	step:	96722	train_loss:	11.0938
train.py 2019-04-15 10:26:18	Learn rate:	0.000042	period:	70	step:	96859	train_loss:	10.8935
train.py 2019-04-15 10:27:54	Learn rate:	0.000042	period:	70	step:	96996	train_loss:	11.4814
train.py 2019-04-15 10:29:34	Learn rate:	0.000042	period:	70	step:	97133	train_loss:	11.1354
train.py 2019-04-15 10:31:15	Learn rate:	0.000041	period:	70	step:	97270	train_loss:	11.2344
train.py 2019-04-15 10:32:55	Learn rate:	0.000041	period:	70	step:	97407	train_loss:	11.0280
train.py 2019-04-15 10:34:32	Learn rate:	0.000041	period:	70	step:	97544	train_loss:	11.0004
train.py 2019-04-15 10:36:11	Learn rate:	0.000041	period:	70	step:	97681	train_loss:	11.0048
train.py 2019-04-15 10:37:53	Learn rate:	0.000040	period:	70	step:	97818	train_loss:	10.9831
train.py 2019-04-15 10:43:26	AP for sheep = 0.8143
train.py 2019-04-15 10:43:26	AP for horse = 0.8802
train.py 2019-04-15 10:43:26	AP for bicycle = 0.8656
train.py 2019-04-15 10:43:26	AP for aeroplane = 0.8751
train.py 2019-04-15 10:43:26	AP for cow = 0.8581
train.py 2019-04-15 10:43:26	AP for sofa = 0.7463
train.py 2019-04-15 10:43:26	AP for bus = 0.8419
train.py 2019-04-15 10:43:26	AP for dog = 0.8373
train.py 2019-04-15 10:43:26	AP for cat = 0.8692
train.py 2019-04-15 10:43:26	AP for person = 0.8452
train.py 2019-04-15 10:43:26	AP for train = 0.8511
train.py 2019-04-15 10:43:26	AP for diningtable = 0.7537
train.py 2019-04-15 10:43:26	AP for bottle = 0.6314
train.py 2019-04-15 10:43:26	AP for car = 0.8844
train.py 2019-04-15 10:43:26	AP for pottedplant = 0.5136
train.py 2019-04-15 10:43:26	AP for tvmonitor = 0.7702
train.py 2019-04-15 10:43:26	AP for chair = 0.5931
train.py 2019-04-15 10:43:26	AP for bird = 0.7788
train.py 2019-04-15 10:43:26	AP for boat = 0.6437
train.py 2019-04-15 10:43:26	AP for motorbike = 0.8417
train.py 2019-04-15 10:43:26	mAP = 0.7848
train.py 2019-04-15 10:43:26	Average time for preprocess (cpu) :	5.33 ms
train.py 2019-04-15 10:43:26	Average time for postprocess (cpu) :	6.15 ms
train.py 2019-04-15 10:43:26	Average time for nms (cpu) :	12.49 ms
train.py 2019-04-15 10:43:26	Average time for detect a image (cpu + gpu) :	42.52 ms
train.py 2019-04-15 10:43:26	Average time for inference (gpu) :	18.33 ms
train.py 2019-04-15 10:43:28	Saved model:	weights/yolo.ckpt-70-0.7848
train.py 2019-04-15 10:43:59	Learn rate:	0.000040	period:	71	step:	97955	train_loss:	11.2560
train.py 2019-04-15 10:45:36	Learn rate:	0.000040	period:	71	step:	98092	train_loss:	11.0605
train.py 2019-04-15 10:47:19	Learn rate:	0.000040	period:	71	step:	98229	train_loss:	11.4514
train.py 2019-04-15 10:48:55	Learn rate:	0.000039	period:	71	step:	98366	train_loss:	11.1050
train.py 2019-04-15 10:50:34	Learn rate:	0.000039	period:	71	step:	98503	train_loss:	11.5843
train.py 2019-04-15 10:52:12	Learn rate:	0.000039	period:	71	step:	98640	train_loss:	11.2725
train.py 2019-04-15 10:53:54	Learn rate:	0.000039	period:	71	step:	98777	train_loss:	10.3961
train.py 2019-04-15 10:55:41	Learn rate:	0.000038	period:	71	step:	98914	train_loss:	10.9614
train.py 2019-04-15 10:57:24	Learn rate:	0.000038	period:	71	step:	99051	train_loss:	11.1899
train.py 2019-04-15 10:59:11	Learn rate:	0.000038	period:	71	step:	99188	train_loss:	10.6277
train.py 2019-04-15 11:04:57	AP for sheep = 0.8199
train.py 2019-04-15 11:04:57	AP for horse = 0.8735
train.py 2019-04-15 11:04:57	AP for bicycle = 0.8677
train.py 2019-04-15 11:04:57	AP for aeroplane = 0.8480
train.py 2019-04-15 11:04:57	AP for cow = 0.8638
train.py 2019-04-15 11:04:57	AP for sofa = 0.7612
train.py 2019-04-15 11:04:57	AP for bus = 0.8469
train.py 2019-04-15 11:04:57	AP for dog = 0.8559
train.py 2019-04-15 11:04:57	AP for cat = 0.8604
train.py 2019-04-15 11:04:57	AP for person = 0.8436
train.py 2019-04-15 11:04:57	AP for train = 0.8576
train.py 2019-04-15 11:04:57	AP for diningtable = 0.7379
train.py 2019-04-15 11:04:57	AP for bottle = 0.6225
train.py 2019-04-15 11:04:57	AP for car = 0.8890
train.py 2019-04-15 11:04:57	AP for pottedplant = 0.5127
train.py 2019-04-15 11:04:57	AP for tvmonitor = 0.7794
train.py 2019-04-15 11:04:57	AP for chair = 0.6006
train.py 2019-04-15 11:04:57	AP for bird = 0.7890
train.py 2019-04-15 11:04:57	AP for boat = 0.6339
train.py 2019-04-15 11:04:57	AP for motorbike = 0.8496
train.py 2019-04-15 11:04:57	mAP = 0.7857
train.py 2019-04-15 11:04:57	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-15 11:04:57	Average time for postprocess (cpu) :	6.00 ms
train.py 2019-04-15 11:04:57	Average time for nms (cpu) :	13.72 ms
train.py 2019-04-15 11:04:57	Average time for detect a image (cpu + gpu) :	43.31 ms
train.py 2019-04-15 11:04:57	Average time for inference (gpu) :	18.07 ms
train.py 2019-04-15 11:05:01	Saved model:	weights/yolo.ckpt-71-0.7857
train.py 2019-04-15 11:05:30	Learn rate:	0.000038	period:	72	step:	99325	train_loss:	10.8249
train.py 2019-04-15 11:07:09	Learn rate:	0.000037	period:	72	step:	99462	train_loss:	11.2433
train.py 2019-04-15 11:08:47	Learn rate:	0.000037	period:	72	step:	99599	train_loss:	10.8984
train.py 2019-04-15 11:10:31	Learn rate:	0.000037	period:	72	step:	99736	train_loss:	10.9309
train.py 2019-04-15 11:12:12	Learn rate:	0.000037	period:	72	step:	99873	train_loss:	11.0830
train.py 2019-04-15 11:13:48	Learn rate:	0.000036	period:	72	step:	100010	train_loss:	11.0070
train.py 2019-04-15 11:15:25	Learn rate:	0.000036	period:	72	step:	100147	train_loss:	10.6558
train.py 2019-04-15 11:17:03	Learn rate:	0.000036	period:	72	step:	100284	train_loss:	11.2501
train.py 2019-04-15 11:18:47	Learn rate:	0.000036	period:	72	step:	100421	train_loss:	11.0728
train.py 2019-04-15 11:20:31	Learn rate:	0.000036	period:	72	step:	100558	train_loss:	11.3069
train.py 2019-04-15 11:26:16	AP for sheep = 0.8117
train.py 2019-04-15 11:26:16	AP for horse = 0.8828
train.py 2019-04-15 11:26:16	AP for bicycle = 0.8843
train.py 2019-04-15 11:26:16	AP for aeroplane = 0.8574
train.py 2019-04-15 11:26:16	AP for cow = 0.8443
train.py 2019-04-15 11:26:16	AP for sofa = 0.7578
train.py 2019-04-15 11:26:16	AP for bus = 0.8540
train.py 2019-04-15 11:26:16	AP for dog = 0.8452
train.py 2019-04-15 11:26:16	AP for cat = 0.8698
train.py 2019-04-15 11:26:16	AP for person = 0.8482
train.py 2019-04-15 11:26:16	AP for train = 0.8532
train.py 2019-04-15 11:26:16	AP for diningtable = 0.7431
train.py 2019-04-15 11:26:16	AP for bottle = 0.6375
train.py 2019-04-15 11:26:16	AP for car = 0.8867
train.py 2019-04-15 11:26:16	AP for pottedplant = 0.5224
train.py 2019-04-15 11:26:16	AP for tvmonitor = 0.7749
train.py 2019-04-15 11:26:16	AP for chair = 0.5955
train.py 2019-04-15 11:26:16	AP for bird = 0.7882
train.py 2019-04-15 11:26:16	AP for boat = 0.6426
train.py 2019-04-15 11:26:16	AP for motorbike = 0.8551
train.py 2019-04-15 11:26:16	mAP = 0.7877
train.py 2019-04-15 11:26:16	Average time for preprocess (cpu) :	5.27 ms
train.py 2019-04-15 11:26:16	Average time for postprocess (cpu) :	6.13 ms
train.py 2019-04-15 11:26:16	Average time for nms (cpu) :	13.16 ms
train.py 2019-04-15 11:26:16	Average time for detect a image (cpu + gpu) :	42.87 ms
train.py 2019-04-15 11:26:16	Average time for inference (gpu) :	18.10 ms
train.py 2019-04-15 11:26:18	Saved model:	weights/yolo.ckpt-72-0.7877
train.py 2019-04-15 11:26:40	Learn rate:	0.000035	period:	73	step:	100695	train_loss:	10.7224
train.py 2019-04-15 11:28:23	Learn rate:	0.000035	period:	73	step:	100832	train_loss:	10.5536
train.py 2019-04-15 11:30:01	Learn rate:	0.000035	period:	73	step:	100969	train_loss:	11.9151
train.py 2019-04-15 11:31:43	Learn rate:	0.000035	period:	73	step:	101106	train_loss:	11.2279
train.py 2019-04-15 11:33:25	Learn rate:	0.000034	period:	73	step:	101243	train_loss:	10.4342
train.py 2019-04-15 11:34:59	Learn rate:	0.000034	period:	73	step:	101380	train_loss:	11.1801
train.py 2019-04-15 11:36:46	Learn rate:	0.000034	period:	73	step:	101517	train_loss:	11.0289
train.py 2019-04-15 11:38:27	Learn rate:	0.000034	period:	73	step:	101654	train_loss:	11.4355
train.py 2019-04-15 11:40:08	Learn rate:	0.000033	period:	73	step:	101791	train_loss:	10.6759
train.py 2019-04-15 11:41:47	Learn rate:	0.000033	period:	73	step:	101928	train_loss:	11.1059
train.py 2019-04-15 11:47:41	AP for sheep = 0.8083
train.py 2019-04-15 11:47:41	AP for horse = 0.8837
train.py 2019-04-15 11:47:41	AP for bicycle = 0.8819
train.py 2019-04-15 11:47:41	AP for aeroplane = 0.8470
train.py 2019-04-15 11:47:41	AP for cow = 0.8249
train.py 2019-04-15 11:47:41	AP for sofa = 0.7346
train.py 2019-04-15 11:47:41	AP for bus = 0.8521
train.py 2019-04-15 11:47:41	AP for dog = 0.8285
train.py 2019-04-15 11:47:41	AP for cat = 0.8744
train.py 2019-04-15 11:47:41	AP for person = 0.8480
train.py 2019-04-15 11:47:41	AP for train = 0.8523
train.py 2019-04-15 11:47:41	AP for diningtable = 0.7411
train.py 2019-04-15 11:47:41	AP for bottle = 0.6359
train.py 2019-04-15 11:47:41	AP for car = 0.8849
train.py 2019-04-15 11:47:41	AP for pottedplant = 0.5022
train.py 2019-04-15 11:47:41	AP for tvmonitor = 0.7741
train.py 2019-04-15 11:47:41	AP for chair = 0.5932
train.py 2019-04-15 11:47:41	AP for bird = 0.7828
train.py 2019-04-15 11:47:41	AP for boat = 0.6442
train.py 2019-04-15 11:47:41	AP for motorbike = 0.8655
train.py 2019-04-15 11:47:41	mAP = 0.7830
train.py 2019-04-15 11:47:41	Average time for preprocess (cpu) :	5.45 ms
train.py 2019-04-15 11:47:41	Average time for postprocess (cpu) :	6.08 ms
train.py 2019-04-15 11:47:41	Average time for nms (cpu) :	13.22 ms
train.py 2019-04-15 11:47:41	Average time for detect a image (cpu + gpu) :	43.21 ms
train.py 2019-04-15 11:47:41	Average time for inference (gpu) :	18.25 ms
train.py 2019-04-15 11:47:44	Saved model:	weights/yolo.ckpt-73-0.7830
train.py 2019-04-15 11:47:58	Learn rate:	0.000033	period:	74	step:	102065	train_loss:	10.7565
train.py 2019-04-15 11:49:36	Learn rate:	0.000033	period:	74	step:	102202	train_loss:	10.9169
train.py 2019-04-15 11:51:20	Learn rate:	0.000032	period:	74	step:	102339	train_loss:	10.5608
train.py 2019-04-15 11:53:00	Learn rate:	0.000032	period:	74	step:	102476	train_loss:	11.0749
train.py 2019-04-15 11:54:37	Learn rate:	0.000032	period:	74	step:	102613	train_loss:	10.9361
train.py 2019-04-15 11:56:19	Learn rate:	0.000032	period:	74	step:	102750	train_loss:	10.9559
train.py 2019-04-15 11:57:58	Learn rate:	0.000032	period:	74	step:	102887	train_loss:	11.4649
train.py 2019-04-15 11:59:42	Learn rate:	0.000031	period:	74	step:	103024	train_loss:	11.0105
train.py 2019-04-15 12:01:24	Learn rate:	0.000031	period:	74	step:	103161	train_loss:	11.2788
train.py 2019-04-15 12:03:04	Learn rate:	0.000031	period:	74	step:	103298	train_loss:	10.8491
train.py 2019-04-15 12:08:51	AP for sheep = 0.8080
train.py 2019-04-15 12:08:51	AP for horse = 0.8960
train.py 2019-04-15 12:08:51	AP for bicycle = 0.8817
train.py 2019-04-15 12:08:51	AP for aeroplane = 0.8693
train.py 2019-04-15 12:08:51	AP for cow = 0.8352
train.py 2019-04-15 12:08:51	AP for sofa = 0.7834
train.py 2019-04-15 12:08:51	AP for bus = 0.8626
train.py 2019-04-15 12:08:51	AP for dog = 0.8479
train.py 2019-04-15 12:08:51	AP for cat = 0.8741
train.py 2019-04-15 12:08:51	AP for person = 0.8481
train.py 2019-04-15 12:08:51	AP for train = 0.8365
train.py 2019-04-15 12:08:51	AP for diningtable = 0.7367
train.py 2019-04-15 12:08:51	AP for bottle = 0.6352
train.py 2019-04-15 12:08:51	AP for car = 0.8876
train.py 2019-04-15 12:08:51	AP for pottedplant = 0.5280
train.py 2019-04-15 12:08:51	AP for tvmonitor = 0.7897
train.py 2019-04-15 12:08:51	AP for chair = 0.6050
train.py 2019-04-15 12:08:51	AP for bird = 0.7854
train.py 2019-04-15 12:08:51	AP for boat = 0.6367
train.py 2019-04-15 12:08:51	AP for motorbike = 0.8649
train.py 2019-04-15 12:08:51	mAP = 0.7906
train.py 2019-04-15 12:08:51	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 12:08:51	Average time for postprocess (cpu) :	6.01 ms
train.py 2019-04-15 12:08:51	Average time for nms (cpu) :	12.09 ms
train.py 2019-04-15 12:08:51	Average time for detect a image (cpu + gpu) :	41.62 ms
train.py 2019-04-15 12:08:51	Average time for inference (gpu) :	18.05 ms
train.py 2019-04-15 12:08:53	Saved model:	weights/yolo.ckpt-74-0.7906
train.py 2019-04-15 12:09:02	Learn rate:	0.000031	period:	75	step:	103435	train_loss:	10.9384
train.py 2019-04-15 12:10:40	Learn rate:	0.000030	period:	75	step:	103572	train_loss:	10.8951
train.py 2019-04-15 12:12:22	Learn rate:	0.000030	period:	75	step:	103709	train_loss:	10.7696
train.py 2019-04-15 12:14:07	Learn rate:	0.000030	period:	75	step:	103846	train_loss:	10.5966
train.py 2019-04-15 12:15:46	Learn rate:	0.000030	period:	75	step:	103983	train_loss:	11.2970
train.py 2019-04-15 12:17:26	Learn rate:	0.000030	period:	75	step:	104120	train_loss:	10.6787
train.py 2019-04-15 12:19:08	Learn rate:	0.000029	period:	75	step:	104257	train_loss:	11.1100
train.py 2019-04-15 12:20:48	Learn rate:	0.000029	period:	75	step:	104394	train_loss:	11.0196
train.py 2019-04-15 12:22:23	Learn rate:	0.000029	period:	75	step:	104531	train_loss:	11.3037
train.py 2019-04-15 12:24:06	Learn rate:	0.000029	period:	75	step:	104668	train_loss:	11.1492
train.py 2019-04-15 12:25:50	Learn rate:	0.000028	period:	75	step:	104805	train_loss:	10.4678
train.py 2019-04-15 12:30:10	AP for sheep = 0.8170
train.py 2019-04-15 12:30:10	AP for horse = 0.8809
train.py 2019-04-15 12:30:10	AP for bicycle = 0.8856
train.py 2019-04-15 12:30:10	AP for aeroplane = 0.8586
train.py 2019-04-15 12:30:10	AP for cow = 0.8606
train.py 2019-04-15 12:30:10	AP for sofa = 0.7631
train.py 2019-04-15 12:30:10	AP for bus = 0.8613
train.py 2019-04-15 12:30:10	AP for dog = 0.8445
train.py 2019-04-15 12:30:10	AP for cat = 0.8780
train.py 2019-04-15 12:30:10	AP for person = 0.8448
train.py 2019-04-15 12:30:10	AP for train = 0.8504
train.py 2019-04-15 12:30:10	AP for diningtable = 0.7586
train.py 2019-04-15 12:30:10	AP for bottle = 0.6300
train.py 2019-04-15 12:30:10	AP for car = 0.8835
train.py 2019-04-15 12:30:10	AP for pottedplant = 0.5351
train.py 2019-04-15 12:30:10	AP for tvmonitor = 0.7673
train.py 2019-04-15 12:30:10	AP for chair = 0.5970
train.py 2019-04-15 12:30:10	AP for bird = 0.7841
train.py 2019-04-15 12:30:10	AP for boat = 0.6462
train.py 2019-04-15 12:30:10	AP for motorbike = 0.8585
train.py 2019-04-15 12:30:10	mAP = 0.7903
train.py 2019-04-15 12:30:10	Average time for preprocess (cpu) :	5.24 ms
train.py 2019-04-15 12:30:10	Average time for postprocess (cpu) :	5.96 ms
train.py 2019-04-15 12:30:10	Average time for nms (cpu) :	12.55 ms
train.py 2019-04-15 12:30:10	Average time for detect a image (cpu + gpu) :	41.99 ms
train.py 2019-04-15 12:30:10	Average time for inference (gpu) :	18.03 ms
train.py 2019-04-15 12:30:13	Saved model:	weights/yolo.ckpt-75-0.7903
train.py 2019-04-15 12:31:53	Learn rate:	0.000028	period:	76	step:	104942	train_loss:	10.8983
train.py 2019-04-15 12:33:35	Learn rate:	0.000028	period:	76	step:	105079	train_loss:	10.4326
train.py 2019-04-15 12:35:19	Learn rate:	0.000028	period:	76	step:	105216	train_loss:	11.0742
train.py 2019-04-15 12:37:05	Learn rate:	0.000028	period:	76	step:	105353	train_loss:	10.9750
train.py 2019-04-15 12:38:46	Learn rate:	0.000027	period:	76	step:	105490	train_loss:	10.7640
train.py 2019-04-15 12:40:34	Learn rate:	0.000027	period:	76	step:	105627	train_loss:	10.8553
train.py 2019-04-15 12:42:16	Learn rate:	0.000027	period:	76	step:	105764	train_loss:	10.5316
train.py 2019-04-15 12:43:57	Learn rate:	0.000027	period:	76	step:	105901	train_loss:	10.7504
train.py 2019-04-15 12:45:40	Learn rate:	0.000027	period:	76	step:	106038	train_loss:	10.6571
train.py 2019-04-15 12:47:20	Learn rate:	0.000026	period:	76	step:	106175	train_loss:	10.9306
train.py 2019-04-15 12:52:08	AP for sheep = 0.8146
train.py 2019-04-15 12:52:08	AP for horse = 0.8863
train.py 2019-04-15 12:52:08	AP for bicycle = 0.8740
train.py 2019-04-15 12:52:08	AP for aeroplane = 0.8486
train.py 2019-04-15 12:52:08	AP for cow = 0.8550
train.py 2019-04-15 12:52:08	AP for sofa = 0.7703
train.py 2019-04-15 12:52:08	AP for bus = 0.8598
train.py 2019-04-15 12:52:08	AP for dog = 0.8267
train.py 2019-04-15 12:52:08	AP for cat = 0.8752
train.py 2019-04-15 12:52:08	AP for person = 0.8440
train.py 2019-04-15 12:52:08	AP for train = 0.8512
train.py 2019-04-15 12:52:08	AP for diningtable = 0.7473
train.py 2019-04-15 12:52:08	AP for bottle = 0.6363
train.py 2019-04-15 12:52:08	AP for car = 0.8853
train.py 2019-04-15 12:52:08	AP for pottedplant = 0.5113
train.py 2019-04-15 12:52:08	AP for tvmonitor = 0.7678
train.py 2019-04-15 12:52:08	AP for chair = 0.5972
train.py 2019-04-15 12:52:08	AP for bird = 0.7756
train.py 2019-04-15 12:52:08	AP for boat = 0.6205
train.py 2019-04-15 12:52:08	AP for motorbike = 0.8521
train.py 2019-04-15 12:52:08	mAP = 0.7850
train.py 2019-04-15 12:52:08	Average time for preprocess (cpu) :	5.38 ms
train.py 2019-04-15 12:52:08	Average time for postprocess (cpu) :	6.13 ms
train.py 2019-04-15 12:52:08	Average time for nms (cpu) :	15.14 ms
train.py 2019-04-15 12:52:08	Average time for detect a image (cpu + gpu) :	45.09 ms
train.py 2019-04-15 12:52:08	Average time for inference (gpu) :	18.20 ms
train.py 2019-04-15 12:52:11	Saved model:	weights/yolo.ckpt-76-0.7850
train.py 2019-04-15 12:53:48	Learn rate:	0.000026	period:	77	step:	106312	train_loss:	10.0501
train.py 2019-04-15 12:55:27	Learn rate:	0.000026	period:	77	step:	106449	train_loss:	10.6049
train.py 2019-04-15 12:57:09	Learn rate:	0.000026	period:	77	step:	106586	train_loss:	10.4778
train.py 2019-04-15 12:58:50	Learn rate:	0.000026	period:	77	step:	106723	train_loss:	10.5028
train.py 2019-04-15 01:00:33	Learn rate:	0.000025	period:	77	step:	106860	train_loss:	11.0479
train.py 2019-04-15 01:02:17	Learn rate:	0.000025	period:	77	step:	106997	train_loss:	10.7952
train.py 2019-04-15 01:03:59	Learn rate:	0.000025	period:	77	step:	107134	train_loss:	10.6153
train.py 2019-04-15 01:05:39	Learn rate:	0.000025	period:	77	step:	107271	train_loss:	10.4146
train.py 2019-04-15 01:07:21	Learn rate:	0.000025	period:	77	step:	107408	train_loss:	11.0054
train.py 2019-04-15 01:09:08	Learn rate:	0.000024	period:	77	step:	107545	train_loss:	10.7465
train.py 2019-04-15 01:13:44	AP for sheep = 0.8242
train.py 2019-04-15 01:13:44	AP for horse = 0.8816
train.py 2019-04-15 01:13:44	AP for bicycle = 0.8786
train.py 2019-04-15 01:13:44	AP for aeroplane = 0.8461
train.py 2019-04-15 01:13:44	AP for cow = 0.8466
train.py 2019-04-15 01:13:44	AP for sofa = 0.7545
train.py 2019-04-15 01:13:44	AP for bus = 0.8717
train.py 2019-04-15 01:13:44	AP for dog = 0.8368
train.py 2019-04-15 01:13:44	AP for cat = 0.8662
train.py 2019-04-15 01:13:44	AP for person = 0.8509
train.py 2019-04-15 01:13:44	AP for train = 0.8564
train.py 2019-04-15 01:13:44	AP for diningtable = 0.7440
train.py 2019-04-15 01:13:44	AP for bottle = 0.6497
train.py 2019-04-15 01:13:44	AP for car = 0.8832
train.py 2019-04-15 01:13:44	AP for pottedplant = 0.5076
train.py 2019-04-15 01:13:44	AP for tvmonitor = 0.7785
train.py 2019-04-15 01:13:44	AP for chair = 0.6048
train.py 2019-04-15 01:13:44	AP for bird = 0.7903
train.py 2019-04-15 01:13:44	AP for boat = 0.6320
train.py 2019-04-15 01:13:44	AP for motorbike = 0.8521
train.py 2019-04-15 01:13:44	mAP = 0.7878
train.py 2019-04-15 01:13:44	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 01:13:44	Average time for postprocess (cpu) :	6.00 ms
train.py 2019-04-15 01:13:44	Average time for nms (cpu) :	12.60 ms
train.py 2019-04-15 01:13:44	Average time for detect a image (cpu + gpu) :	42.12 ms
train.py 2019-04-15 01:13:44	Average time for inference (gpu) :	18.05 ms
train.py 2019-04-15 01:13:47	Saved model:	weights/yolo.ckpt-77-0.7878
train.py 2019-04-15 01:15:15	Learn rate:	0.000024	period:	78	step:	107682	train_loss:	10.8526
train.py 2019-04-15 01:16:54	Learn rate:	0.000024	period:	78	step:	107819	train_loss:	10.9774
train.py 2019-04-15 01:18:39	Learn rate:	0.000024	period:	78	step:	107956	train_loss:	10.5991
train.py 2019-04-15 01:20:15	Learn rate:	0.000024	period:	78	step:	108093	train_loss:	10.3715
train.py 2019-04-15 01:21:57	Learn rate:	0.000023	period:	78	step:	108230	train_loss:	10.5605
train.py 2019-04-15 01:23:39	Learn rate:	0.000023	period:	78	step:	108367	train_loss:	10.8907
train.py 2019-04-15 01:25:22	Learn rate:	0.000023	period:	78	step:	108504	train_loss:	10.6452
train.py 2019-04-15 01:27:05	Learn rate:	0.000023	period:	78	step:	108641	train_loss:	11.2291
train.py 2019-04-15 01:28:45	Learn rate:	0.000023	period:	78	step:	108778	train_loss:	11.0669
train.py 2019-04-15 01:30:26	Learn rate:	0.000022	period:	78	step:	108915	train_loss:	10.5759
train.py 2019-04-15 01:35:01	AP for sheep = 0.8061
train.py 2019-04-15 01:35:01	AP for horse = 0.8844
train.py 2019-04-15 01:35:01	AP for bicycle = 0.8761
train.py 2019-04-15 01:35:01	AP for aeroplane = 0.8614
train.py 2019-04-15 01:35:01	AP for cow = 0.8404
train.py 2019-04-15 01:35:01	AP for sofa = 0.7607
train.py 2019-04-15 01:35:01	AP for bus = 0.8529
train.py 2019-04-15 01:35:01	AP for dog = 0.8466
train.py 2019-04-15 01:35:01	AP for cat = 0.8740
train.py 2019-04-15 01:35:01	AP for person = 0.8552
train.py 2019-04-15 01:35:01	AP for train = 0.8457
train.py 2019-04-15 01:35:01	AP for diningtable = 0.7460
train.py 2019-04-15 01:35:01	AP for bottle = 0.6518
train.py 2019-04-15 01:35:01	AP for car = 0.8883
train.py 2019-04-15 01:35:01	AP for pottedplant = 0.5209
train.py 2019-04-15 01:35:01	AP for tvmonitor = 0.7804
train.py 2019-04-15 01:35:01	AP for chair = 0.5930
train.py 2019-04-15 01:35:01	AP for bird = 0.7915
train.py 2019-04-15 01:35:01	AP for boat = 0.6307
train.py 2019-04-15 01:35:01	AP for motorbike = 0.8738
train.py 2019-04-15 01:35:01	mAP = 0.7890
train.py 2019-04-15 01:35:01	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-15 01:35:01	Average time for postprocess (cpu) :	6.04 ms
train.py 2019-04-15 01:35:01	Average time for nms (cpu) :	11.44 ms
train.py 2019-04-15 01:35:01	Average time for detect a image (cpu + gpu) :	41.16 ms
train.py 2019-04-15 01:35:01	Average time for inference (gpu) :	18.16 ms
train.py 2019-04-15 01:35:04	Saved model:	weights/yolo.ckpt-78-0.7890
train.py 2019-04-15 01:36:24	Learn rate:	0.000022	period:	79	step:	109052	train_loss:	10.8593
train.py 2019-04-15 01:38:04	Learn rate:	0.000022	period:	79	step:	109189	train_loss:	10.8132
train.py 2019-04-15 01:39:38	Learn rate:	0.000022	period:	79	step:	109326	train_loss:	10.8256
train.py 2019-04-15 01:41:19	Learn rate:	0.000022	period:	79	step:	109463	train_loss:	10.8194
train.py 2019-04-15 01:42:59	Learn rate:	0.000021	period:	79	step:	109600	train_loss:	10.5852
train.py 2019-04-15 01:44:44	Learn rate:	0.000021	period:	79	step:	109737	train_loss:	10.5252
train.py 2019-04-15 01:46:21	Learn rate:	0.000021	period:	79	step:	109874	train_loss:	10.9642
train.py 2019-04-15 01:47:59	Learn rate:	0.000021	period:	79	step:	110011	train_loss:	10.9629
train.py 2019-04-15 01:49:45	Learn rate:	0.000021	period:	79	step:	110148	train_loss:	10.6881
train.py 2019-04-15 01:51:29	Learn rate:	0.000020	period:	79	step:	110285	train_loss:	10.8567
train.py 2019-04-15 01:56:17	AP for sheep = 0.8192
train.py 2019-04-15 01:56:17	AP for horse = 0.8902
train.py 2019-04-15 01:56:17	AP for bicycle = 0.8811
train.py 2019-04-15 01:56:17	AP for aeroplane = 0.8597
train.py 2019-04-15 01:56:17	AP for cow = 0.8388
train.py 2019-04-15 01:56:17	AP for sofa = 0.7660
train.py 2019-04-15 01:56:17	AP for bus = 0.8685
train.py 2019-04-15 01:56:17	AP for dog = 0.8423
train.py 2019-04-15 01:56:17	AP for cat = 0.8703
train.py 2019-04-15 01:56:17	AP for person = 0.8509
train.py 2019-04-15 01:56:17	AP for train = 0.8472
train.py 2019-04-15 01:56:17	AP for diningtable = 0.7391
train.py 2019-04-15 01:56:17	AP for bottle = 0.6363
train.py 2019-04-15 01:56:17	AP for car = 0.8911
train.py 2019-04-15 01:56:17	AP for pottedplant = 0.5149
train.py 2019-04-15 01:56:17	AP for tvmonitor = 0.7845
train.py 2019-04-15 01:56:17	AP for chair = 0.6050
train.py 2019-04-15 01:56:17	AP for bird = 0.7887
train.py 2019-04-15 01:56:17	AP for boat = 0.6394
train.py 2019-04-15 01:56:17	AP for motorbike = 0.8539
train.py 2019-04-15 01:56:17	mAP = 0.7894
train.py 2019-04-15 01:56:17	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 01:56:17	Average time for postprocess (cpu) :	6.00 ms
train.py 2019-04-15 01:56:17	Average time for nms (cpu) :	12.11 ms
train.py 2019-04-15 01:56:17	Average time for detect a image (cpu + gpu) :	41.60 ms
train.py 2019-04-15 01:56:17	Average time for inference (gpu) :	18.02 ms
train.py 2019-04-15 01:56:19	Saved model:	weights/yolo.ckpt-79-0.7894
train.py 2019-04-15 01:57:37	Learn rate:	0.000020	period:	80	step:	110422	train_loss:	10.4318
train.py 2019-04-15 01:59:13	Learn rate:	0.000020	period:	80	step:	110559	train_loss:	11.1741
train.py 2019-04-15 02:00:58	Learn rate:	0.000020	period:	80	step:	110696	train_loss:	10.7829
train.py 2019-04-15 02:02:45	Learn rate:	0.000020	period:	80	step:	110833	train_loss:	10.8439
train.py 2019-04-15 02:04:29	Learn rate:	0.000020	period:	80	step:	110970	train_loss:	10.4280
train.py 2019-04-15 02:06:10	Learn rate:	0.000019	period:	80	step:	111107	train_loss:	10.5067
train.py 2019-04-15 02:07:52	Learn rate:	0.000019	period:	80	step:	111244	train_loss:	10.7747
train.py 2019-04-15 02:09:32	Learn rate:	0.000019	period:	80	step:	111381	train_loss:	10.5188
train.py 2019-04-15 02:11:11	Learn rate:	0.000019	period:	80	step:	111518	train_loss:	10.7045
train.py 2019-04-15 02:12:48	Learn rate:	0.000019	period:	80	step:	111655	train_loss:	10.3619
train.py 2019-04-15 02:17:34	AP for sheep = 0.8155
train.py 2019-04-15 02:17:34	AP for horse = 0.8780
train.py 2019-04-15 02:17:34	AP for bicycle = 0.8784
train.py 2019-04-15 02:17:34	AP for aeroplane = 0.8739
train.py 2019-04-15 02:17:34	AP for cow = 0.8625
train.py 2019-04-15 02:17:34	AP for sofa = 0.7687
train.py 2019-04-15 02:17:34	AP for bus = 0.8510
train.py 2019-04-15 02:17:34	AP for dog = 0.8489
train.py 2019-04-15 02:17:34	AP for cat = 0.8702
train.py 2019-04-15 02:17:34	AP for person = 0.8486
train.py 2019-04-15 02:17:34	AP for train = 0.8490
train.py 2019-04-15 02:17:34	AP for diningtable = 0.7385
train.py 2019-04-15 02:17:34	AP for bottle = 0.6424
train.py 2019-04-15 02:17:34	AP for car = 0.8912
train.py 2019-04-15 02:17:34	AP for pottedplant = 0.5352
train.py 2019-04-15 02:17:34	AP for tvmonitor = 0.7968
train.py 2019-04-15 02:17:34	AP for chair = 0.6031
train.py 2019-04-15 02:17:34	AP for bird = 0.7977
train.py 2019-04-15 02:17:34	AP for boat = 0.6397
train.py 2019-04-15 02:17:34	AP for motorbike = 0.8524
train.py 2019-04-15 02:17:34	mAP = 0.7921
train.py 2019-04-15 02:17:34	Average time for preprocess (cpu) :	5.32 ms
train.py 2019-04-15 02:17:34	Average time for postprocess (cpu) :	6.05 ms
train.py 2019-04-15 02:17:34	Average time for nms (cpu) :	11.15 ms
train.py 2019-04-15 02:17:34	Average time for detect a image (cpu + gpu) :	40.88 ms
train.py 2019-04-15 02:17:34	Average time for inference (gpu) :	18.16 ms
train.py 2019-04-15 02:17:38	Saved model:	weights/yolo.ckpt-80-0.7921
train.py 2019-04-15 02:18:44	Learn rate:	0.000018	period:	81	step:	111792	train_loss:	10.6015
train.py 2019-04-15 02:20:26	Learn rate:	0.000018	period:	81	step:	111929	train_loss:	10.4576
train.py 2019-04-15 02:22:01	Learn rate:	0.000018	period:	81	step:	112066	train_loss:	10.8394
train.py 2019-04-15 02:23:48	Learn rate:	0.000018	period:	81	step:	112203	train_loss:	10.4639
train.py 2019-04-15 02:25:31	Learn rate:	0.000018	period:	81	step:	112340	train_loss:	10.6045
train.py 2019-04-15 02:27:17	Learn rate:	0.000018	period:	81	step:	112477	train_loss:	10.5978
train.py 2019-04-15 02:28:58	Learn rate:	0.000017	period:	81	step:	112614	train_loss:	10.6170
train.py 2019-04-15 02:30:40	Learn rate:	0.000017	period:	81	step:	112751	train_loss:	10.4252
train.py 2019-04-15 02:32:23	Learn rate:	0.000017	period:	81	step:	112888	train_loss:	10.7511
train.py 2019-04-15 02:34:04	Learn rate:	0.000017	period:	81	step:	113025	train_loss:	10.8279
train.py 2019-04-15 02:39:20	AP for sheep = 0.8203
train.py 2019-04-15 02:39:20	AP for horse = 0.8810
train.py 2019-04-15 02:39:20	AP for bicycle = 0.8723
train.py 2019-04-15 02:39:20	AP for aeroplane = 0.8385
train.py 2019-04-15 02:39:20	AP for cow = 0.8465
train.py 2019-04-15 02:39:20	AP for sofa = 0.7609
train.py 2019-04-15 02:39:20	AP for bus = 0.8462
train.py 2019-04-15 02:39:20	AP for dog = 0.8438
train.py 2019-04-15 02:39:20	AP for cat = 0.8722
train.py 2019-04-15 02:39:20	AP for person = 0.8471
train.py 2019-04-15 02:39:20	AP for train = 0.8582
train.py 2019-04-15 02:39:20	AP for diningtable = 0.7456
train.py 2019-04-15 02:39:20	AP for bottle = 0.6336
train.py 2019-04-15 02:39:20	AP for car = 0.8867
train.py 2019-04-15 02:39:20	AP for pottedplant = 0.5116
train.py 2019-04-15 02:39:20	AP for tvmonitor = 0.7783
train.py 2019-04-15 02:39:20	AP for chair = 0.5911
train.py 2019-04-15 02:39:20	AP for bird = 0.7807
train.py 2019-04-15 02:39:20	AP for boat = 0.6307
train.py 2019-04-15 02:39:20	AP for motorbike = 0.8391
train.py 2019-04-15 02:39:20	mAP = 0.7842
train.py 2019-04-15 02:39:20	Average time for preprocess (cpu) :	5.34 ms
train.py 2019-04-15 02:39:20	Average time for postprocess (cpu) :	6.08 ms
train.py 2019-04-15 02:39:20	Average time for nms (cpu) :	14.03 ms
train.py 2019-04-15 02:39:20	Average time for detect a image (cpu + gpu) :	43.87 ms
train.py 2019-04-15 02:39:20	Average time for inference (gpu) :	18.20 ms
train.py 2019-04-15 02:39:23	Saved model:	weights/yolo.ckpt-81-0.7842
train.py 2019-04-15 02:40:26	Learn rate:	0.000017	period:	82	step:	113162	train_loss:	10.1893
train.py 2019-04-15 02:42:10	Learn rate:	0.000017	period:	82	step:	113299	train_loss:	10.6813
train.py 2019-04-15 02:43:57	Learn rate:	0.000016	period:	82	step:	113436	train_loss:	10.6953
train.py 2019-04-15 02:45:38	Learn rate:	0.000016	period:	82	step:	113573	train_loss:	10.9641
train.py 2019-04-15 02:47:22	Learn rate:	0.000016	period:	82	step:	113710	train_loss:	10.8003
train.py 2019-04-15 02:49:07	Learn rate:	0.000016	period:	82	step:	113847	train_loss:	10.3413
train.py 2019-04-15 02:50:55	Learn rate:	0.000016	period:	82	step:	113984	train_loss:	10.7667
train.py 2019-04-15 02:52:37	Learn rate:	0.000016	period:	82	step:	114121	train_loss:	10.4084
train.py 2019-04-15 02:54:13	Learn rate:	0.000015	period:	82	step:	114258	train_loss:	10.8092
train.py 2019-04-15 02:55:56	Learn rate:	0.000015	period:	82	step:	114395	train_loss:	10.9502
train.py 2019-04-15 03:01:10	AP for sheep = 0.8260
train.py 2019-04-15 03:01:10	AP for horse = 0.8850
train.py 2019-04-15 03:01:10	AP for bicycle = 0.8724
train.py 2019-04-15 03:01:10	AP for aeroplane = 0.8407
train.py 2019-04-15 03:01:10	AP for cow = 0.8537
train.py 2019-04-15 03:01:10	AP for sofa = 0.7561
train.py 2019-04-15 03:01:10	AP for bus = 0.8595
train.py 2019-04-15 03:01:10	AP for dog = 0.8420
train.py 2019-04-15 03:01:10	AP for cat = 0.8775
train.py 2019-04-15 03:01:10	AP for person = 0.8467
train.py 2019-04-15 03:01:10	AP for train = 0.8518
train.py 2019-04-15 03:01:10	AP for diningtable = 0.7523
train.py 2019-04-15 03:01:10	AP for bottle = 0.6455
train.py 2019-04-15 03:01:10	AP for car = 0.8886
train.py 2019-04-15 03:01:10	AP for pottedplant = 0.5255
train.py 2019-04-15 03:01:10	AP for tvmonitor = 0.7834
train.py 2019-04-15 03:01:10	AP for chair = 0.5983
train.py 2019-04-15 03:01:10	AP for bird = 0.7793
train.py 2019-04-15 03:01:10	AP for boat = 0.6197
train.py 2019-04-15 03:01:10	AP for motorbike = 0.8494
train.py 2019-04-15 03:01:10	mAP = 0.7877
train.py 2019-04-15 03:01:10	Average time for preprocess (cpu) :	5.62 ms
train.py 2019-04-15 03:01:10	Average time for postprocess (cpu) :	6.29 ms
train.py 2019-04-15 03:01:10	Average time for nms (cpu) :	12.46 ms
train.py 2019-04-15 03:01:10	Average time for detect a image (cpu + gpu) :	43.01 ms
train.py 2019-04-15 03:01:10	Average time for inference (gpu) :	18.43 ms
train.py 2019-04-15 03:01:13	Saved model:	weights/yolo.ckpt-82-0.7877
train.py 2019-04-15 03:02:09	Learn rate:	0.000015	period:	83	step:	114532	train_loss:	10.6974
train.py 2019-04-15 03:03:50	Learn rate:	0.000015	period:	83	step:	114669	train_loss:	10.1091
train.py 2019-04-15 03:05:26	Learn rate:	0.000015	period:	83	step:	114806	train_loss:	10.7668
train.py 2019-04-15 03:07:08	Learn rate:	0.000015	period:	83	step:	114943	train_loss:	10.2394
train.py 2019-04-15 03:08:49	Learn rate:	0.000014	period:	83	step:	115080	train_loss:	10.8491
train.py 2019-04-15 03:10:26	Learn rate:	0.000014	period:	83	step:	115217	train_loss:	10.5945
train.py 2019-04-15 03:12:10	Learn rate:	0.000014	period:	83	step:	115354	train_loss:	10.3213
train.py 2019-04-15 03:13:53	Learn rate:	0.000014	period:	83	step:	115491	train_loss:	10.1071
train.py 2019-04-15 03:15:36	Learn rate:	0.000014	period:	83	step:	115628	train_loss:	10.2570
train.py 2019-04-15 03:17:19	Learn rate:	0.000014	period:	83	step:	115765	train_loss:	10.0638
train.py 2019-04-15 03:22:39	AP for sheep = 0.8222
train.py 2019-04-15 03:22:39	AP for horse = 0.8893
train.py 2019-04-15 03:22:39	AP for bicycle = 0.8834
train.py 2019-04-15 03:22:39	AP for aeroplane = 0.8331
train.py 2019-04-15 03:22:39	AP for cow = 0.8467
train.py 2019-04-15 03:22:39	AP for sofa = 0.7661
train.py 2019-04-15 03:22:39	AP for bus = 0.8676
train.py 2019-04-15 03:22:39	AP for dog = 0.8544
train.py 2019-04-15 03:22:39	AP for cat = 0.8756
train.py 2019-04-15 03:22:39	AP for person = 0.8455
train.py 2019-04-15 03:22:39	AP for train = 0.8615
train.py 2019-04-15 03:22:39	AP for diningtable = 0.7531
train.py 2019-04-15 03:22:39	AP for bottle = 0.6518
train.py 2019-04-15 03:22:39	AP for car = 0.8850
train.py 2019-04-15 03:22:39	AP for pottedplant = 0.5078
train.py 2019-04-15 03:22:39	AP for tvmonitor = 0.7887
train.py 2019-04-15 03:22:39	AP for chair = 0.6023
train.py 2019-04-15 03:22:39	AP for bird = 0.7869
train.py 2019-04-15 03:22:39	AP for boat = 0.6320
train.py 2019-04-15 03:22:39	AP for motorbike = 0.8523
train.py 2019-04-15 03:22:39	mAP = 0.7903
train.py 2019-04-15 03:22:39	Average time for preprocess (cpu) :	5.30 ms
train.py 2019-04-15 03:22:39	Average time for postprocess (cpu) :	6.09 ms
train.py 2019-04-15 03:22:39	Average time for nms (cpu) :	13.90 ms
train.py 2019-04-15 03:22:39	Average time for detect a image (cpu + gpu) :	43.64 ms
train.py 2019-04-15 03:22:39	Average time for inference (gpu) :	18.14 ms
train.py 2019-04-15 03:22:43	Saved model:	weights/yolo.ckpt-83-0.7903
train.py 2019-04-15 03:23:31	Learn rate:	0.000013	period:	84	step:	115902	train_loss:	9.9935
train.py 2019-04-15 03:25:10	Learn rate:	0.000013	period:	84	step:	116039	train_loss:	10.3529
train.py 2019-04-15 03:26:55	Learn rate:	0.000013	period:	84	step:	116176	train_loss:	10.6378
train.py 2019-04-15 03:28:39	Learn rate:	0.000013	period:	84	step:	116313	train_loss:	11.0342
train.py 2019-04-15 03:30:23	Learn rate:	0.000013	period:	84	step:	116450	train_loss:	10.0765
train.py 2019-04-15 03:32:02	Learn rate:	0.000013	period:	84	step:	116587	train_loss:	10.0351
train.py 2019-04-15 03:33:45	Learn rate:	0.000013	period:	84	step:	116724	train_loss:	10.5436
train.py 2019-04-15 03:35:26	Learn rate:	0.000012	period:	84	step:	116861	train_loss:	10.7792
train.py 2019-04-15 03:37:07	Learn rate:	0.000012	period:	84	step:	116998	train_loss:	10.2492
train.py 2019-04-15 03:38:42	Learn rate:	0.000012	period:	84	step:	117135	train_loss:	10.8500
train.py 2019-04-15 03:44:08	AP for sheep = 0.8163
train.py 2019-04-15 03:44:08	AP for horse = 0.8901
train.py 2019-04-15 03:44:08	AP for bicycle = 0.8862
train.py 2019-04-15 03:44:08	AP for aeroplane = 0.8383
train.py 2019-04-15 03:44:08	AP for cow = 0.8512
train.py 2019-04-15 03:44:08	AP for sofa = 0.7710
train.py 2019-04-15 03:44:08	AP for bus = 0.8634
train.py 2019-04-15 03:44:08	AP for dog = 0.8484
train.py 2019-04-15 03:44:08	AP for cat = 0.8746
train.py 2019-04-15 03:44:08	AP for person = 0.8450
train.py 2019-04-15 03:44:08	AP for train = 0.8524
train.py 2019-04-15 03:44:08	AP for diningtable = 0.7467
train.py 2019-04-15 03:44:08	AP for bottle = 0.6542
train.py 2019-04-15 03:44:08	AP for car = 0.8893
train.py 2019-04-15 03:44:08	AP for pottedplant = 0.5085
train.py 2019-04-15 03:44:08	AP for tvmonitor = 0.7846
train.py 2019-04-15 03:44:08	AP for chair = 0.6005
train.py 2019-04-15 03:44:08	AP for bird = 0.7909
train.py 2019-04-15 03:44:08	AP for boat = 0.6432
train.py 2019-04-15 03:44:08	AP for motorbike = 0.8484
train.py 2019-04-15 03:44:08	mAP = 0.7902
train.py 2019-04-15 03:44:08	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 03:44:08	Average time for postprocess (cpu) :	6.02 ms
train.py 2019-04-15 03:44:08	Average time for nms (cpu) :	12.90 ms
train.py 2019-04-15 03:44:08	Average time for detect a image (cpu + gpu) :	42.39 ms
train.py 2019-04-15 03:44:08	Average time for inference (gpu) :	17.98 ms
train.py 2019-04-15 03:44:11	Saved model:	weights/yolo.ckpt-84-0.7902
train.py 2019-04-15 03:44:54	Learn rate:	0.000012	period:	85	step:	117272	train_loss:	10.7214
train.py 2019-04-15 03:46:36	Learn rate:	0.000012	period:	85	step:	117409	train_loss:	10.5317
train.py 2019-04-15 03:48:15	Learn rate:	0.000012	period:	85	step:	117546	train_loss:	10.5430
train.py 2019-04-15 03:50:02	Learn rate:	0.000012	period:	85	step:	117683	train_loss:	10.3784
train.py 2019-04-15 03:51:44	Learn rate:	0.000011	period:	85	step:	117820	train_loss:	10.3859
train.py 2019-04-15 03:53:24	Learn rate:	0.000011	period:	85	step:	117957	train_loss:	11.1245
train.py 2019-04-15 03:55:03	Learn rate:	0.000011	period:	85	step:	118094	train_loss:	10.5709
train.py 2019-04-15 03:56:47	Learn rate:	0.000011	period:	85	step:	118231	train_loss:	10.5458
train.py 2019-04-15 03:58:30	Learn rate:	0.000011	period:	85	step:	118368	train_loss:	9.6594
train.py 2019-04-15 04:00:11	Learn rate:	0.000011	period:	85	step:	118505	train_loss:	10.7676
train.py 2019-04-15 04:05:33	AP for sheep = 0.8209
train.py 2019-04-15 04:05:33	AP for horse = 0.8868
train.py 2019-04-15 04:05:33	AP for bicycle = 0.8841
train.py 2019-04-15 04:05:33	AP for aeroplane = 0.8369
train.py 2019-04-15 04:05:33	AP for cow = 0.8446
train.py 2019-04-15 04:05:33	AP for sofa = 0.7629
train.py 2019-04-15 04:05:33	AP for bus = 0.8640
train.py 2019-04-15 04:05:33	AP for dog = 0.8463
train.py 2019-04-15 04:05:33	AP for cat = 0.8735
train.py 2019-04-15 04:05:33	AP for person = 0.8456
train.py 2019-04-15 04:05:33	AP for train = 0.8474
train.py 2019-04-15 04:05:33	AP for diningtable = 0.7563
train.py 2019-04-15 04:05:33	AP for bottle = 0.6415
train.py 2019-04-15 04:05:33	AP for car = 0.8889
train.py 2019-04-15 04:05:33	AP for pottedplant = 0.5045
train.py 2019-04-15 04:05:33	AP for tvmonitor = 0.7936
train.py 2019-04-15 04:05:33	AP for chair = 0.5975
train.py 2019-04-15 04:05:33	AP for bird = 0.7882
train.py 2019-04-15 04:05:33	AP for boat = 0.6267
train.py 2019-04-15 04:05:33	AP for motorbike = 0.8456
train.py 2019-04-15 04:05:33	mAP = 0.7878
train.py 2019-04-15 04:05:33	Average time for preprocess (cpu) :	5.25 ms
train.py 2019-04-15 04:05:33	Average time for postprocess (cpu) :	5.94 ms
train.py 2019-04-15 04:05:33	Average time for nms (cpu) :	12.20 ms
train.py 2019-04-15 04:05:33	Average time for detect a image (cpu + gpu) :	41.68 ms
train.py 2019-04-15 04:05:33	Average time for inference (gpu) :	18.07 ms
train.py 2019-04-15 04:05:36	Saved model:	weights/yolo.ckpt-85-0.7878
train.py 2019-04-15 04:06:12	Learn rate:	0.000011	period:	86	step:	118642	train_loss:	9.7985
train.py 2019-04-15 04:07:50	Learn rate:	0.000010	period:	86	step:	118779	train_loss:	10.5077
train.py 2019-04-15 04:09:32	Learn rate:	0.000010	period:	86	step:	118916	train_loss:	10.4404
train.py 2019-04-15 04:11:15	Learn rate:	0.000010	period:	86	step:	119053	train_loss:	10.7392
train.py 2019-04-15 04:12:56	Learn rate:	0.000010	period:	86	step:	119190	train_loss:	10.2901
train.py 2019-04-15 04:14:38	Learn rate:	0.000010	period:	86	step:	119327	train_loss:	10.5319
train.py 2019-04-15 04:16:20	Learn rate:	0.000010	period:	86	step:	119464	train_loss:	10.4221
train.py 2019-04-15 04:18:05	Learn rate:	0.000010	period:	86	step:	119601	train_loss:	10.8479
train.py 2019-04-15 04:19:48	Learn rate:	0.000010	period:	86	step:	119738	train_loss:	10.5600
train.py 2019-04-15 04:21:22	Learn rate:	0.000009	period:	86	step:	119875	train_loss:	10.3861
train.py 2019-04-15 04:26:52	AP for sheep = 0.8099
train.py 2019-04-15 04:26:52	AP for horse = 0.8858
train.py 2019-04-15 04:26:52	AP for bicycle = 0.8784
train.py 2019-04-15 04:26:52	AP for aeroplane = 0.8419
train.py 2019-04-15 04:26:52	AP for cow = 0.8528
train.py 2019-04-15 04:26:52	AP for sofa = 0.7649
train.py 2019-04-15 04:26:52	AP for bus = 0.8637
train.py 2019-04-15 04:26:52	AP for dog = 0.8546
train.py 2019-04-15 04:26:52	AP for cat = 0.8717
train.py 2019-04-15 04:26:52	AP for person = 0.8487
train.py 2019-04-15 04:26:52	AP for train = 0.8437
train.py 2019-04-15 04:26:52	AP for diningtable = 0.7575
train.py 2019-04-15 04:26:52	AP for bottle = 0.6432
train.py 2019-04-15 04:26:52	AP for car = 0.8928
train.py 2019-04-15 04:26:52	AP for pottedplant = 0.5199
train.py 2019-04-15 04:26:52	AP for tvmonitor = 0.7869
train.py 2019-04-15 04:26:52	AP for chair = 0.6080
train.py 2019-04-15 04:26:52	AP for bird = 0.7917
train.py 2019-04-15 04:26:52	AP for boat = 0.6307
train.py 2019-04-15 04:26:52	AP for motorbike = 0.8515
train.py 2019-04-15 04:26:52	mAP = 0.7899
train.py 2019-04-15 04:26:52	Average time for preprocess (cpu) :	5.26 ms
train.py 2019-04-15 04:26:52	Average time for postprocess (cpu) :	6.02 ms
train.py 2019-04-15 04:26:52	Average time for nms (cpu) :	11.37 ms
train.py 2019-04-15 04:26:52	Average time for detect a image (cpu + gpu) :	40.82 ms
train.py 2019-04-15 04:26:52	Average time for inference (gpu) :	17.96 ms
train.py 2019-04-15 04:26:54	Saved model:	weights/yolo.ckpt-86-0.7899
train.py 2019-04-15 04:27:23	Learn rate:	0.000009	period:	87	step:	120012	train_loss:	10.1596
train.py 2019-04-15 04:28:58	Learn rate:	0.000009	period:	87	step:	120149	train_loss:	10.6828
train.py 2019-04-15 04:30:40	Learn rate:	0.000009	period:	87	step:	120286	train_loss:	10.2165
train.py 2019-04-15 04:32:25	Learn rate:	0.000009	period:	87	step:	120423	train_loss:	10.3121
train.py 2019-04-15 04:34:06	Learn rate:	0.000009	period:	87	step:	120560	train_loss:	10.6326
train.py 2019-04-15 04:35:53	Learn rate:	0.000009	period:	87	step:	120697	train_loss:	10.1907
train.py 2019-04-15 04:37:36	Learn rate:	0.000009	period:	87	step:	120834	train_loss:	10.6522
train.py 2019-04-15 04:39:17	Learn rate:	0.000008	period:	87	step:	120971	train_loss:	10.9551
train.py 2019-04-15 04:40:58	Learn rate:	0.000008	period:	87	step:	121108	train_loss:	10.7388
train.py 2019-04-15 04:42:42	Learn rate:	0.000008	period:	87	step:	121245	train_loss:	10.5934
train.py 2019-04-15 04:48:18	AP for sheep = 0.8253
train.py 2019-04-15 04:48:18	AP for horse = 0.8806
train.py 2019-04-15 04:48:19	AP for bicycle = 0.8868
train.py 2019-04-15 04:48:19	AP for aeroplane = 0.8560
train.py 2019-04-15 04:48:19	AP for cow = 0.8559
train.py 2019-04-15 04:48:19	AP for sofa = 0.7661
train.py 2019-04-15 04:48:19	AP for bus = 0.8613
train.py 2019-04-15 04:48:19	AP for dog = 0.8537
train.py 2019-04-15 04:48:19	AP for cat = 0.8717
train.py 2019-04-15 04:48:19	AP for person = 0.8497
train.py 2019-04-15 04:48:19	AP for train = 0.8378
train.py 2019-04-15 04:48:19	AP for diningtable = 0.7622
train.py 2019-04-15 04:48:19	AP for bottle = 0.6463
train.py 2019-04-15 04:48:19	AP for car = 0.8924
train.py 2019-04-15 04:48:19	AP for pottedplant = 0.5182
train.py 2019-04-15 04:48:19	AP for tvmonitor = 0.7935
train.py 2019-04-15 04:48:19	AP for chair = 0.6064
train.py 2019-04-15 04:48:19	AP for bird = 0.7938
train.py 2019-04-15 04:48:19	AP for boat = 0.6410
train.py 2019-04-15 04:48:19	AP for motorbike = 0.8593
train.py 2019-04-15 04:48:19	mAP = 0.7929
train.py 2019-04-15 04:48:19	Average time for preprocess (cpu) :	5.35 ms
train.py 2019-04-15 04:48:19	Average time for postprocess (cpu) :	6.12 ms
train.py 2019-04-15 04:48:19	Average time for nms (cpu) :	11.64 ms
train.py 2019-04-15 04:48:19	Average time for detect a image (cpu + gpu) :	41.72 ms
train.py 2019-04-15 04:48:19	Average time for inference (gpu) :	18.42 ms
train.py 2019-04-15 04:48:22	Saved model:	weights/yolo.ckpt-87-0.7929
train.py 2019-04-15 04:48:45	Learn rate:	0.000008	period:	88	step:	121382	train_loss:	10.7509
train.py 2019-04-15 04:50:31	Learn rate:	0.000008	period:	88	step:	121519	train_loss:	10.4236
train.py 2019-04-15 04:52:13	Learn rate:	0.000008	period:	88	step:	121656	train_loss:	10.8926
train.py 2019-04-15 04:53:53	Learn rate:	0.000008	period:	88	step:	121793	train_loss:	10.6075
train.py 2019-04-15 04:55:35	Learn rate:	0.000008	period:	88	step:	121930	train_loss:	10.5512
train.py 2019-04-15 04:57:15	Learn rate:	0.000008	period:	88	step:	122067	train_loss:	10.5256
train.py 2019-04-15 04:59:00	Learn rate:	0.000007	period:	88	step:	122204	train_loss:	10.0563
train.py 2019-04-15 05:00:38	Learn rate:	0.000007	period:	88	step:	122341	train_loss:	10.5145
train.py 2019-04-15 05:02:17	Learn rate:	0.000007	period:	88	step:	122478	train_loss:	10.6486
train.py 2019-04-15 05:03:59	Learn rate:	0.000007	period:	88	step:	122615	train_loss:	10.6458
train.py 2019-04-15 05:09:38	AP for sheep = 0.8280
train.py 2019-04-15 05:09:38	AP for horse = 0.8909
train.py 2019-04-15 05:09:38	AP for bicycle = 0.8832
train.py 2019-04-15 05:09:38	AP for aeroplane = 0.8504
train.py 2019-04-15 05:09:38	AP for cow = 0.8548
train.py 2019-04-15 05:09:38	AP for sofa = 0.7609
train.py 2019-04-15 05:09:38	AP for bus = 0.8665
train.py 2019-04-15 05:09:38	AP for dog = 0.8507
train.py 2019-04-15 05:09:38	AP for cat = 0.8754
train.py 2019-04-15 05:09:38	AP for person = 0.8517
train.py 2019-04-15 05:09:38	AP for train = 0.8427
train.py 2019-04-15 05:09:38	AP for diningtable = 0.7595
train.py 2019-04-15 05:09:38	AP for bottle = 0.6420
train.py 2019-04-15 05:09:38	AP for car = 0.8942
train.py 2019-04-15 05:09:38	AP for pottedplant = 0.5209
train.py 2019-04-15 05:09:38	AP for tvmonitor = 0.7976
train.py 2019-04-15 05:09:38	AP for chair = 0.6066
train.py 2019-04-15 05:09:38	AP for bird = 0.7912
train.py 2019-04-15 05:09:38	AP for boat = 0.6464
train.py 2019-04-15 05:09:38	AP for motorbike = 0.8647
train.py 2019-04-15 05:09:38	mAP = 0.7939
train.py 2019-04-15 05:09:38	Average time for preprocess (cpu) :	5.28 ms
train.py 2019-04-15 05:09:38	Average time for postprocess (cpu) :	6.08 ms
train.py 2019-04-15 05:09:38	Average time for nms (cpu) :	11.21 ms
train.py 2019-04-15 05:09:38	Average time for detect a image (cpu + gpu) :	40.96 ms
train.py 2019-04-15 05:09:38	Average time for inference (gpu) :	18.19 ms
train.py 2019-04-15 05:09:41	Saved model:	weights/yolo.ckpt-88-0.7939
train.py 2019-04-15 05:09:57	Learn rate:	0.000007	period:	89	step:	122752	train_loss:	10.4976
train.py 2019-04-15 05:11:38	Learn rate:	0.000007	period:	89	step:	122889	train_loss:	10.7862
train.py 2019-04-15 05:13:22	Learn rate:	0.000007	period:	89	step:	123026	train_loss:	10.1168
train.py 2019-04-15 05:15:00	Learn rate:	0.000007	period:	89	step:	123163	train_loss:	10.6570
train.py 2019-04-15 05:16:43	Learn rate:	0.000007	period:	89	step:	123300	train_loss:	9.8554
train.py 2019-04-15 05:18:29	Learn rate:	0.000006	period:	89	step:	123437	train_loss:	10.6829
train.py 2019-04-15 05:20:09	Learn rate:	0.000006	period:	89	step:	123574	train_loss:	10.2671
train.py 2019-04-15 05:21:48	Learn rate:	0.000006	period:	89	step:	123711	train_loss:	10.5222
train.py 2019-04-15 05:23:28	Learn rate:	0.000006	period:	89	step:	123848	train_loss:	11.0525
train.py 2019-04-15 05:25:10	Learn rate:	0.000006	period:	89	step:	123985	train_loss:	10.7321
train.py 2019-04-15 05:30:58	AP for sheep = 0.8136
train.py 2019-04-15 05:30:58	AP for horse = 0.8889
train.py 2019-04-15 05:30:58	AP for bicycle = 0.8901
train.py 2019-04-15 05:30:58	AP for aeroplane = 0.8369
train.py 2019-04-15 05:30:58	AP for cow = 0.8549
train.py 2019-04-15 05:30:58	AP for sofa = 0.7539
train.py 2019-04-15 05:30:58	AP for bus = 0.8652
train.py 2019-04-15 05:30:58	AP for dog = 0.8474
train.py 2019-04-15 05:30:58	AP for cat = 0.8678
train.py 2019-04-15 05:30:58	AP for person = 0.8453
train.py 2019-04-15 05:30:58	AP for train = 0.8610
train.py 2019-04-15 05:30:58	AP for diningtable = 0.7575
train.py 2019-04-15 05:30:58	AP for bottle = 0.6436
train.py 2019-04-15 05:30:58	AP for car = 0.8913
train.py 2019-04-15 05:30:58	AP for pottedplant = 0.5099
train.py 2019-04-15 05:30:58	AP for tvmonitor = 0.7828
train.py 2019-04-15 05:30:58	AP for chair = 0.5979
train.py 2019-04-15 05:30:58	AP for bird = 0.7876
train.py 2019-04-15 05:30:58	AP for boat = 0.6366
train.py 2019-04-15 05:30:58	AP for motorbike = 0.8580
train.py 2019-04-15 05:30:58	mAP = 0.7895
train.py 2019-04-15 05:30:58	Average time for preprocess (cpu) :	5.23 ms
train.py 2019-04-15 05:30:58	Average time for postprocess (cpu) :	6.01 ms
train.py 2019-04-15 05:30:58	Average time for nms (cpu) :	11.89 ms
train.py 2019-04-15 05:30:58	Average time for detect a image (cpu + gpu) :	41.35 ms
train.py 2019-04-15 05:30:58	Average time for inference (gpu) :	18.01 ms
train.py 2019-04-15 05:31:01	Saved model:	weights/yolo.ckpt-89-0.7895
train.py 2019-04-15 05:31:10	Learn rate:	0.000006	period:	90	step:	124122	train_loss:	10.2674
train.py 2019-04-15 05:32:49	Learn rate:	0.000006	period:	90	step:	124259	train_loss:	9.8271
train.py 2019-04-15 05:34:30	Learn rate:	0.000006	period:	90	step:	124396	train_loss:	10.4091
train.py 2019-04-15 05:36:12	Learn rate:	0.000006	period:	90	step:	124533	train_loss:	11.1406
train.py 2019-04-15 05:37:51	Learn rate:	0.000006	period:	90	step:	124670	train_loss:	10.2499
train.py 2019-04-15 05:39:38	Learn rate:	0.000005	period:	90	step:	124807	train_loss:	10.7309
train.py 2019-04-15 05:41:18	Learn rate:	0.000005	period:	90	step:	124944	train_loss:	10.6762
train.py 2019-04-15 05:42:59	Learn rate:	0.000005	period:	90	step:	125081	train_loss:	9.9840
train.py 2019-04-15 05:44:39	Learn rate:	0.000005	period:	90	step:	125218	train_loss:	10.6524
train.py 2019-04-15 05:46:21	Learn rate:	0.000005	period:	90	step:	125355	train_loss:	10.2530
train.py 2019-04-15 05:52:27	AP for sheep = 0.8186
train.py 2019-04-15 05:52:27	AP for horse = 0.8820
train.py 2019-04-15 05:52:27	AP for bicycle = 0.8792
train.py 2019-04-15 05:52:27	AP for aeroplane = 0.8358
train.py 2019-04-15 05:52:27	AP for cow = 0.8555
train.py 2019-04-15 05:52:27	AP for sofa = 0.7534
train.py 2019-04-15 05:52:27	AP for bus = 0.8619
train.py 2019-04-15 05:52:27	AP for dog = 0.8454
train.py 2019-04-15 05:52:27	AP for cat = 0.8618
train.py 2019-04-15 05:52:27	AP for person = 0.8456
train.py 2019-04-15 05:52:27	AP for train = 0.8609
train.py 2019-04-15 05:52:27	AP for diningtable = 0.7463
train.py 2019-04-15 05:52:27	AP for bottle = 0.6393
train.py 2019-04-15 05:52:27	AP for car = 0.8882
train.py 2019-04-15 05:52:27	AP for pottedplant = 0.5015
train.py 2019-04-15 05:52:27	AP for tvmonitor = 0.7845
train.py 2019-04-15 05:52:27	AP for chair = 0.5956
train.py 2019-04-15 05:52:27	AP for bird = 0.7837
train.py 2019-04-15 05:52:27	AP for boat = 0.6351
train.py 2019-04-15 05:52:27	AP for motorbike = 0.8548
train.py 2019-04-15 05:52:27	mAP = 0.7864
train.py 2019-04-15 05:52:27	Average time for preprocess (cpu) :	5.27 ms
train.py 2019-04-15 05:52:27	Average time for postprocess (cpu) :	5.99 ms
train.py 2019-04-15 05:52:27	Average time for nms (cpu) :	12.90 ms
train.py 2019-04-15 05:52:27	Average time for detect a image (cpu + gpu) :	42.39 ms
train.py 2019-04-15 05:52:27	Average time for inference (gpu) :	18.03 ms
train.py 2019-04-15 05:52:30	Saved model:	weights/yolo.ckpt-90-0.7864
train.py 2019-04-15 05:52:34	Learn rate:	0.000005	period:	91	step:	125492	train_loss:	10.5080
train.py 2019-04-15 05:54:14	Learn rate:	0.000005	period:	91	step:	125629	train_loss:	10.7598
train.py 2019-04-15 05:56:00	Learn rate:	0.000005	period:	91	step:	125766	train_loss:	10.8817
train.py 2019-04-15 05:57:42	Learn rate:	0.000005	period:	91	step:	125903	train_loss:	10.2504
train.py 2019-04-15 05:59:23	Learn rate:	0.000005	period:	91	step:	126040	train_loss:	10.4364
train.py 2019-04-15 06:00:59	Learn rate:	0.000005	period:	91	step:	126177	train_loss:	10.4054
train.py 2019-04-15 06:02:42	Learn rate:	0.000005	period:	91	step:	126314	train_loss:	10.6419
train.py 2019-04-15 06:04:19	Learn rate:	0.000004	period:	91	step:	126451	train_loss:	10.5599
train.py 2019-04-15 06:06:00	Learn rate:	0.000004	period:	91	step:	126588	train_loss:	10.5128
train.py 2019-04-15 06:07:37	Learn rate:	0.000004	period:	91	step:	126725	train_loss:	10.6695
train.py 2019-04-15 06:09:19	Learn rate:	0.000004	period:	91	step:	126862	train_loss:	10.3807
train.py 2019-04-15 06:13:45	AP for sheep = 0.8153
train.py 2019-04-15 06:13:45	AP for horse = 0.8864
train.py 2019-04-15 06:13:45	AP for bicycle = 0.8803
train.py 2019-04-15 06:13:45	AP for aeroplane = 0.8492
train.py 2019-04-15 06:13:45	AP for cow = 0.8641
train.py 2019-04-15 06:13:45	AP for sofa = 0.7611
train.py 2019-04-15 06:13:45	AP for bus = 0.8697
train.py 2019-04-15 06:13:45	AP for dog = 0.8552
train.py 2019-04-15 06:13:45	AP for cat = 0.8696
train.py 2019-04-15 06:13:45	AP for person = 0.8496
train.py 2019-04-15 06:13:45	AP for train = 0.8488
train.py 2019-04-15 06:13:45	AP for diningtable = 0.7534
train.py 2019-04-15 06:13:45	AP for bottle = 0.6532
train.py 2019-04-15 06:13:45	AP for car = 0.8917
train.py 2019-04-15 06:13:45	AP for pottedplant = 0.5215
train.py 2019-04-15 06:13:45	AP for tvmonitor = 0.7905
train.py 2019-04-15 06:13:45	AP for chair = 0.6080
train.py 2019-04-15 06:13:45	AP for bird = 0.7859
train.py 2019-04-15 06:13:45	AP for boat = 0.6388
train.py 2019-04-15 06:13:45	AP for motorbike = 0.8595
train.py 2019-04-15 06:13:45	mAP = 0.7926
train.py 2019-04-15 06:13:45	Average time for preprocess (cpu) :	5.28 ms
train.py 2019-04-15 06:13:45	Average time for postprocess (cpu) :	6.05 ms
train.py 2019-04-15 06:13:45	Average time for nms (cpu) :	12.10 ms
train.py 2019-04-15 06:13:45	Average time for detect a image (cpu + gpu) :	41.81 ms
train.py 2019-04-15 06:13:45	Average time for inference (gpu) :	18.16 ms
train.py 2019-04-15 06:13:48	Saved model:	weights/yolo.ckpt-91-0.7926
train.py 2019-04-15 06:15:27	Learn rate:	0.000004	period:	92	step:	126999	train_loss:	10.9754
train.py 2019-04-15 06:17:17	Learn rate:	0.000004	period:	92	step:	127136	train_loss:	11.1096
train.py 2019-04-15 06:18:59	Learn rate:	0.000004	period:	92	step:	127273	train_loss:	10.3394
train.py 2019-04-15 06:20:39	Learn rate:	0.000004	period:	92	step:	127410	train_loss:	9.9780
train.py 2019-04-15 06:22:19	Learn rate:	0.000004	period:	92	step:	127547	train_loss:	10.4035
train.py 2019-04-15 06:23:56	Learn rate:	0.000004	period:	92	step:	127684	train_loss:	10.5016
train.py 2019-04-15 06:25:34	Learn rate:	0.000004	period:	92	step:	127821	train_loss:	10.8105
train.py 2019-04-15 06:27:17	Learn rate:	0.000004	period:	92	step:	127958	train_loss:	10.2027
train.py 2019-04-15 06:29:01	Learn rate:	0.000004	period:	92	step:	128095	train_loss:	10.7176
train.py 2019-04-15 06:30:41	Learn rate:	0.000003	period:	92	step:	128232	train_loss:	10.1748
train.py 2019-04-15 06:35:19	AP for sheep = 0.8193
train.py 2019-04-15 06:35:19	AP for horse = 0.8879
train.py 2019-04-15 06:35:19	AP for bicycle = 0.8819
train.py 2019-04-15 06:35:19	AP for aeroplane = 0.8325
train.py 2019-04-15 06:35:19	AP for cow = 0.8487
train.py 2019-04-15 06:35:19	AP for sofa = 0.7499
train.py 2019-04-15 06:35:19	AP for bus = 0.8588
train.py 2019-04-15 06:35:19	AP for dog = 0.8527
train.py 2019-04-15 06:35:19	AP for cat = 0.8671
train.py 2019-04-15 06:35:19	AP for person = 0.8461
train.py 2019-04-15 06:35:19	AP for train = 0.8602
train.py 2019-04-15 06:35:19	AP for diningtable = 0.7524
train.py 2019-04-15 06:35:19	AP for bottle = 0.6486
train.py 2019-04-15 06:35:19	AP for car = 0.8870
train.py 2019-04-15 06:35:19	AP for pottedplant = 0.5099
train.py 2019-04-15 06:35:19	AP for tvmonitor = 0.7873
train.py 2019-04-15 06:35:19	AP for chair = 0.6003
train.py 2019-04-15 06:35:19	AP for bird = 0.7768
train.py 2019-04-15 06:35:19	AP for boat = 0.6396
train.py 2019-04-15 06:35:19	AP for motorbike = 0.8523
train.py 2019-04-15 06:35:19	mAP = 0.7880
train.py 2019-04-15 06:35:19	Average time for preprocess (cpu) :	5.25 ms
train.py 2019-04-15 06:35:19	Average time for postprocess (cpu) :	5.97 ms
train.py 2019-04-15 06:35:19	Average time for nms (cpu) :	13.30 ms
train.py 2019-04-15 06:35:19	Average time for detect a image (cpu + gpu) :	42.69 ms
train.py 2019-04-15 06:35:19	Average time for inference (gpu) :	17.94 ms
train.py 2019-04-15 06:35:21	Saved model:	weights/yolo.ckpt-92-0.7880
train.py 2019-04-15 06:36:52	Learn rate:	0.000003	period:	93	step:	128369	train_loss:	10.0165
train.py 2019-04-15 06:38:31	Learn rate:	0.000003	period:	93	step:	128506	train_loss:	9.7675
train.py 2019-04-15 06:40:12	Learn rate:	0.000003	period:	93	step:	128643	train_loss:	10.5166
train.py 2019-04-15 06:41:54	Learn rate:	0.000003	period:	93	step:	128780	train_loss:	10.6316
train.py 2019-04-15 06:43:34	Learn rate:	0.000003	period:	93	step:	128917	train_loss:	10.6621
train.py 2019-04-15 06:45:16	Learn rate:	0.000003	period:	93	step:	129054	train_loss:	10.6908
train.py 2019-04-15 06:46:54	Learn rate:	0.000003	period:	93	step:	129191	train_loss:	10.2880
train.py 2019-04-15 06:48:39	Learn rate:	0.000003	period:	93	step:	129328	train_loss:	10.2746
train.py 2019-04-15 06:50:19	Learn rate:	0.000003	period:	93	step:	129465	train_loss:	10.0733
train.py 2019-04-15 06:51:59	Learn rate:	0.000003	period:	93	step:	129602	train_loss:	10.4749
train.py 2019-04-15 06:56:43	AP for sheep = 0.8265
train.py 2019-04-15 06:56:43	AP for horse = 0.8819
train.py 2019-04-15 06:56:43	AP for bicycle = 0.8815
train.py 2019-04-15 06:56:43	AP for aeroplane = 0.8516
train.py 2019-04-15 06:56:43	AP for cow = 0.8591
train.py 2019-04-15 06:56:43	AP for sofa = 0.7614
train.py 2019-04-15 06:56:43	AP for bus = 0.8637
train.py 2019-04-15 06:56:43	AP for dog = 0.8489
train.py 2019-04-15 06:56:43	AP for cat = 0.8729
train.py 2019-04-15 06:56:43	AP for person = 0.8457
train.py 2019-04-15 06:56:43	AP for train = 0.8589
train.py 2019-04-15 06:56:43	AP for diningtable = 0.7575
train.py 2019-04-15 06:56:43	AP for bottle = 0.6460
train.py 2019-04-15 06:56:43	AP for car = 0.8889
train.py 2019-04-15 06:56:43	AP for pottedplant = 0.5159
train.py 2019-04-15 06:56:43	AP for tvmonitor = 0.7978
train.py 2019-04-15 06:56:43	AP for chair = 0.6038
train.py 2019-04-15 06:56:43	AP for bird = 0.7856
train.py 2019-04-15 06:56:43	AP for boat = 0.6385
train.py 2019-04-15 06:56:43	AP for motorbike = 0.8563
train.py 2019-04-15 06:56:43	mAP = 0.7921
train.py 2019-04-15 06:56:43	Average time for preprocess (cpu) :	5.31 ms
train.py 2019-04-15 06:56:43	Average time for postprocess (cpu) :	6.22 ms
train.py 2019-04-15 06:56:43	Average time for nms (cpu) :	12.14 ms
train.py 2019-04-15 06:56:43	Average time for detect a image (cpu + gpu) :	42.48 ms
train.py 2019-04-15 06:56:43	Average time for inference (gpu) :	18.58 ms
train.py 2019-04-15 06:56:46	Saved model:	weights/yolo.ckpt-93-0.7921
train.py 2019-04-15 06:58:08	Learn rate:	0.000003	period:	94	step:	129739	train_loss:	10.5084
train.py 2019-04-15 06:59:51	Learn rate:	0.000003	period:	94	step:	129876	train_loss:	10.3757
train.py 2019-04-15 07:01:36	Learn rate:	0.000003	period:	94	step:	130013	train_loss:	10.4170
train.py 2019-04-15 07:03:18	Learn rate:	0.000003	period:	94	step:	130150	train_loss:	9.9107
train.py 2019-04-15 07:04:59	Learn rate:	0.000003	period:	94	step:	130287	train_loss:	10.5052
train.py 2019-04-15 07:06:43	Learn rate:	0.000002	period:	94	step:	130424	train_loss:	10.1505
train.py 2019-04-15 07:08:25	Learn rate:	0.000002	period:	94	step:	130561	train_loss:	10.4292
train.py 2019-04-15 07:10:11	Learn rate:	0.000002	period:	94	step:	130698	train_loss:	11.2389
train.py 2019-04-15 07:11:58	Learn rate:	0.000002	period:	94	step:	130835	train_loss:	10.5951
train.py 2019-04-15 07:13:45	Learn rate:	0.000002	period:	94	step:	130972	train_loss:	10.0993
train.py 2019-04-15 07:18:32	AP for sheep = 0.8269
train.py 2019-04-15 07:18:32	AP for horse = 0.8830
train.py 2019-04-15 07:18:32	AP for bicycle = 0.8816
train.py 2019-04-15 07:18:32	AP for aeroplane = 0.8523
train.py 2019-04-15 07:18:32	AP for cow = 0.8567
train.py 2019-04-15 07:18:32	AP for sofa = 0.7606
train.py 2019-04-15 07:18:32	AP for bus = 0.8632
train.py 2019-04-15 07:18:32	AP for dog = 0.8554
train.py 2019-04-15 07:18:32	AP for cat = 0.8723
train.py 2019-04-15 07:18:32	AP for person = 0.8502
train.py 2019-04-15 07:18:32	AP for train = 0.8514
train.py 2019-04-15 07:18:32	AP for diningtable = 0.7508
train.py 2019-04-15 07:18:32	AP for bottle = 0.6478
train.py 2019-04-15 07:18:32	AP for car = 0.8897
train.py 2019-04-15 07:18:32	AP for pottedplant = 0.5170
train.py 2019-04-15 07:18:32	AP for tvmonitor = 0.7937
train.py 2019-04-15 07:18:32	AP for chair = 0.6052
train.py 2019-04-15 07:18:32	AP for bird = 0.7884
train.py 2019-04-15 07:18:32	AP for boat = 0.6424
train.py 2019-04-15 07:18:32	AP for motorbike = 0.8613
train.py 2019-04-15 07:18:32	mAP = 0.7925
train.py 2019-04-15 07:18:32	Average time for preprocess (cpu) :	5.32 ms
train.py 2019-04-15 07:18:32	Average time for postprocess (cpu) :	6.25 ms
train.py 2019-04-15 07:18:32	Average time for nms (cpu) :	11.37 ms
train.py 2019-04-15 07:18:32	Average time for detect a image (cpu + gpu) :	41.92 ms
train.py 2019-04-15 07:18:32	Average time for inference (gpu) :	18.74 ms
train.py 2019-04-15 07:18:34	Saved model:	weights/yolo.ckpt-94-0.7925
train.py 2019-04-15 07:19:56	Learn rate:	0.000002	period:	95	step:	131109	train_loss:	10.5315
train.py 2019-04-15 07:21:40	Learn rate:	0.000002	period:	95	step:	131246	train_loss:	10.0965
train.py 2019-04-15 07:23:24	Learn rate:	0.000002	period:	95	step:	131383	train_loss:	10.2470
train.py 2019-04-15 07:25:03	Learn rate:	0.000002	period:	95	step:	131520	train_loss:	10.2978
train.py 2019-04-15 07:26:49	Learn rate:	0.000002	period:	95	step:	131657	train_loss:	10.3657
train.py 2019-04-15 07:28:26	Learn rate:	0.000002	period:	95	step:	131794	train_loss:	10.3480
train.py 2019-04-15 07:30:13	Learn rate:	0.000002	period:	95	step:	131931	train_loss:	10.6039
train.py 2019-04-15 07:31:51	Learn rate:	0.000002	period:	95	step:	132068	train_loss:	10.3031
train.py 2019-04-15 07:33:33	Learn rate:	0.000002	period:	95	step:	132205	train_loss:	10.0329
train.py 2019-04-15 07:35:15	Learn rate:	0.000002	period:	95	step:	132342	train_loss:	11.1044
train.py 2019-04-15 07:40:10	AP for sheep = 0.8194
train.py 2019-04-15 07:40:10	AP for horse = 0.8934
train.py 2019-04-15 07:40:10	AP for bicycle = 0.8810
train.py 2019-04-15 07:40:10	AP for aeroplane = 0.8276
train.py 2019-04-15 07:40:10	AP for cow = 0.8482
train.py 2019-04-15 07:40:10	AP for sofa = 0.7425
train.py 2019-04-15 07:40:10	AP for bus = 0.8675
train.py 2019-04-15 07:40:10	AP for dog = 0.8513
train.py 2019-04-15 07:40:10	AP for cat = 0.8693
train.py 2019-04-15 07:40:10	AP for person = 0.8416
train.py 2019-04-15 07:40:10	AP for train = 0.8607
train.py 2019-04-15 07:40:10	AP for diningtable = 0.7476
train.py 2019-04-15 07:40:10	AP for bottle = 0.6351
train.py 2019-04-15 07:40:10	AP for car = 0.8854
train.py 2019-04-15 07:40:10	AP for pottedplant = 0.4988
train.py 2019-04-15 07:40:10	AP for tvmonitor = 0.7854
train.py 2019-04-15 07:40:10	AP for chair = 0.5892
train.py 2019-04-15 07:40:10	AP for bird = 0.7784
train.py 2019-04-15 07:40:10	AP for boat = 0.6262
train.py 2019-04-15 07:40:10	AP for motorbike = 0.8504
train.py 2019-04-15 07:40:10	mAP = 0.7850
train.py 2019-04-15 07:40:10	Average time for preprocess (cpu) :	5.29 ms
train.py 2019-04-15 07:40:10	Average time for postprocess (cpu) :	6.11 ms
train.py 2019-04-15 07:40:10	Average time for nms (cpu) :	13.14 ms
train.py 2019-04-15 07:40:10	Average time for detect a image (cpu + gpu) :	42.71 ms
train.py 2019-04-15 07:40:10	Average time for inference (gpu) :	17.96 ms
train.py 2019-04-15 07:40:14	Saved model:	weights/yolo.ckpt-95-0.7850
train.py 2019-04-15 07:41:26	Learn rate:	0.000002	period:	96	step:	132479	train_loss:	9.9273
train.py 2019-04-15 07:43:08	Learn rate:	0.000002	period:	96	step:	132616	train_loss:	10.6446
train.py 2019-04-15 07:44:55	Learn rate:	0.000002	period:	96	step:	132753	train_loss:	10.5722
train.py 2019-04-15 07:46:29	Learn rate:	0.000002	period:	96	step:	132890	train_loss:	10.3347
train.py 2019-04-15 07:48:14	Learn rate:	0.000002	period:	96	step:	133027	train_loss:	10.4166
train.py 2019-04-15 07:49:57	Learn rate:	0.000002	period:	96	step:	133164	train_loss:	10.2553
train.py 2019-04-15 07:51:33	Learn rate:	0.000002	period:	96	step:	133301	train_loss:	10.1823
train.py 2019-04-15 07:53:15	Learn rate:	0.000002	period:	96	step:	133438	train_loss:	10.5445
train.py 2019-04-15 07:54:59	Learn rate:	0.000001	period:	96	step:	133575	train_loss:	10.5600
train.py 2019-04-15 07:56:44	Learn rate:	0.000001	period:	96	step:	133712	train_loss:	11.1683
train.py 2019-04-15 08:01:36	AP for sheep = 0.8223
train.py 2019-04-15 08:01:36	AP for horse = 0.8877
train.py 2019-04-15 08:01:36	AP for bicycle = 0.8821
train.py 2019-04-15 08:01:36	AP for aeroplane = 0.8418
train.py 2019-04-15 08:01:36	AP for cow = 0.8575
train.py 2019-04-15 08:01:36	AP for sofa = 0.7561
train.py 2019-04-15 08:01:36	AP for bus = 0.8600
train.py 2019-04-15 08:01:36	AP for dog = 0.8462
train.py 2019-04-15 08:01:36	AP for cat = 0.8694
train.py 2019-04-15 08:01:36	AP for person = 0.8447
train.py 2019-04-15 08:01:36	AP for train = 0.8661
train.py 2019-04-15 08:01:36	AP for diningtable = 0.7502
train.py 2019-04-15 08:01:36	AP for bottle = 0.6437
train.py 2019-04-15 08:01:36	AP for car = 0.8897
train.py 2019-04-15 08:01:36	AP for pottedplant = 0.5176
train.py 2019-04-15 08:01:36	AP for tvmonitor = 0.7916
train.py 2019-04-15 08:01:36	AP for chair = 0.5981
train.py 2019-04-15 08:01:36	AP for bird = 0.7863
train.py 2019-04-15 08:01:36	AP for boat = 0.6242
train.py 2019-04-15 08:01:36	AP for motorbike = 0.8559
train.py 2019-04-15 08:01:36	mAP = 0.7896
train.py 2019-04-15 08:01:36	Average time for preprocess (cpu) :	5.28 ms
train.py 2019-04-15 08:01:36	Average time for postprocess (cpu) :	6.12 ms
train.py 2019-04-15 08:01:36	Average time for nms (cpu) :	11.97 ms
train.py 2019-04-15 08:01:36	Average time for detect a image (cpu + gpu) :	41.86 ms
train.py 2019-04-15 08:01:36	Average time for inference (gpu) :	18.28 ms
train.py 2019-04-15 08:01:39	Saved model:	weights/yolo.ckpt-96-0.7896
train.py 2019-04-15 08:02:45	Learn rate:	0.000001	period:	97	step:	133849	train_loss:	10.2490
train.py 2019-04-15 08:04:30	Learn rate:	0.000001	period:	97	step:	133986	train_loss:	10.1315
train.py 2019-04-15 08:06:10	Learn rate:	0.000001	period:	97	step:	134123	train_loss:	10.1031
train.py 2019-04-15 08:07:49	Learn rate:	0.000001	period:	97	step:	134260	train_loss:	10.6197
train.py 2019-04-15 08:09:31	Learn rate:	0.000001	period:	97	step:	134397	train_loss:	10.5894
train.py 2019-04-15 08:11:16	Learn rate:	0.000001	period:	97	step:	134534	train_loss:	9.9408
train.py 2019-04-15 08:12:58	Learn rate:	0.000001	period:	97	step:	134671	train_loss:	10.5017
train.py 2019-04-15 08:14:39	Learn rate:	0.000001	period:	97	step:	134808	train_loss:	10.1950
train.py 2019-04-15 08:16:19	Learn rate:	0.000001	period:	97	step:	134945	train_loss:	10.2559
train.py 2019-04-15 08:18:07	Learn rate:	0.000001	period:	97	step:	135082	train_loss:	10.4315
train.py 2019-04-15 08:23:03	AP for sheep = 0.8263
train.py 2019-04-15 08:23:03	AP for horse = 0.8856
train.py 2019-04-15 08:23:03	AP for bicycle = 0.8810
train.py 2019-04-15 08:23:03	AP for aeroplane = 0.8445
train.py 2019-04-15 08:23:03	AP for cow = 0.8572
train.py 2019-04-15 08:23:03	AP for sofa = 0.7620
train.py 2019-04-15 08:23:03	AP for bus = 0.8661
train.py 2019-04-15 08:23:03	AP for dog = 0.8579
train.py 2019-04-15 08:23:03	AP for cat = 0.8658
train.py 2019-04-15 08:23:03	AP for person = 0.8477
train.py 2019-04-15 08:23:03	AP for train = 0.8591
train.py 2019-04-15 08:23:03	AP for diningtable = 0.7606
train.py 2019-04-15 08:23:03	AP for bottle = 0.6480
train.py 2019-04-15 08:23:03	AP for car = 0.8911
train.py 2019-04-15 08:23:03	AP for pottedplant = 0.5187
train.py 2019-04-15 08:23:03	AP for tvmonitor = 0.7943
train.py 2019-04-15 08:23:03	AP for chair = 0.6056
train.py 2019-04-15 08:23:03	AP for bird = 0.7878
train.py 2019-04-15 08:23:03	AP for boat = 0.6372
train.py 2019-04-15 08:23:03	AP for motorbike = 0.8549
train.py 2019-04-15 08:23:03	mAP = 0.7926
train.py 2019-04-15 08:23:03	Average time for preprocess (cpu) :	5.35 ms
train.py 2019-04-15 08:23:03	Average time for postprocess (cpu) :	6.12 ms
train.py 2019-04-15 08:23:03	Average time for nms (cpu) :	11.13 ms
train.py 2019-04-15 08:23:03	Average time for detect a image (cpu + gpu) :	41.02 ms
train.py 2019-04-15 08:23:03	Average time for inference (gpu) :	18.22 ms
train.py 2019-04-15 08:23:06	Saved model:	weights/yolo.ckpt-97-0.7926
train.py 2019-04-15 08:24:07	Learn rate:	0.000001	period:	98	step:	135219	train_loss:	10.0537
train.py 2019-04-15 08:25:47	Learn rate:	0.000001	period:	98	step:	135356	train_loss:	10.8442
train.py 2019-04-15 08:27:26	Learn rate:	0.000001	period:	98	step:	135493	train_loss:	10.1774
train.py 2019-04-15 08:29:06	Learn rate:	0.000001	period:	98	step:	135630	train_loss:	10.1446
train.py 2019-04-15 08:30:51	Learn rate:	0.000001	period:	98	step:	135767	train_loss:	10.3711
train.py 2019-04-15 08:32:33	Learn rate:	0.000001	period:	98	step:	135904	train_loss:	10.3410
train.py 2019-04-15 08:34:15	Learn rate:	0.000001	period:	98	step:	136041	train_loss:	10.2260
train.py 2019-04-15 08:35:59	Learn rate:	0.000001	period:	98	step:	136178	train_loss:	9.6947
train.py 2019-04-15 08:37:41	Learn rate:	0.000001	period:	98	step:	136315	train_loss:	10.3156
train.py 2019-04-15 08:39:26	Learn rate:	0.000001	period:	98	step:	136452	train_loss:	10.5808
train.py 2019-04-15 08:45:00	AP for sheep = 0.8208
train.py 2019-04-15 08:45:00	AP for horse = 0.8840
train.py 2019-04-15 08:45:00	AP for bicycle = 0.8633
train.py 2019-04-15 08:45:00	AP for aeroplane = 0.8070
train.py 2019-04-15 08:45:00	AP for cow = 0.8275
train.py 2019-04-15 08:45:00	AP for sofa = 0.7357
train.py 2019-04-15 08:45:00	AP for bus = 0.8463
train.py 2019-04-15 08:45:00	AP for dog = 0.8281
train.py 2019-04-15 08:45:00	AP for cat = 0.8658
train.py 2019-04-15 08:45:00	AP for person = 0.8353
train.py 2019-04-15 08:45:00	AP for train = 0.8480
train.py 2019-04-15 08:45:00	AP for diningtable = 0.7382
train.py 2019-04-15 08:45:00	AP for bottle = 0.6306
train.py 2019-04-15 08:45:00	AP for car = 0.8799
train.py 2019-04-15 08:45:00	AP for pottedplant = 0.4731
train.py 2019-04-15 08:45:00	AP for tvmonitor = 0.7819
train.py 2019-04-15 08:45:00	AP for chair = 0.5775
train.py 2019-04-15 08:45:00	AP for bird = 0.7768
train.py 2019-04-15 08:45:00	AP for boat = 0.6066
train.py 2019-04-15 08:45:00	AP for motorbike = 0.8259
train.py 2019-04-15 08:45:00	mAP = 0.7726
train.py 2019-04-15 08:45:00	Average time for preprocess (cpu) :	5.49 ms
train.py 2019-04-15 08:45:00	Average time for postprocess (cpu) :	6.11 ms
train.py 2019-04-15 08:45:00	Average time for nms (cpu) :	15.73 ms
train.py 2019-04-15 08:45:00	Average time for detect a image (cpu + gpu) :	45.84 ms
train.py 2019-04-15 08:45:00	Average time for inference (gpu) :	18.27 ms
train.py 2019-04-15 08:45:02	Saved model:	weights/yolo.ckpt-98-0.7726
train.py 2019-04-15 08:45:53	Learn rate:	0.000001	period:	99	step:	136589	train_loss:	10.2124
train.py 2019-04-15 08:47:40	Learn rate:	0.000001	period:	99	step:	136726	train_loss:	10.2258
train.py 2019-04-15 08:49:20	Learn rate:	0.000001	period:	99	step:	136863	train_loss:	10.1889
train.py 2019-04-15 08:50:59	Learn rate:	0.000001	period:	99	step:	137000	train_loss:	10.7772
train.py 2019-04-15 08:52:42	Learn rate:	0.000001	period:	99	step:	137137	train_loss:	10.7331
train.py 2019-04-15 08:54:31	Learn rate:	0.000001	period:	99	step:	137274	train_loss:	10.4294
train.py 2019-04-15 08:56:11	Learn rate:	0.000001	period:	99	step:	137411	train_loss:	10.5220
train.py 2019-04-15 08:57:56	Learn rate:	0.000001	period:	99	step:	137548	train_loss:	10.1654
train.py 2019-04-15 08:59:37	Learn rate:	0.000001	period:	99	step:	137685	train_loss:	10.1265
train.py 2019-04-15 09:01:21	Learn rate:	0.000001	period:	99	step:	137822	train_loss:	10.5266
train.py 2019-04-15 09:06:40	AP for sheep = 0.8241
train.py 2019-04-15 09:06:40	AP for horse = 0.8828
train.py 2019-04-15 09:06:40	AP for bicycle = 0.8858
train.py 2019-04-15 09:06:40	AP for aeroplane = 0.8381
train.py 2019-04-15 09:06:40	AP for cow = 0.8494
train.py 2019-04-15 09:06:40	AP for sofa = 0.7593
train.py 2019-04-15 09:06:40	AP for bus = 0.8602
train.py 2019-04-15 09:06:40	AP for dog = 0.8487
train.py 2019-04-15 09:06:40	AP for cat = 0.8722
train.py 2019-04-15 09:06:40	AP for person = 0.8470
train.py 2019-04-15 09:06:40	AP for train = 0.8606
train.py 2019-04-15 09:06:40	AP for diningtable = 0.7494
train.py 2019-04-15 09:06:40	AP for bottle = 0.6455
train.py 2019-04-15 09:06:40	AP for car = 0.8892
train.py 2019-04-15 09:06:40	AP for pottedplant = 0.5042
train.py 2019-04-15 09:06:40	AP for tvmonitor = 0.7913
train.py 2019-04-15 09:06:40	AP for chair = 0.5991
train.py 2019-04-15 09:06:40	AP for bird = 0.7809
train.py 2019-04-15 09:06:40	AP for boat = 0.6380
train.py 2019-04-15 09:06:40	AP for motorbike = 0.8519
train.py 2019-04-15 09:06:40	mAP = 0.7889
train.py 2019-04-15 09:06:40	Average time for preprocess (cpu) :	5.41 ms
train.py 2019-04-15 09:06:40	Average time for postprocess (cpu) :	6.15 ms
train.py 2019-04-15 09:06:40	Average time for nms (cpu) :	11.99 ms
train.py 2019-04-15 09:06:40	Average time for detect a image (cpu + gpu) :	41.92 ms
train.py 2019-04-15 09:06:40	Average time for inference (gpu) :	18.16 ms
train.py 2019-04-15 09:06:43	Saved model:	weights/yolo.ckpt-99-0.7889
